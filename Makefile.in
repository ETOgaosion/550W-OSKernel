SHELL := /bin/bash

HOST_CC := gcc

CROSS_COMPILE   := riscv64-unknown-elf-
GCC				:= $(CROSS_COMPILE)gcc
GDB             := $(CROSS_COMPILE)gdb
BUILD_DEBUG     := y

OBJDUMP	:= $(CROSS_COMPILE)objdump
OBJCOPY	:= $(CROSS_COMPILE)objcopy
LD		:= $(CROSS_COMPILE)ld
AR      := $(CROSS_COMPILE)ar
LDFLAGS	:= -z max-page-size=4096
QEMU	:= qemu-system-riscv64
BIOS	:= default
CPUS	:= 2

CFLAGS	= -Wall -Werror -O -fno-omit-frame-pointer -ggdb -g
CFLAGS	+= -march=rv64g -mabi=lp64f
CFLAGS	+= -MD
CFLAGS	+= -mcmodel=medany
CFLAGS	+= -ffreestanding -fno-common -nostdlib -mno-relax
CFLAGS	+= -I.
CFLAGS	+= -fno-stack-protector

BOARD_OPTS	= -machine virt -m 1G -nographic
BOARD_OPTS	+= -smp $(CPUS)
BOARD_OPTS	+= -bios default
BOARD_OPTS	+= -device virtio-blk-device,drive=x0,bus=virtio-mmio-bus.0

QEMU_OPTS	= -machine virt 
QEMU_OPTS	+= -m 2560M
QEMU_OPTS	+= -nographic
QEMU_OPTS	+= -smp ${CPUS}
QEMU_OPTS	+= -bios $(BIOS)
QEMU_OPTS	+= -drive file=sdcard.img,if=none,format=raw,id=x0
QEMU_OPTS	+= -device virtio-blk-device,drive=x0,bus=virtio-mmio-bus.0

PWD		:= $(shell pwd)