<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="zh">
  <compounddef id="sbi_8h" kind="file" language="C++">
    <compoundname>sbi.h</compoundname>
    <includes refid="sbidef_8h" local="no">asm/sbidef.h</includes>
    <includes refid="types_8h" local="no">common/types.h</includes>
    <includedby refid="pgtable_8h" local="no">src/arch/riscv/include/asm/pgtable.h</includedby>
    <includedby refid="io_8c" local="no">src/arch/riscv/sbi/io.c</includedby>
    <includedby refid="fs_8c" local="no">src/fs/fs.c</includedby>
    <includedby refid="main_8c" local="no">src/init/main.c</includedby>
    <includedby refid="irq_8c" local="no">src/kernel/irq/irq.c</includedby>
    <includedby refid="mm_8c" local="no">src/kernel/mm/mm.c</includedby>
    <includedby refid="smp_8c" local="no">src/kernel/sys/smp.c</includedby>
    <incdepgraph>
      <node id="4">
        <label>common/errno.h</label>
        <link refid="errno_8h"/>
      </node>
      <node id="2">
        <label>asm/sbidef.h</label>
        <link refid="sbidef_8h"/>
      </node>
      <node id="3">
        <label>common/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/arch/riscv/include/asm/sbi.h</label>
        <link refid="sbi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="9">
        <label>src/fs/fs.c</label>
        <link refid="fs_8c"/>
      </node>
      <node id="26">
        <label>src/kernel/sync/lock.c</label>
        <link refid="lock_8c"/>
      </node>
      <node id="7">
        <label>src/drivers/plic/plic.c</label>
        <link refid="plic_8c"/>
      </node>
      <node id="2">
        <label>src/arch/riscv/include/asm/pgtable.h</label>
        <link refid="pgtable_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>src/kernel/sys/smp.c</label>
        <link refid="smp_8c"/>
      </node>
      <node id="17">
        <label>src/drivers/screen/screen.c</label>
        <link refid="screen_8c"/>
      </node>
      <node id="13">
        <label>src/include/common/elf.h</label>
        <link refid="elf_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>src/lib/printk.c</label>
        <link refid="printk_8c"/>
      </node>
      <node id="27">
        <label>src/kernel/sync/sync.c</label>
        <link refid="sync_8c"/>
      </node>
      <node id="16">
        <label>src/kernel/sys/pcb.c</label>
        <link refid="pcb_8c"/>
      </node>
      <node id="10">
        <label>src/include/os/syscall.h</label>
        <link refid="include_2os_2syscall_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>src/drivers/virtio/virtio.h</label>
        <link refid="virtio_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>src/kernel/mm/ioremap.c</label>
        <link refid="ioremap_8c"/>
      </node>
      <node id="25">
        <label>src/kernel/sys/time.c</label>
        <link refid="time_8c"/>
      </node>
      <node id="12">
        <label>src/init/main.c</label>
        <link refid="main_8c"/>
      </node>
      <node id="11">
        <label>src/kernel/irq/irq.c</label>
        <link refid="irq_8c"/>
      </node>
      <node id="19">
        <label>src/include/os/irq.h</label>
        <link refid="irq_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>src/kernel/mm/mm.c</label>
        <link refid="mm_8c"/>
      </node>
      <node id="28">
        <label>src/init/vm.c</label>
        <link refid="init_2vm_8c"/>
      </node>
      <node id="29">
        <label>src/lib/elf.c</label>
        <link refid="elf_8c"/>
      </node>
      <node id="23">
        <label>src/arch/riscv/sbi/io.c</label>
        <link refid="io_8c"/>
      </node>
      <node id="22">
        <label>src/include/os/smp.h</label>
        <link refid="smp_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>src/drivers/virtio/virtio_blk.c</label>
        <link refid="virtio__blk_8c"/>
      </node>
      <node id="15">
        <label>src/arch/riscv/include/asm/stack.h</label>
        <link refid="stack_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/arch/riscv/include/asm/sbi.h</label>
        <link refid="sbi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>src/include/os/pcb.h</label>
        <link refid="pcb_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>src/fs/fd.c</label>
        <link refid="fd_8c"/>
      </node>
      <node id="3">
        <label>src/arch/riscv/kernel/init/stack.c</label>
        <link refid="stack_8c"/>
      </node>
      <node id="4">
        <label>src/arch/riscv/kernel/init/vm.c</label>
        <link refid="arch_2riscv_2kernel_2init_2vm_8c"/>
      </node>
      <node id="5">
        <label>src/arch/riscv/kernel/sys/pgtable.c</label>
        <link refid="pgtable_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="sbi_8h_1ae917ff9ed8cf5bc9eee73c667bb859aa" prot="public" static="no">
        <name>SBI_CALL</name>
        <param><defname>which</defname></param>
        <param><defname>arg0</defname></param>
        <param><defname>arg1</defname></param>
        <param><defname>arg2</defname></param>
        <initializer>    ({                                                        \
        register <ref refid="types_8h_1ad6cb5da84246290b3d730166b020f2a8" kindref="member">uintptr_t</ref> a0 asm(&quot;a0&quot;) = (uintptr_t)(arg0);  \
        register <ref refid="types_8h_1ad6cb5da84246290b3d730166b020f2a8" kindref="member">uintptr_t</ref> a1 asm(&quot;a1&quot;) = (uintptr_t)(arg1);  \
        register <ref refid="types_8h_1ad6cb5da84246290b3d730166b020f2a8" kindref="member">uintptr_t</ref> a2 asm(&quot;a2&quot;) = (uintptr_t)(arg2);  \
        register <ref refid="types_8h_1ad6cb5da84246290b3d730166b020f2a8" kindref="member">uintptr_t</ref> a6 asm(&quot;a6&quot;) = (uintptr_t)(0);     \
        register <ref refid="types_8h_1ad6cb5da84246290b3d730166b020f2a8" kindref="member">uintptr_t</ref> <ref refid="sbiasm_8h_1a45444ef5911fbb6e7bc400213bf4271e" kindref="member">a7</ref> asm(&quot;a7&quot;) = (uintptr_t)(which); \
        asm volatile(&quot;ecall&quot;                                  \
                     : &quot;+r&quot;(a0)                               \
                     : &quot;r&quot;(a1), &quot;r&quot;(a2), &quot;r&quot;(a6), &quot;r&quot;(a7)              \
                     : &quot;memory&quot;);                             \
        a0;                                                   \
    })</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arch/riscv/include/asm/sbi.h" line="8" column="9" bodyfile="src/arch/riscv/include/asm/sbi.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sbi_8h_1acb27c9e91eee5ab1127a939cd4e080ce" prot="public" static="no">
        <name>SBI_CALL_0</name>
        <param><defname>which</defname></param>
        <initializer><ref refid="sbi_8h_1ae917ff9ed8cf5bc9eee73c667bb859aa" kindref="member">SBI_CALL</ref>(which, 0, 0, 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arch/riscv/include/asm/sbi.h" line="25" column="9" bodyfile="src/arch/riscv/include/asm/sbi.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sbi_8h_1a6009ef829285eebb18ad0ad67e5e14f9" prot="public" static="no">
        <name>SBI_CALL_1</name>
        <param><defname>which</defname></param>
        <param><defname>arg0</defname></param>
        <initializer><ref refid="sbi_8h_1ae917ff9ed8cf5bc9eee73c667bb859aa" kindref="member">SBI_CALL</ref>(which, arg0, 0, 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arch/riscv/include/asm/sbi.h" line="26" column="9" bodyfile="src/arch/riscv/include/asm/sbi.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sbi_8h_1ab8dd17e757bfca5b1013f55de21a131b" prot="public" static="no">
        <name>SBI_CALL_2</name>
        <param><defname>which</defname></param>
        <param><defname>arg0</defname></param>
        <param><defname>arg1</defname></param>
        <initializer><ref refid="sbi_8h_1ae917ff9ed8cf5bc9eee73c667bb859aa" kindref="member">SBI_CALL</ref>(which, arg0, arg1, 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arch/riscv/include/asm/sbi.h" line="27" column="9" bodyfile="src/arch/riscv/include/asm/sbi.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sbi_8h_1affa55e6e2e2ad89bd725ec86b354d31a" prot="public" static="no">
        <name>SBI_CALL_3</name>
        <param><defname>which</defname></param>
        <param><defname>arg0</defname></param>
        <param><defname>arg1</defname></param>
        <param><defname>arg2</defname></param>
        <initializer><ref refid="sbi_8h_1ae917ff9ed8cf5bc9eee73c667bb859aa" kindref="member">SBI_CALL</ref>(which, arg0, arg1, arg2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arch/riscv/include/asm/sbi.h" line="28" column="9" bodyfile="src/arch/riscv/include/asm/sbi.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="sbi_8h_1ab08b5f077f9c418455ce7929d2f38bba" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sbi_console_putstr</definition>
        <argsstring>(char *str)</argsstring>
        <name>sbi_console_putstr</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arch/riscv/include/asm/sbi.h" line="30" column="20" bodyfile="src/arch/riscv/include/asm/sbi.h" bodystart="30" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="sbi_8h_1a99638b95984187102dd50b1d0b430d3b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sbi_console_putchar</definition>
        <argsstring>(int ch)</argsstring>
        <name>sbi_console_putchar</name>
        <param>
          <type>int</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arch/riscv/include/asm/sbi.h" line="36" column="20" bodyfile="src/arch/riscv/include/asm/sbi.h" bodystart="36" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="sbi_8h_1a2c1d94c38003281d350a520eced61310" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int sbi_console_getchar</definition>
        <argsstring>(void)</argsstring>
        <name>sbi_console_getchar</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arch/riscv/include/asm/sbi.h" line="40" column="19" bodyfile="src/arch/riscv/include/asm/sbi.h" bodystart="40" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="sbi_8h_1a07a40f8f344547fdc7396af43ea3f851" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sbi_set_timer</definition>
        <argsstring>(uint64_t stime_value)</argsstring>
        <name>sbi_set_timer</name>
        <param>
          <type>uint64_t</type>
          <declname>stime_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arch/riscv/include/asm/sbi.h" line="44" column="20" bodyfile="src/arch/riscv/include/asm/sbi.h" bodystart="44" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="sbi_8h_1aca70115e51f9738749d7863dfa6d5db4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sbi_set_mode</definition>
        <argsstring>(uint64_t hart_id, uint64_t addr)</argsstring>
        <name>sbi_set_mode</name>
        <param>
          <type>uint64_t</type>
          <declname>hart_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arch/riscv/include/asm/sbi.h" line="48" column="20" bodyfile="src/arch/riscv/include/asm/sbi.h" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="sbi_8h_1acbd5e0e986d32c6eabf1909475a3ce6f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sbi_shutdown</definition>
        <argsstring>(void)</argsstring>
        <name>sbi_shutdown</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arch/riscv/include/asm/sbi.h" line="52" column="20" bodyfile="src/arch/riscv/include/asm/sbi.h" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="sbi_8h_1a895a7c049dfa186addd8eb7599f09b5d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sbi_clear_ipi</definition>
        <argsstring>(void)</argsstring>
        <name>sbi_clear_ipi</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arch/riscv/include/asm/sbi.h" line="56" column="20" bodyfile="src/arch/riscv/include/asm/sbi.h" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="sbi_8h_1ac35eacf8e55e673f4315ea138e4f2ea3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sbi_send_ipi</definition>
        <argsstring>(const unsigned long *hart_mask)</argsstring>
        <name>sbi_send_ipi</name>
        <param>
          <type>const unsigned long *</type>
          <declname>hart_mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arch/riscv/include/asm/sbi.h" line="60" column="20" bodyfile="src/arch/riscv/include/asm/sbi.h" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="sbi_8h_1a81792ded22648e61e3d04cabe0ef5900" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sbi_remote_fence_i</definition>
        <argsstring>(const unsigned long *hart_mask)</argsstring>
        <name>sbi_remote_fence_i</name>
        <param>
          <type>const unsigned long *</type>
          <declname>hart_mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arch/riscv/include/asm/sbi.h" line="64" column="20" bodyfile="src/arch/riscv/include/asm/sbi.h" bodystart="64" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="sbi_8h_1afc089d889ea2cc83c154cf1413df7927" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sbi_remote_sfence_vma</definition>
        <argsstring>(const unsigned long *hart_mask, unsigned long start, unsigned long size)</argsstring>
        <name>sbi_remote_sfence_vma</name>
        <param>
          <type>const unsigned long *</type>
          <declname>hart_mask</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>start</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arch/riscv/include/asm/sbi.h" line="68" column="20" bodyfile="src/arch/riscv/include/asm/sbi.h" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="sbi_8h_1ae6b858188990848d9e7650e0c4a4666a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sbi_remote_sfence_vma_asid</definition>
        <argsstring>(const unsigned long *hart_mask, unsigned long start, unsigned long size, unsigned long asid)</argsstring>
        <name>sbi_remote_sfence_vma_asid</name>
        <param>
          <type>const unsigned long *</type>
          <declname>hart_mask</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>start</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>size</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>asid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arch/riscv/include/asm/sbi.h" line="72" column="20" bodyfile="src/arch/riscv/include/asm/sbi.h" bodystart="72" bodyend="74"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="sbidef_8h" kindref="compound">asm/sbidef.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="types_8h" kindref="compound">common/types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>clang-format<sp/>off<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="sbi_8h_1ae917ff9ed8cf5bc9eee73c667bb859aa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SBI_CALL(which,<sp/>arg0,<sp/>arg1,<sp/>arg2)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>({<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>register<sp/>uintptr_t<sp/>a0<sp/>asm(&quot;a0&quot;</highlight><highlight class="normal">)<sp/>=<sp/>(uintptr_t)(arg0);<sp/><sp/>\</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>register<sp/>uintptr_t<sp/>a1<sp/>asm(&quot;a1&quot;)<sp/>=<sp/>(uintptr_t)(arg1);<sp/><sp/>\</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>register<sp/>uintptr_t<sp/>a2<sp/>asm(&quot;a2&quot;)<sp/>=<sp/>(uintptr_t)(arg2);<sp/><sp/>\</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>register<sp/>uintptr_t<sp/>a6<sp/>asm(&quot;a6&quot;)<sp/>=<sp/>(uintptr_t)(0);<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>register<sp/>uintptr_t<sp/>a7<sp/>asm(&quot;a7&quot;)<sp/>=<sp/>(uintptr_t)(which);<sp/>\</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asm<sp/>volatile(&quot;ecall&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>&quot;+r&quot;(a0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>&quot;r&quot;(a1),<sp/>&quot;r&quot;(a2),<sp/>&quot;r&quot;(a6),<sp/>&quot;r&quot;(a7)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>&quot;memory&quot;);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>clang-format<sp/>on<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Lazy<sp/>implementations<sp/>until<sp/>SBI<sp/>is<sp/>finalized<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="sbi_8h_1acb27c9e91eee5ab1127a939cd4e080ce" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SBI_CALL_0(which)<sp/>SBI_CALL(which,<sp/>0,<sp/>0,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="sbi_8h_1a6009ef829285eebb18ad0ad67e5e14f9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SBI_CALL_1(which,<sp/>arg0)<sp/>SBI_CALL(which,<sp/>arg0,<sp/>0,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="sbi_8h_1ab8dd17e757bfca5b1013f55de21a131b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SBI_CALL_2(which,<sp/>arg0,<sp/>arg1)<sp/>SBI_CALL(which,<sp/>arg0,<sp/>arg1,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="sbi_8h_1affa55e6e2e2ad89bd725ec86b354d31a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SBI_CALL_3(which,<sp/>arg0,<sp/>arg1,<sp/>arg2)<sp/>SBI_CALL(which,<sp/>arg0,<sp/>arg1,<sp/>arg2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sbi_console_putstr(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*str<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbi_8h_1a6009ef829285eebb18ad0ad67e5e14f9" kindref="member">SBI_CALL_1</ref>(<ref refid="sbidef_8h_1a6e18fff389d2c5cf0a3d23f68913c90c" kindref="member">SBI_EXT_0_1_CONSOLE_PUTCHAR</ref>,<sp/>*str++);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sbi_console_putchar(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbi_8h_1a6009ef829285eebb18ad0ad67e5e14f9" kindref="member">SBI_CALL_1</ref>(<ref refid="sbidef_8h_1a6e18fff389d2c5cf0a3d23f68913c90c" kindref="member">SBI_EXT_0_1_CONSOLE_PUTCHAR</ref>,<sp/>ch);</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sbi_console_getchar(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sbi_8h_1acb27c9e91eee5ab1127a939cd4e080ce" kindref="member">SBI_CALL_0</ref>(<ref refid="sbidef_8h_1a3d3228aaea616cae9b47f29960c25466" kindref="member">SBI_EXT_0_1_CONSOLE_GETCHAR</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sbi_set_timer(uint64_t<sp/>stime_value)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbi_8h_1a6009ef829285eebb18ad0ad67e5e14f9" kindref="member">SBI_CALL_1</ref>(<ref refid="sbidef_8h_1a1e3b518804b8ad35f54cddf63f2a9c91" kindref="member">SBI_EXT_TIME</ref>,<sp/>stime_value);</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sbi_set_mode(uint64_t<sp/>hart_id,<sp/>uint64_t<sp/>addr)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbi_8h_1ab8dd17e757bfca5b1013f55de21a131b" kindref="member">SBI_CALL_2</ref>(<ref refid="sbidef_8h_1a516e871186b4d37b02d0899b2b1b0f4d" kindref="member">SBI_EXT_HSM</ref>,<sp/>hart_id,<sp/>addr);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sbi_shutdown(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbi_8h_1acb27c9e91eee5ab1127a939cd4e080ce" kindref="member">SBI_CALL_0</ref>(<ref refid="sbidef_8h_1a2f7e4d299762c1b64610f5f602b3beb4" kindref="member">SBI_EXT_0_1_SHUTDOWN</ref>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sbi_clear_ipi(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbi_8h_1acb27c9e91eee5ab1127a939cd4e080ce" kindref="member">SBI_CALL_0</ref>(<ref refid="sbidef_8h_1aea5f93d276f5fd4e4d24fea4f991223d" kindref="member">SBI_EXT_0_1_CLEAR_IPI</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sbi_send_ipi(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*hart_mask)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbi_8h_1a6009ef829285eebb18ad0ad67e5e14f9" kindref="member">SBI_CALL_1</ref>(<ref refid="sbidef_8h_1a967533824c30ed778fa9006b22584957" kindref="member">SBI_EXT_0_1_SEND_IPI</ref>,<sp/>hart_mask);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sbi_remote_fence_i(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*hart_mask)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbi_8h_1a6009ef829285eebb18ad0ad67e5e14f9" kindref="member">SBI_CALL_1</ref>(<ref refid="sbidef_8h_1ae4d2c7591eda15d2e881df7d05c7ec1a" kindref="member">SBI_EXT_0_1_REMOTE_FENCE_I</ref>,<sp/>hart_mask);</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sbi_remote_sfence_vma(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*hart_mask,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>start,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbi_8h_1a6009ef829285eebb18ad0ad67e5e14f9" kindref="member">SBI_CALL_1</ref>(<ref refid="sbidef_8h_1a87df8c0f211bb9f5fd59e2c6140cc233" kindref="member">SBI_EXT_0_1_REMOTE_SFENCE_VMA</ref>,<sp/>hart_mask);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sbi_remote_sfence_vma_asid(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*hart_mask,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>start,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>asid)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbi_8h_1a6009ef829285eebb18ad0ad67e5e14f9" kindref="member">SBI_CALL_1</ref>(<ref refid="sbidef_8h_1a796efeabf966af73d0bedec442f4e1d1" kindref="member">SBI_EXT_0_1_REMOTE_SFENCE_VMA_ASID</ref>,<sp/>hart_mask);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/arch/riscv/include/asm/sbi.h"/>
  </compounddef>
</doxygen>
