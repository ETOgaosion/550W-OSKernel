<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="zh">
  <compounddef id="stack_8c" kind="file" language="C++">
    <compoundname>stack.c</compoundname>
    <includes refid="csr_8h" local="no">asm/csr.h</includes>
    <includes refid="pgtable_8h" local="no">asm/pgtable.h</includes>
    <includes refid="regs_8h" local="no">asm/regs.h</includes>
    <includes refid="stack_8h" local="no">asm/stack.h</includes>
    <includes refid="stdio_8h" local="no">lib/stdio.h</includes>
    <includes refid="string_8h" local="no">lib/string.h</includes>
    <includes refid="mm_8h" local="no">os/mm.h</includes>
    <includes refid="smp_8h" local="no">os/smp.h</includes>
    <incdepgraph>
      <node id="3">
        <label>asm/pgtable.h</label>
        <link refid="pgtable_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>os/mm.h</label>
        <link refid="mm_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>lib/stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>common/elf.h</label>
        <link refid="elf_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>asm/regs.h</label>
        <link refid="regs_8h"/>
      </node>
      <node id="7">
        <label>common/errno.h</label>
        <link refid="errno_8h"/>
      </node>
      <node id="15">
        <label>os/cpu.h</label>
        <link refid="cpu_8h"/>
      </node>
      <node id="19">
        <label>os/time.h</label>
        <link refid="time_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>asm/context.h</label>
        <link refid="context_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>asm/sbidef.h</label>
        <link refid="sbidef_8h"/>
      </node>
      <node id="6">
        <label>common/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>os/smp.h</label>
        <link refid="smp_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>asm/stack.h</label>
        <link refid="stack_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>lib/string.h</label>
        <link refid="string_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>asm/sbi.h</label>
        <link refid="sbi_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>asm/csr.h</label>
        <link refid="csr_8h"/>
      </node>
      <node id="10">
        <label>os/pcb.h</label>
        <link refid="pcb_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/arch/riscv/kernel/init/stack.c</label>
        <link refid="stack_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>os/lock.h</label>
        <link refid="lock_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>lib/stdarg.h</label>
        <link refid="stdarg_8h"/>
      </node>
      <node id="18">
        <label>os/sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>lib/list.h</label>
        <link refid="list_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="stack_8c_1a45c9eb850becec9f8203f591cc76faa1" prot="public" static="no" mutable="no">
        <type><ref refid="types_8h_1a3f13e4d5a59d909d6303f569fe5e6524" kindref="member">ptr_t</ref></type>
        <definition>ptr_t address_base</definition>
        <argsstring></argsstring>
        <name>address_base</name>
        <initializer>= 0xffffffc080504000lu</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arch/riscv/kernel/init/stack.c" line="13" column="7" bodyfile="src/arch/riscv/kernel/init/stack.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="stack_8c_1a07cfb7a65fdc8a5e36fd62883f3e150e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void user_ret_from_exception</definition>
        <argsstring>()</argsstring>
        <name>user_ret_from_exception</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arch/riscv/kernel/init/stack.c" line="10" column="13" declfile="src/arch/riscv/kernel/init/stack.c" declline="10" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="stack_8c_1aff42ca977a7f1f3f37cd7f328ac94a9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __global_pointer</definition>
        <argsstring>()</argsstring>
        <name>__global_pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arch/riscv/kernel/init/stack.c" line="11" column="13" declfile="src/arch/riscv/kernel/init/stack.c" declline="11" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="stack_8c_1ad72f726c9f29ef22f7a26cdf0fd601ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8h_1a3f13e4d5a59d909d6303f569fe5e6524" kindref="member">ptr_t</ref></type>
        <definition>ptr_t get_kernel_address</definition>
        <argsstring>(pid_t pid)</argsstring>
        <name>get_kernel_address</name>
        <param>
          <type><ref refid="types_8h_1a288e13e815d43b06e75819f8939524df" kindref="member">pid_t</ref></type>
          <declname>pid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arch/riscv/kernel/init/stack.c" line="15" column="7" bodyfile="src/arch/riscv/kernel/init/stack.c" bodystart="15" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="stack_8c_1af78898db2c58769d994ab755b71e3ddc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8h_1a3f13e4d5a59d909d6303f569fe5e6524" kindref="member">ptr_t</ref></type>
        <definition>ptr_t get_user_address</definition>
        <argsstring>(pid_t pid)</argsstring>
        <name>get_user_address</name>
        <param>
          <type><ref refid="types_8h_1a288e13e815d43b06e75819f8939524df" kindref="member">pid_t</ref></type>
          <declname>pid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arch/riscv/kernel/init/stack.c" line="19" column="7" bodyfile="src/arch/riscv/kernel/init/stack.c" bodystart="19" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="stack_8c_1a4619d60667f4a7c84a28f9cd741f7ba4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_context_stack</definition>
        <argsstring>(ptr_t kernel_stack, ptr_t user_stack, int argc, char *argv[], ptr_t entry_point, pcb_t *pcb)</argsstring>
        <name>init_context_stack</name>
        <param>
          <type><ref refid="types_8h_1a3f13e4d5a59d909d6303f569fe5e6524" kindref="member">ptr_t</ref></type>
          <declname>kernel_stack</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1a3f13e4d5a59d909d6303f569fe5e6524" kindref="member">ptr_t</ref></type>
          <declname>user_stack</declname>
        </param>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="types_8h_1a3f13e4d5a59d909d6303f569fe5e6524" kindref="member">ptr_t</ref></type>
          <declname>entry_point</declname>
        </param>
        <param>
          <type><ref refid="pcb_8h_1a3c0f153d2844c3c3248a1795b159ae37" kindref="member">pcb_t</ref> *</type>
          <declname>pcb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arch/riscv/kernel/init/stack.c" line="23" column="6" bodyfile="src/arch/riscv/kernel/init/stack.c" bodystart="23" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="stack_8c_1a8a2fff3cc3f61aaf7d825c92a36819d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fork_pcb_stack</definition>
        <argsstring>(ptr_t kernel_stack, ptr_t user_stack, pcb_t *pcb)</argsstring>
        <name>fork_pcb_stack</name>
        <param>
          <type><ref refid="types_8h_1a3f13e4d5a59d909d6303f569fe5e6524" kindref="member">ptr_t</ref></type>
          <declname>kernel_stack</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1a3f13e4d5a59d909d6303f569fe5e6524" kindref="member">ptr_t</ref></type>
          <declname>user_stack</declname>
        </param>
        <param>
          <type><ref refid="pcb_8h_1a3c0f153d2844c3c3248a1795b159ae37" kindref="member">pcb_t</ref> *</type>
          <declname>pcb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arch/riscv/kernel/init/stack.c" line="51" column="6" bodyfile="src/arch/riscv/kernel/init/stack.c" bodystart="51" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="stack_8c_1a858d10edc3b587179159d2e575df5ebb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void clone_pcb_stack</definition>
        <argsstring>(ptr_t kernel_stack, ptr_t user_stack, pcb_t *pcb, unsigned long flags, void *tls)</argsstring>
        <name>clone_pcb_stack</name>
        <param>
          <type><ref refid="types_8h_1a3f13e4d5a59d909d6303f569fe5e6524" kindref="member">ptr_t</ref></type>
          <declname>kernel_stack</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1a3f13e4d5a59d909d6303f569fe5e6524" kindref="member">ptr_t</ref></type>
          <declname>user_stack</declname>
        </param>
        <param>
          <type><ref refid="pcb_8h_1a3c0f153d2844c3c3248a1795b159ae37" kindref="member">pcb_t</ref> *</type>
          <declname>pcb</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>tls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arch/riscv/kernel/init/stack.c" line="80" column="6" bodyfile="src/arch/riscv/kernel/init/stack.c" bodystart="80" bodyend="120"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="csr_8h" kindref="compound">asm/csr.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="pgtable_8h" kindref="compound">asm/pgtable.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="regs_8h" kindref="compound">asm/regs.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stack_8h" kindref="compound">asm/stack.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdio_8h" kindref="compound">lib/stdio.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="string_8h" kindref="compound">lib/string.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="mm_8h" kindref="compound">os/mm.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="smp_8h" kindref="compound">os/smp.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stack_8c_1a07cfb7a65fdc8a5e36fd62883f3e150e" kindref="member">user_ret_from_exception</ref>();</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stack_8c_1aff42ca977a7f1f3f37cd7f328ac94a9d" kindref="member">__global_pointer</ref>$();</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><ref refid="types_8h_1a3f13e4d5a59d909d6303f569fe5e6524" kindref="member">ptr_t</ref><sp/><ref refid="stack_8c_1a45c9eb850becec9f8203f591cc76faa1" kindref="member">address_base</ref><sp/>=<sp/>0xffffffc080504000lu;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><ref refid="types_8h_1a3f13e4d5a59d909d6303f569fe5e6524" kindref="member">ptr_t</ref><sp/><ref refid="stack_8c_1ad72f726c9f29ef22f7a26cdf0fd601ef" kindref="member">get_kernel_address</ref>(<ref refid="types_8h_1a288e13e815d43b06e75819f8939524df" kindref="member">pid_t</ref><sp/>pid)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stack_8c_1a45c9eb850becec9f8203f591cc76faa1" kindref="member">address_base</ref><sp/>+<sp/>(pid<sp/>+<sp/>1)<sp/>*<sp/>2<sp/>*<sp/>(4<sp/>*<sp/><ref refid="mm_8h_1a7d467c1d283fdfa1f2081ba1e0d01b6e" kindref="member">PAGE_SIZE</ref>);</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><ref refid="types_8h_1a3f13e4d5a59d909d6303f569fe5e6524" kindref="member">ptr_t</ref><sp/><ref refid="stack_8c_1af78898db2c58769d994ab755b71e3ddc" kindref="member">get_user_address</ref>(<ref refid="types_8h_1a288e13e815d43b06e75819f8939524df" kindref="member">pid_t</ref><sp/>pid)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stack_8c_1a45c9eb850becec9f8203f591cc76faa1" kindref="member">address_base</ref><sp/>+<sp/>pid<sp/>*<sp/>2<sp/>*<sp/>(4<sp/>*<sp/><ref refid="mm_8h_1a7d467c1d283fdfa1f2081ba1e0d01b6e" kindref="member">PAGE_SIZE</ref>)<sp/>+<sp/>4<sp/>*<sp/><ref refid="mm_8h_1a7d467c1d283fdfa1f2081ba1e0d01b6e" kindref="member">PAGE_SIZE</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stack_8c_1a4619d60667f4a7c84a28f9cd741f7ba4" kindref="member">init_context_stack</ref>(<ref refid="types_8h_1a3f13e4d5a59d909d6303f569fe5e6524" kindref="member">ptr_t</ref><sp/>kernel_stack,<sp/><ref refid="types_8h_1a3f13e4d5a59d909d6303f569fe5e6524" kindref="member">ptr_t</ref><sp/>user_stack,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[],<sp/><ref refid="types_8h_1a3f13e4d5a59d909d6303f569fe5e6524" kindref="member">ptr_t</ref><sp/>entry_point,<sp/><ref refid="structpcb" kindref="compound">pcb_t</ref><sp/>*<ref refid="structpcb" kindref="compound">pcb</ref>)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structregs__context" kindref="compound">regs_context_t</ref><sp/>*pt_regs<sp/>=<sp/>(<ref refid="structregs__context" kindref="compound">regs_context_t</ref><sp/>*)(kernel_stack<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structregs__context" kindref="compound">regs_context_t</ref>));</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="string_8h_1aaf442a6d4665859606fb0376506a349c" kindref="member">k_memset</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)pt_regs,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structregs__context" kindref="compound">regs_context_t</ref>));</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpcb" kindref="compound">pcb</ref>-&gt;<ref refid="structpcb_1a3f6b08a1cf6af57de3fcc0c9b3757e1f" kindref="member">kernel_sp</ref><sp/>=<sp/>kernel_stack<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="context_8h_1a2d9a070cd557ba1cedeb93d7f14abcd5" kindref="member">regs_context_t</ref>)<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structswitchto__context" kindref="compound">switchto_context_t</ref>);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpcb" kindref="compound">pcb</ref>-&gt;<ref refid="structpcb_1a0d1415d6fed4316bac80be592898778c" kindref="member">user_sp</ref><sp/>=<sp/>user_stack;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>pt_regs-&gt;regs[<ref refid="regs_8h_1a2d77d57d813bc660fd1748f23435a1cc" kindref="member">reg_ra</ref>]<sp/>=<sp/>entry_point;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>pt_regs-&gt;regs[<ref refid="regs_8h_1a908b1056f57615b3d510b367ef081308" kindref="member">reg_sp</ref>]<sp/>=<sp/><ref refid="structpcb" kindref="compound">pcb</ref>-&gt;<ref refid="structpcb_1a0d1415d6fed4316bac80be592898778c" kindref="member">user_sp</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpcb" kindref="compound">pcb</ref>-&gt;<ref refid="structpcb_1a8026314d08eef0fefc7321eadac2b95a" kindref="member">type</ref><sp/>==<sp/><ref refid="pcb_8h_1ab8d9e3d1f9fdf95a31d7b4ce32768eaba73247b7900083fb57378cfc9ef9a3172" kindref="member">USER_PROCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pt_regs-&gt;regs[<ref refid="regs_8h_1a3abcfeac523b8abf388c5a79556cb3b9" kindref="member">reg_gp</ref>]<sp/>=<sp/>(<ref refid="types_8h_1a62065ae2bc90ff72892eddfeedcffafa" kindref="member">reg_t</ref>)<ref refid="stack_8c_1aff42ca977a7f1f3f37cd7f328ac94a9d" kindref="member">__global_pointer</ref>$;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpcb" kindref="compound">pcb</ref>-&gt;<ref refid="structpcb_1a8026314d08eef0fefc7321eadac2b95a" kindref="member">type</ref><sp/>==<sp/><ref refid="pcb_8h_1ab8d9e3d1f9fdf95a31d7b4ce32768eabacde3f46d6fbc48d008dff6af3e00cc11" kindref="member">USER_THREAD</ref>)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structregs__context" kindref="compound">regs_context_t</ref><sp/>*cur_regs<sp/>=<sp/>(<ref refid="structregs__context" kindref="compound">regs_context_t</ref><sp/>*)((*current_running)-&gt;kernel_sp<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structswitchto__context" kindref="compound">switchto_context_t</ref>));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pt_regs-&gt;<ref refid="structregs__context_1a0f594561b5a209149c4d59f665d23a56" kindref="member">regs</ref>[<ref refid="regs_8h_1a3abcfeac523b8abf388c5a79556cb3b9" kindref="member">reg_gp</ref>]<sp/>=<sp/>cur_regs-&gt;<ref refid="structregs__context_1a0f594561b5a209149c4d59f665d23a56" kindref="member">regs</ref>[<ref refid="regs_8h_1a3abcfeac523b8abf388c5a79556cb3b9" kindref="member">reg_gp</ref>];</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>pt_regs-&gt;regs[<ref refid="regs_8h_1affb98709c50f6bc4e15a79cab90d3e9d" kindref="member">reg_tp</ref>]<sp/>=<sp/>(<ref refid="types_8h_1a62065ae2bc90ff72892eddfeedcffafa" kindref="member">reg_t</ref>)<ref refid="structpcb" kindref="compound">pcb</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>pt_regs-&gt;regs[<ref refid="regs_8h_1af5a1de2bc6096395e02a267506496f57" kindref="member">reg_a0</ref>]<sp/>=<sp/>(<ref refid="types_8h_1a62065ae2bc90ff72892eddfeedcffafa" kindref="member">reg_t</ref>)argc;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>pt_regs-&gt;regs[<ref refid="regs_8h_1a9557d75055b147f87a5edd1f1a58379f" kindref="member">reg_a1</ref>]<sp/>=<sp/>(<ref refid="types_8h_1a62065ae2bc90ff72892eddfeedcffafa" kindref="member">reg_t</ref>)argv;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>pt_regs-&gt;sepc<sp/>=<sp/>entry_point;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>pt_regs-&gt;sstatus<sp/>=<sp/><ref refid="csr_8h_1a74da9fba64fbe4c56536c44e9b33570e" kindref="member">SR_SUM</ref><sp/>|<sp/><ref refid="csr_8h_1af374785f0f372d2e9b78d30c9ffbcb6b" kindref="member">SR_SPIE</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>pt_regs-&gt;sbadaddr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>pt_regs-&gt;scause<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structswitchto__context" kindref="compound">switchto_context_t</ref><sp/>*sw_regs<sp/>=<sp/>(<ref refid="structswitchto__context" kindref="compound">switchto_context_t</ref><sp/>*)(kernel_stack<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structregs__context" kindref="compound">regs_context_t</ref>)<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="context_8h_1a9670a8327e4d995310029b44318561a3" kindref="member">switchto_context_t</ref>));</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>sw_regs-&gt;<ref refid="structswitchto__context_1a9c82a67ee9310247361fa2a7e0799ab6" kindref="member">regs</ref>[<ref refid="regs_8h_1a5c4731eca681365ad7429d448518f8c8" kindref="member">switch_reg_ra</ref>]<sp/>=<sp/>(<ref refid="structpcb" kindref="compound">pcb</ref>-&gt;<ref refid="structpcb_1a8026314d08eef0fefc7321eadac2b95a" kindref="member">type</ref><sp/>==<sp/><ref refid="pcb_8h_1ab8d9e3d1f9fdf95a31d7b4ce32768eaba73247b7900083fb57378cfc9ef9a3172" kindref="member">USER_PROCESS</ref><sp/>||<sp/><ref refid="structpcb" kindref="compound">pcb</ref>-&gt;<ref refid="structpcb_1a8026314d08eef0fefc7321eadac2b95a" kindref="member">type</ref><sp/>==<sp/><ref refid="pcb_8h_1ab8d9e3d1f9fdf95a31d7b4ce32768eabacde3f46d6fbc48d008dff6af3e00cc11" kindref="member">USER_THREAD</ref>)<sp/>?<sp/>(<ref refid="types_8h_1a62065ae2bc90ff72892eddfeedcffafa" kindref="member">reg_t</ref>)&amp;<ref refid="stack_8c_1a07cfb7a65fdc8a5e36fd62883f3e150e" kindref="member">user_ret_from_exception</ref><sp/>:<sp/>entry_point;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>sw_regs-&gt;<ref refid="structswitchto__context_1a9c82a67ee9310247361fa2a7e0799ab6" kindref="member">regs</ref>[<ref refid="regs_8h_1aa597fef926db4b180b82eaf3a69b52c0" kindref="member">switch_reg_sp</ref>]<sp/>=<sp/><ref refid="structpcb" kindref="compound">pcb</ref>-&gt;<ref refid="structpcb_1a3f6b08a1cf6af57de3fcc0c9b3757e1f" kindref="member">kernel_sp</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpcb" kindref="compound">pcb</ref>-&gt;<ref refid="structpcb_1a9a2040071a0df89c67b0fb11ee84f407" kindref="member">save_context</ref><sp/>=<sp/>pt_regs;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpcb" kindref="compound">pcb</ref>-&gt;<ref refid="structpcb_1ab6a33c97f624d5b5052d1823aedf1710" kindref="member">switch_context</ref><sp/>=<sp/>sw_regs;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stack_8c_1a8a2fff3cc3f61aaf7d825c92a36819d5" kindref="member">fork_pcb_stack</ref>(<ref refid="types_8h_1a3f13e4d5a59d909d6303f569fe5e6524" kindref="member">ptr_t</ref><sp/>kernel_stack,<sp/><ref refid="types_8h_1a3f13e4d5a59d909d6303f569fe5e6524" kindref="member">ptr_t</ref><sp/>user_stack,<sp/><ref refid="structpcb" kindref="compound">pcb_t</ref><sp/>*<ref refid="structpcb" kindref="compound">pcb</ref>)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structregs__context" kindref="compound">regs_context_t</ref><sp/>*pt_regs<sp/>=<sp/>(<ref refid="structregs__context" kindref="compound">regs_context_t</ref><sp/>*)(kernel_stack<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structregs__context" kindref="compound">regs_context_t</ref>));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structregs__context" kindref="compound">regs_context_t</ref><sp/>*cur_regs<sp/>=<sp/>(<ref refid="structregs__context" kindref="compound">regs_context_t</ref><sp/>*)((*current_running)-&gt;kernel_sp<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structswitchto__context" kindref="compound">switchto_context_t</ref>));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1a3f13e4d5a59d909d6303f569fe5e6524" kindref="member">ptr_t</ref><sp/>cur_address<sp/>=<sp/><ref refid="stack_8c_1af78898db2c58769d994ab755b71e3ddc" kindref="member">get_user_address</ref>((*current_running)-&gt;pid);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="string_8h_1a4985196d8a63d22e320cf33d904d2f92" kindref="member">k_memcpy</ref>((uint8_t<sp/>*)(user_stack<sp/>-<sp/><ref refid="mm_8h_1a7d467c1d283fdfa1f2081ba1e0d01b6e" kindref="member">PAGE_SIZE</ref>),<sp/>(uint8_t<sp/>*)(cur_address<sp/>-<sp/><ref refid="mm_8h_1a7d467c1d283fdfa1f2081ba1e0d01b6e" kindref="member">PAGE_SIZE</ref>),<sp/><ref refid="mm_8h_1a7d467c1d283fdfa1f2081ba1e0d01b6e" kindref="member">PAGE_SIZE</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpcb" kindref="compound">pcb</ref>-&gt;<ref refid="structpcb_1a3f6b08a1cf6af57de3fcc0c9b3757e1f" kindref="member">kernel_sp</ref><sp/>=<sp/>kernel_stack<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="context_8h_1a2d9a070cd557ba1cedeb93d7f14abcd5" kindref="member">regs_context_t</ref>)<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structswitchto__context" kindref="compound">switchto_context_t</ref>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpcb" kindref="compound">pcb</ref>-&gt;<ref refid="structpcb_1a0d1415d6fed4316bac80be592898778c" kindref="member">user_sp</ref><sp/>=<sp/>(*current_running)-&gt;user_sp;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="context_8h_1ab869aafed59eee886c80f153c1c44e82" kindref="member">NORMAL_REGS_NUM</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pt_regs-&gt;<ref refid="structregs__context_1a0f594561b5a209149c4d59f665d23a56" kindref="member">regs</ref>[i]<sp/>=<sp/>cur_regs-&gt;<ref refid="structregs__context_1a0f594561b5a209149c4d59f665d23a56" kindref="member">regs</ref>[i];</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>pt_regs-&gt;<ref refid="structregs__context_1a0f594561b5a209149c4d59f665d23a56" kindref="member">regs</ref>[<ref refid="regs_8h_1a908b1056f57615b3d510b367ef081308" kindref="member">reg_sp</ref>]<sp/>=<sp/><ref refid="structpcb" kindref="compound">pcb</ref>-&gt;<ref refid="structpcb_1a0d1415d6fed4316bac80be592898778c" kindref="member">user_sp</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>pt_regs-&gt;<ref refid="structregs__context_1a0f594561b5a209149c4d59f665d23a56" kindref="member">regs</ref>[<ref refid="regs_8h_1affb98709c50f6bc4e15a79cab90d3e9d" kindref="member">reg_tp</ref>]<sp/>=<sp/>(<ref refid="types_8h_1a62065ae2bc90ff72892eddfeedcffafa" kindref="member">reg_t</ref>)<ref refid="structpcb" kindref="compound">pcb</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>pt_regs-&gt;<ref refid="structregs__context_1a0f594561b5a209149c4d59f665d23a56" kindref="member">regs</ref>[<ref refid="regs_8h_1af5a1de2bc6096395e02a267506496f57" kindref="member">reg_a0</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pt_regs-&gt;regs[8]<sp/>=<sp/>user_stack;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>pt_regs-&gt;<ref refid="structregs__context_1a9a04a0b6d3889115e63084b55cd5f37c" kindref="member">sepc</ref><sp/>=<sp/>cur_regs-&gt;<ref refid="structregs__context_1a9a04a0b6d3889115e63084b55cd5f37c" kindref="member">sepc</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>pt_regs-&gt;<ref refid="structregs__context_1a18aef6806d4b8f624a6623f0ac182997" kindref="member">sstatus</ref><sp/>=<sp/>cur_regs-&gt;<ref refid="structregs__context_1a18aef6806d4b8f624a6623f0ac182997" kindref="member">sstatus</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>pt_regs-&gt;<ref refid="structregs__context_1ab8eb6e17d289be7233fae337c5207a60" kindref="member">sbadaddr</ref><sp/>=<sp/>cur_regs-&gt;<ref refid="structregs__context_1ab8eb6e17d289be7233fae337c5207a60" kindref="member">sbadaddr</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>pt_regs-&gt;<ref refid="structregs__context_1a5dd885f66475d14f5f315ebb0d82ac10" kindref="member">scause</ref><sp/>=<sp/>cur_regs-&gt;<ref refid="structregs__context_1a5dd885f66475d14f5f315ebb0d82ac10" kindref="member">scause</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structswitchto__context" kindref="compound">switchto_context_t</ref><sp/>*sw_regs<sp/>=<sp/>(<ref refid="structswitchto__context" kindref="compound">switchto_context_t</ref><sp/>*)(kernel_stack<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structregs__context" kindref="compound">regs_context_t</ref>)<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="context_8h_1a9670a8327e4d995310029b44318561a3" kindref="member">switchto_context_t</ref>));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>sw_regs-&gt;<ref refid="structswitchto__context_1a9c82a67ee9310247361fa2a7e0799ab6" kindref="member">regs</ref>[<ref refid="regs_8h_1a5c4731eca681365ad7429d448518f8c8" kindref="member">switch_reg_ra</ref>]<sp/>=<sp/>(<ref refid="types_8h_1a62065ae2bc90ff72892eddfeedcffafa" kindref="member">reg_t</ref>)<ref refid="stack_8c_1a07cfb7a65fdc8a5e36fd62883f3e150e" kindref="member">user_ret_from_exception</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sw_regs-&gt;regs[1]<sp/>=<sp/>pcb-&gt;user_sp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpcb" kindref="compound">pcb</ref>-&gt;<ref refid="structpcb_1a9a2040071a0df89c67b0fb11ee84f407" kindref="member">save_context</ref><sp/>=<sp/>pt_regs;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpcb" kindref="compound">pcb</ref>-&gt;<ref refid="structpcb_1ab6a33c97f624d5b5052d1823aedf1710" kindref="member">switch_context</ref><sp/>=<sp/>sw_regs;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stack_8c_1a858d10edc3b587179159d2e575df5ebb" kindref="member">clone_pcb_stack</ref>(<ref refid="types_8h_1a3f13e4d5a59d909d6303f569fe5e6524" kindref="member">ptr_t</ref><sp/>kernel_stack,<sp/><ref refid="types_8h_1a3f13e4d5a59d909d6303f569fe5e6524" kindref="member">ptr_t</ref><sp/>user_stack,<sp/><ref refid="structpcb" kindref="compound">pcb_t</ref><sp/>*<ref refid="structpcb" kindref="compound">pcb</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>flags,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*tls)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structregs__context" kindref="compound">regs_context_t</ref><sp/>*pt_regs<sp/>=<sp/>(<ref refid="structregs__context" kindref="compound">regs_context_t</ref><sp/>*)(kernel_stack<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structregs__context" kindref="compound">regs_context_t</ref>));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structregs__context" kindref="compound">regs_context_t</ref><sp/>*cur_regs<sp/>=<sp/>(<ref refid="structregs__context" kindref="compound">regs_context_t</ref><sp/>*)((*current_running)-&gt;kernel_sp<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structswitchto__context" kindref="compound">switchto_context_t</ref>));</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>user<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1a3f13e4d5a59d909d6303f569fe5e6524" kindref="member">ptr_t</ref><sp/>cur_user_stack<sp/>=<sp/><ref refid="stack_8c_1af78898db2c58769d994ab755b71e3ddc" kindref="member">get_user_address</ref>((*current_running)-&gt;pid);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1a3f13e4d5a59d909d6303f569fe5e6524" kindref="member">ptr_t</ref><sp/>clone_user_stack<sp/>=<sp/><ref refid="stack_8c_1af78898db2c58769d994ab755b71e3ddc" kindref="member">get_user_address</ref>(<ref refid="structpcb" kindref="compound">pcb</ref>-&gt;<ref refid="structpcb_1a1da0b84097537a6227022e4328977916" kindref="member">pid</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1a3f13e4d5a59d909d6303f569fe5e6524" kindref="member">ptr_t</ref><sp/>off<sp/>=<sp/>0x1000<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)(clone_user_stack<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*q<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)(cur_user_stack<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="types_8h_1a3f13e4d5a59d909d6303f569fe5e6524" kindref="member">ptr_t</ref><sp/>i<sp/>=<sp/>off<sp/>+<sp/>1;<sp/>i<sp/>&gt;<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p<sp/>=<sp/>*q;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p--;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q--;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpcb" kindref="compound">pcb</ref>-&gt;<ref refid="structpcb_1a0d1415d6fed4316bac80be592898778c" kindref="member">user_sp</ref><sp/>=<sp/>user_stack;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpcb" kindref="compound">pcb</ref>-&gt;<ref refid="structpcb_1a3f6b08a1cf6af57de3fcc0c9b3757e1f" kindref="member">kernel_sp</ref><sp/>=<sp/>kernel_stack<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="context_8h_1a2d9a070cd557ba1cedeb93d7f14abcd5" kindref="member">regs_context_t</ref>)<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structswitchto__context" kindref="compound">switchto_context_t</ref>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>save<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>32;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pt_regs-&gt;<ref refid="structregs__context_1a0f594561b5a209149c4d59f665d23a56" kindref="member">regs</ref>[i]<sp/>=<sp/>cur_regs-&gt;<ref refid="structregs__context_1a0f594561b5a209149c4d59f665d23a56" kindref="member">regs</ref>[i];</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>pt_regs-&gt;<ref refid="structregs__context_1a0f594561b5a209149c4d59f665d23a56" kindref="member">regs</ref>[<ref refid="regs_8h_1affb98709c50f6bc4e15a79cab90d3e9d" kindref="member">reg_tp</ref>]<sp/>=<sp/>(<ref refid="types_8h_1a62065ae2bc90ff72892eddfeedcffafa" kindref="member">reg_t</ref>)<ref refid="structpcb" kindref="compound">pcb</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>pt_regs-&gt;<ref refid="structregs__context_1a0f594561b5a209149c4d59f665d23a56" kindref="member">regs</ref>[<ref refid="regs_8h_1a908b1056f57615b3d510b367ef081308" kindref="member">reg_sp</ref>]<sp/>=<sp/><ref refid="structpcb" kindref="compound">pcb</ref>-&gt;<ref refid="structpcb_1a0d1415d6fed4316bac80be592898778c" kindref="member">user_sp</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>pt_regs-&gt;<ref refid="structregs__context_1a0f594561b5a209149c4d59f665d23a56" kindref="member">regs</ref>[<ref refid="regs_8h_1af5a1de2bc6096395e02a267506496f57" kindref="member">reg_a0</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>pt_regs-&gt;<ref refid="structregs__context_1a9a04a0b6d3889115e63084b55cd5f37c" kindref="member">sepc</ref><sp/>=<sp/>cur_regs-&gt;<ref refid="structregs__context_1a9a04a0b6d3889115e63084b55cd5f37c" kindref="member">sepc</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>pt_regs-&gt;<ref refid="structregs__context_1a18aef6806d4b8f624a6623f0ac182997" kindref="member">sstatus</ref><sp/>=<sp/>cur_regs-&gt;<ref refid="structregs__context_1a18aef6806d4b8f624a6623f0ac182997" kindref="member">sstatus</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>pt_regs-&gt;<ref refid="structregs__context_1ab8eb6e17d289be7233fae337c5207a60" kindref="member">sbadaddr</ref><sp/>=<sp/>cur_regs-&gt;<ref refid="structregs__context_1ab8eb6e17d289be7233fae337c5207a60" kindref="member">sbadaddr</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>pt_regs-&gt;<ref refid="structregs__context_1a5dd885f66475d14f5f315ebb0d82ac10" kindref="member">scause</ref><sp/>=<sp/>cur_regs-&gt;<ref refid="structregs__context_1a5dd885f66475d14f5f315ebb0d82ac10" kindref="member">scause</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structswitchto__context" kindref="compound">switchto_context_t</ref><sp/>*sw_regs<sp/>=<sp/>(<ref refid="structswitchto__context" kindref="compound">switchto_context_t</ref><sp/>*)(kernel_stack<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structregs__context" kindref="compound">regs_context_t</ref>)<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="context_8h_1a9670a8327e4d995310029b44318561a3" kindref="member">switchto_context_t</ref>));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>sw_regs-&gt;<ref refid="structswitchto__context_1a9c82a67ee9310247361fa2a7e0799ab6" kindref="member">regs</ref>[<ref refid="regs_8h_1a5c4731eca681365ad7429d448518f8c8" kindref="member">switch_reg_ra</ref>]<sp/>=<sp/>(<ref refid="types_8h_1a62065ae2bc90ff72892eddfeedcffafa" kindref="member">reg_t</ref>)&amp;<ref refid="stack_8c_1a07cfb7a65fdc8a5e36fd62883f3e150e" kindref="member">user_ret_from_exception</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>sw_regs-&gt;<ref refid="structswitchto__context_1a9c82a67ee9310247361fa2a7e0799ab6" kindref="member">regs</ref>[<ref refid="regs_8h_1aa597fef926db4b180b82eaf3a69b52c0" kindref="member">switch_reg_sp</ref>]<sp/>=<sp/><ref refid="structpcb" kindref="compound">pcb</ref>-&gt;<ref refid="structpcb_1a3f6b08a1cf6af57de3fcc0c9b3757e1f" kindref="member">kernel_sp</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpcb" kindref="compound">pcb</ref>-&gt;<ref refid="structpcb_1a9a2040071a0df89c67b0fb11ee84f407" kindref="member">save_context</ref><sp/>=<sp/>pt_regs;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpcb" kindref="compound">pcb</ref>-&gt;<ref refid="structpcb_1ab6a33c97f624d5b5052d1823aedf1710" kindref="member">switch_context</ref><sp/>=<sp/>sw_regs;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pcb-&gt;save_context-&gt;regs[switch_reg_s0]<sp/>=<sp/>user_stack<sp/>==<sp/>USER_STACK_ADDR<sp/>?<sp/>(*current_running)-&gt;save_context-&gt;regs[2]<sp/>:<sp/>user_stack;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/><ref refid="pcb_8h_1a977f0a84f5dd94d49fbbc0fa194e26a3" kindref="member">CLONE_SETTLS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpcb" kindref="compound">pcb</ref>-&gt;<ref refid="structpcb_1a9a2040071a0df89c67b0fb11ee84f407" kindref="member">save_context</ref>-&gt;<ref refid="structregs__context_1a0f594561b5a209149c4d59f665d23a56" kindref="member">regs</ref>[<ref refid="regs_8h_1affb98709c50f6bc4e15a79cab90d3e9d" kindref="member">reg_tp</ref>]<sp/>=<sp/>(<ref refid="types_8h_1a62065ae2bc90ff72892eddfeedcffafa" kindref="member">reg_t</ref>)tls;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/arch/riscv/kernel/init/stack.c"/>
  </compounddef>
</doxygen>
