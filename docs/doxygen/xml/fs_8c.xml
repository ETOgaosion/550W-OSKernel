<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="zh">
  <compounddef id="fs_8c" kind="file" language="C++">
    <compoundname>fs.c</compoundname>
    <includes refid="pgtable_8h" local="no">asm/pgtable.h</includes>
    <includes refid="sbi_8h" local="no">asm/sbi.h</includes>
    <includes refid="io_8h" local="no">arch/riscv/include/asm/io.h</includes>
    <includes refid="screen_8h" local="no">drivers/screen/screen.h</includes>
    <includes refid="virtio_8h" local="no">drivers/virtio/virtio.h</includes>
    <includes refid="fat32_8h" local="no">fs/fat32.h</includes>
    <includes refid="file_8h" local="no">fs/file.h</includes>
    <includes refid="fs_8h" local="no">fs/fs.h</includes>
    <includes refid="stdio_8h" local="no">lib/stdio.h</includes>
    <includes refid="string_8h" local="no">lib/string.h</includes>
    <includes refid="mm_8h" local="no">os/mm.h</includes>
    <includes refid="pcb_8h" local="no">os/pcb.h</includes>
    <includes refid="sync_8h" local="no">os/sync.h</includes>
    <includes refid="time_8h" local="no">os/time.h</includes>
    <includes local="no">user/user_programs.h</includes>
    <incdepgraph>
      <node id="1">
        <label>src/fs/fs.c</label>
        <link refid="fs_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>fs/fs.h</label>
        <link refid="fs_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>asm/pgtable.h</label>
        <link refid="pgtable_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>os/mm.h</label>
        <link refid="mm_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>fs/fat32.h</label>
        <link refid="fat32_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>drivers/screen/screen.h</label>
        <link refid="screen_8h"/>
      </node>
      <node id="17">
        <label>lib/stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>common/elf.h</label>
        <link refid="elf_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>common/errno.h</label>
        <link refid="errno_8h"/>
      </node>
      <node id="7">
        <label>arch/riscv/include/asm/io.h</label>
        <link refid="io_8h"/>
      </node>
      <node id="9">
        <label>drivers/virtio/virtio.h</label>
        <link refid="virtio_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>os/cpu.h</label>
        <link refid="cpu_8h"/>
      </node>
      <node id="24">
        <label>os/time.h</label>
        <link refid="time_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>asm/context.h</label>
        <link refid="context_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>asm/sbidef.h</label>
        <link refid="sbidef_8h"/>
      </node>
      <node id="5">
        <label>common/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>lib/string.h</label>
        <link refid="string_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>asm/sbi.h</label>
        <link refid="sbi_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>os/pcb.h</label>
        <link refid="pcb_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>fs/file.h</label>
        <link refid="file_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>user/user_programs.h</label>
      </node>
      <node id="10">
        <label>os/lock.h</label>
        <link refid="lock_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>lib/stdarg.h</label>
        <link refid="stdarg_8h"/>
      </node>
      <node id="23">
        <label>os/sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>lib/list.h</label>
        <link refid="list_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structfd__mbox" prot="public">fd_mbox</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="fs_8c_1a259661d978208e7830355efc766e6437" prot="public" static="no">
        <name>END_OF_DIR</name>
        <initializer>0x00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="291" column="9" bodyfile="src/fs/fs.c" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fs_8c_1adf43b29b5c2b2d85cf65547f12399272" prot="public" static="no">
        <name>EMPTY_ENTRY</name>
        <initializer>0xE5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="292" column="9" bodyfile="src/fs/fs.c" bodystart="292" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="fs_8c_1a7be5444289eda6ebe398824eca97e4bf" prot="public" static="no">
        <type>struct <ref refid="structfd__mbox" kindref="compound">fd_mbox</ref></type>
        <definition>typedef struct fd_mbox fd_mbox_t</definition>
        <argsstring></argsstring>
        <name>fd_mbox_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="25" column="11"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" prot="public" static="no" mutable="no">
        <type><ref refid="fat32_8h_1a9435cc3223d5ebe7b4dcf66c22c8e455" kindref="member">fat32_t</ref></type>
        <definition>fat32_t fat</definition>
        <argsstring></argsstring>
        <name>fat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="19" column="9" bodyfile="src/fs/fs.c" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fs_8c_1ab49ea0634e50fbcf6723c042807d010d" prot="public" static="no" mutable="no">
        <type><ref refid="fat32_8h_1a980c2de82bdbc2af89d6e36b540baf6e" kindref="member">dir_info_t</ref></type>
        <definition>dir_info_t root_dir</definition>
        <argsstring></argsstring>
        <name>root_dir</name>
        <initializer>= {.name = &quot;/\0&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="20" column="12" bodyfile="src/fs/fs.c" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fs_8c_1a7ed1f339a9c42b1a180ffbf41bb91d10" prot="public" static="no" mutable="no">
        <type><ref refid="fat32_8h_1a980c2de82bdbc2af89d6e36b540baf6e" kindref="member">dir_info_t</ref></type>
        <definition>dir_info_t cur_dir</definition>
        <argsstring></argsstring>
        <name>cur_dir</name>
        <initializer>= {.name = &quot;/\0&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="20" column="22" bodyfile="src/fs/fs.c" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fs_8c_1a68d3debefdc71d8e7bd5de836a4c377e" prot="public" static="no" mutable="no">
        <type><ref refid="fs_8c_1a7be5444289eda6ebe398824eca97e4bf" kindref="member">fd_mbox_t</ref></type>
        <definition>fd_mbox_t fd_mbox_map[MAX_FD]</definition>
        <argsstring>[MAX_FD]</argsstring>
        <name>fd_mbox_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="27" column="11" bodyfile="src/fs/fs.c" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="fs_8c_1af7c6fadfeef72fe01d7b305239373ee0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t fat32_fcluster2size</definition>
        <argsstring>(uint32_t first)</argsstring>
        <name>fat32_fcluster2size</name>
        <param>
          <type>uint32_t</type>
          <declname>first</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="52" column="10" bodyfile="src/fs/fs.c" bodystart="52" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1a5736ddf8a694313c2de4d435f66aba9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* read_whole_dir</definition>
        <argsstring>(uint32_t first, uint32_t size)</argsstring>
        <name>read_whole_dir</name>
        <param>
          <type>uint32_t</type>
          <declname>first</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>read whle file by first cluster </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>first</parametername>
</parameternamelist>
<parameterdescription>
<para>id of first cluster </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>addr of data, callee should free buffer by calling func(TODO) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="85" column="6" bodyfile="src/fs/fs.c" bodystart="85" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1ab263423f94094a4fd4e8c28d79840755" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int write_whole_dir</definition>
        <argsstring>(uint32_t first, void *data, uint32_t write)</argsstring>
        <name>write_whole_dir</name>
        <param>
          <type>uint32_t</type>
          <declname>first</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>write</declname>
        </param>
        <briefdescription>
<para>write whole file by first cluster </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>first</parametername>
</parameternamelist>
<parameterdescription>
<para>id of first cluster </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>write</parametername>
</parameternamelist>
<parameterdescription>
<para>write or not </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>data size need to be size from first cluster? </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 means success, fail otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="136" column="5" bodyfile="src/fs/fs.c" bodystart="136" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1acdbc891e6ee9df840bb8ec93c380677e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t alloc_cluster</definition>
        <argsstring>(uint32_t first)</argsstring>
        <name>alloc_cluster</name>
        <param>
          <type>uint32_t</type>
          <declname>first</declname>
        </param>
        <briefdescription>
<para>alloc a nea cluster for a file/dir </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>first</parametername>
</parameternamelist>
<parameterdescription>
<para>id of first cluster </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>alloced cluster num </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="173" column="10" bodyfile="src/fs/fs.c" bodystart="173" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1a43712190cb180f82c70726244079751c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void filename2path</definition>
        <argsstring>(char *path, char *name, const char *filename)</argsstring>
        <name>filename2path</name>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>divede filename into path and name </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer for dir path </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer file name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>filename with path </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="251" column="6" bodyfile="src/fs/fs.c" bodystart="251" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1a1e6fc6065db482dfd2da40621c76102c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* path2name</definition>
        <argsstring>(char *path, char *name)</argsstring>
        <name>path2name</name>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer for dir path </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>file in now dir </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>name len </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="274" column="6" bodyfile="src/fs/fs.c" bodystart="274" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1a43e2ec2baca6d87ae8dc1a6fef2bc813" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int is_end_of_dir</definition>
        <argsstring>(dentry_t *entry)</argsstring>
        <name>is_end_of_dir</name>
        <param>
          <type><ref refid="fat32_8h_1adea5e9d8af4a39aaf5ea29b82359b74c" kindref="member">dentry_t</ref> *</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="294" column="5" bodyfile="src/fs/fs.c" bodystart="294" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1afd26ad29ba3832e6cd9a367efdfa7745" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int is_empty_entry</definition>
        <argsstring>(dentry_t *entry)</argsstring>
        <name>is_empty_entry</name>
        <param>
          <type><ref refid="fat32_8h_1adea5e9d8af4a39aaf5ea29b82359b74c" kindref="member">dentry_t</ref> *</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="301" column="5" bodyfile="src/fs/fs.c" bodystart="301" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1a2ec923e764c37b83412774b1d043d0c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ldentry2name</definition>
        <argsstring>(dentry_t *entry, char *name)</argsstring>
        <name>ldentry2name</name>
        <param>
          <type><ref refid="fat32_8h_1adea5e9d8af4a39aaf5ea29b82359b74c" kindref="member">dentry_t</ref> *</type>
          <declname>entry</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>get name from ldentry, return offset of these lentry </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>file name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>entry</parametername>
</parameternamelist>
<parameterdescription>
<para>first entry of LFN entry </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="315" column="5" bodyfile="src/fs/fs.c" bodystart="315" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1aefa764ed800e79576511e4fc1b39c4ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sdentry2name</definition>
        <argsstring>(dentry_t *entry, char *name)</argsstring>
        <name>sdentry2name</name>
        <param>
          <type><ref refid="fat32_8h_1adea5e9d8af4a39aaf5ea29b82359b74c" kindref="member">dentry_t</ref> *</type>
          <declname>entry</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>get name from sdentry, return offset(1) of this entry </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>file name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>entry</parametername>
</parameternamelist>
<parameterdescription>
<para>first entry of file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="372" column="5" bodyfile="src/fs/fs.c" bodystart="372" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1a16e005ccdf596477d61911a0e79f5f3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dentry2name</definition>
        <argsstring>(dentry_t *entry, char *name)</argsstring>
        <name>dentry2name</name>
        <param>
          <type><ref refid="fat32_8h_1adea5e9d8af4a39aaf5ea29b82359b74c" kindref="member">dentry_t</ref> *</type>
          <declname>entry</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>get name from dentry, return offset of this whole entry </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>file name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>entry</parametername>
</parameternamelist>
<parameterdescription>
<para>first entry of file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="403" column="5" bodyfile="src/fs/fs.c" bodystart="403" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1a3d6f2b8b1f2c39a27d09bcf11d343187" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fat32_name2offset</definition>
        <argsstring>(char *name, dentry_t *entry)</argsstring>
        <name>fat32_name2offset</name>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="fat32_8h_1adea5e9d8af4a39aaf5ea29b82359b74c" kindref="member">dentry_t</ref> *</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="422" column="5" bodyfile="src/fs/fs.c" bodystart="422" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1a6172695741223828e9e947fae0065aaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fat32_name2dir</definition>
        <argsstring>(char *name, dir_info_t *now)</argsstring>
        <name>fat32_name2dir</name>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="fat32_8h_1a980c2de82bdbc2af89d6e36b540baf6e" kindref="member">dir_info_t</ref> *</type>
          <declname>now</declname>
        </param>
        <briefdescription>
<para>search file in dir, fail then return 0, other means hit </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>file name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>now</parametername>
</parameternamelist>
<parameterdescription>
<para>now dir info </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="450" column="5" bodyfile="src/fs/fs.c" bodystart="450" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1a34bc171d41b6c59e03fe21dc2a70416f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fat32_new_dentry</definition>
        <argsstring>(dentry_t *entry, uint32_t flags, int len, char *name)</argsstring>
        <name>fat32_new_dentry</name>
        <param>
          <type><ref refid="fat32_8h_1adea5e9d8af4a39aaf5ea29b82359b74c" kindref="member">dentry_t</ref> *</type>
          <declname>entry</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>set new dentry </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>file name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>file flags </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of LFN </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="479" column="5" bodyfile="src/fs/fs.c" bodystart="479" bodyend="540"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1a3908ce770240abc7be9af011f236918b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int alloc_dentry</definition>
        <argsstring>(dentry_t **dtable, char *name, mode_t flags, mode_t mode, dir_info_t *now)</argsstring>
        <name>alloc_dentry</name>
        <param>
          <type><ref refid="fat32_8h_1adea5e9d8af4a39aaf5ea29b82359b74c" kindref="member">dentry_t</ref> **</type>
          <declname>dtable</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="file_8h_1af8f4385bb42836d1e3ad4fea9d71d1b9" kindref="member">mode_t</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="file_8h_1af8f4385bb42836d1e3ad4fea9d71d1b9" kindref="member">mode_t</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="fat32_8h_1a980c2de82bdbc2af89d6e36b540baf6e" kindref="member">dir_info_t</ref> *</type>
          <declname>now</declname>
        </param>
        <briefdescription>
<para>create a new dentry in dtable, return sdentry offest of new entry, -1 means fail </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtable</parametername>
</parameternamelist>
<parameterdescription>
<para>whole table of dir </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>file name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>now</parametername>
</parameternamelist>
<parameterdescription>
<para>now dir info </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>create file(RW) or dir by O_DIRECTORY </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="550" column="5" bodyfile="src/fs/fs.c" bodystart="550" bodyend="593"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1ae5044d9b0bc2286bc5dc04fc14fdc164" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int destroy_dentry</definition>
        <argsstring>(dentry_t *dtable, int offset)</argsstring>
        <name>destroy_dentry</name>
        <param>
          <type><ref refid="fat32_8h_1adea5e9d8af4a39aaf5ea29b82359b74c" kindref="member">dentry_t</ref> *</type>
          <declname>dtable</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>destroy an dir entry, include LFN and sn </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtable</parametername>
</parameternamelist>
<parameterdescription>
<para>whole table of dir </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>offset for sn </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="600" column="5" bodyfile="src/fs/fs.c" bodystart="600" bodyend="610"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1afc3440e0d49f08a090794f81e6f6988d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fat32_path2dir</definition>
        <argsstring>(char *path, dir_info_t *new, dir_info_t now)</argsstring>
        <name>fat32_path2dir</name>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="fat32_8h_1a980c2de82bdbc2af89d6e36b540baf6e" kindref="member">dir_info_t</ref> *</type>
          <declname>new</declname>
        </param>
        <param>
          <type><ref refid="fat32_8h_1a980c2de82bdbc2af89d6e36b540baf6e" kindref="member">dir_info_t</ref></type>
          <declname>now</declname>
        </param>
        <briefdescription>
<para>fail return 0 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer for dir path </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new</parametername>
</parameternamelist>
<parameterdescription>
<para>target dir info </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>now</parametername>
</parameternamelist>
<parameterdescription>
<para>now dir info </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="619" column="5" bodyfile="src/fs/fs.c" bodystart="619" bodyend="646"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1a79130d4d80dcfc1ec167de197ac7de78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fat32_dentry2fd</definition>
        <argsstring>(dentry_t *entry, fd_t *file, mode_t flags, mode_t mode, char *name)</argsstring>
        <name>fat32_dentry2fd</name>
        <param>
          <type><ref refid="fat32_8h_1adea5e9d8af4a39aaf5ea29b82359b74c" kindref="member">dentry_t</ref> *</type>
          <declname>entry</declname>
        </param>
        <param>
          <type><ref refid="file_8h_1adc00d5703f6722526aeda522247c3ec6" kindref="member">fd_t</ref> *</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="file_8h_1af8f4385bb42836d1e3ad4fea9d71d1b9" kindref="member">mode_t</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="file_8h_1af8f4385bb42836d1e3ad4fea9d71d1b9" kindref="member">mode_t</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="648" column="5" bodyfile="src/fs/fs.c" bodystart="648" bodyend="663"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1af264b947ceef01d5bfb234c2002a3666" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fs_init</definition>
        <argsstring>()</argsstring>
        <name>fs_init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="665" column="5" bodyfile="src/fs/fs.c" bodystart="665" bodyend="840"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1a8febdf58a0f5691f83349e95eae8d074" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long sys_getcwd</definition>
        <argsstring>(char *buf, size_t size)</argsstring>
        <name>sys_getcwd</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1afeaa5ef46acd844422607ca6602691ef" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer for cur_dir path </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>bytes of buf </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="847" column="6" bodyfile="src/fs/fs.c" bodystart="847" bodyend="850"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1a239a2e4b8412446aac813a9439350059" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sys_pipe2</definition>
        <argsstring>(int *fd, mode_t flags)</argsstring>
        <name>sys_pipe2</name>
        <param>
          <type>int *</type>
          <declname>fd</declname>
        </param>
        <param>
          <type><ref refid="file_8h_1af8f4385bb42836d1e3ad4fea9d71d1b9" kindref="member">mode_t</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>allocate pipe to fd[2]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>target fd array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>failed 0: succeed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="858" column="5" bodyfile="src/fs/fs.c" bodystart="858" bodyend="886"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1a3c4b72a274d8b87700a689b13b232c5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sys_dup</definition>
        <argsstring>(int old)</argsstring>
        <name>sys_dup</name>
        <param>
          <type>int</type>
          <declname>old</declname>
        </param>
        <briefdescription>
<para>copy a fd and return the new one </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>old</parametername>
</parameternamelist>
<parameterdescription>
<para>old fd </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="893" column="5" bodyfile="src/fs/fs.c" bodystart="893" bodyend="908"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1a52646d65d2bce20361d7ba0784868e04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sys_dup3</definition>
        <argsstring>(int old, int new, mode_t flags)</argsstring>
        <name>sys_dup3</name>
        <param>
          <type>int</type>
          <declname>old</declname>
        </param>
        <param>
          <type>int</type>
          <declname>new</declname>
        </param>
        <param>
          <type><ref refid="file_8h_1af8f4385bb42836d1e3ad4fea9d71d1b9" kindref="member">mode_t</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>copy a fd and return the new one </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>old</parametername>
</parameternamelist>
<parameterdescription>
<para>old fd </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new</parametername>
</parameternamelist>
<parameterdescription>
<para>new fd </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="915" column="5" bodyfile="src/fs/fs.c" bodystart="915" bodyend="926"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1a9b352b5b74a2cd9b6aab5aef21f11872" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sys_mkdirat</definition>
        <argsstring>(int dirfd, const char *path_0, mode_t mode)</argsstring>
        <name>sys_mkdirat</name>
        <param>
          <type>int</type>
          <declname>dirfd</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path_0</declname>
        </param>
        <param>
          <type><ref refid="file_8h_1af8f4385bb42836d1e3ad4fea9d71d1b9" kindref="member">mode_t</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>mk dir at patch, success 0 fail -1 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dir_fd</parametername>
</parameternamelist>
<parameterdescription>
<para>mkdir at this dir </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flag</parametername>
</parameternamelist>
<parameterdescription>
<para>AT_FDCWD means mkdir at cwd </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>path if from &apos;/&apos;, other just means dir name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="934" column="5" bodyfile="src/fs/fs.c" bodystart="934" bodyend="974"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1a7948e6c31a074f7d53aa5836fec7fe12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sys_chdir</definition>
        <argsstring>(char *path)</argsstring>
        <name>sys_chdir</name>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>change dir by patch, fail return -1 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer for dir path </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="981" column="5" bodyfile="src/fs/fs.c" bodystart="981" bodyend="1004"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1afa7db92317ec016b54afebbbcc6b273a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sys_getdents64</definition>
        <argsstring>(int fd, dirent64_t *dirent, size_t len)</argsstring>
        <name>sys_getdents64</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type><ref refid="fs_8h_1a24aad750df2ab79e1cab28e733481b6f" kindref="member">dirent64_t</ref> *</type>
          <declname>dirent</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1afeaa5ef46acd844422607ca6602691ef" kindref="member">size_t</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="1006" column="5" bodyfile="src/fs/fs.c" bodystart="1006" bodyend="1029"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1a8b008c50b5e190654619ffbbdfc8f1a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sys_openat</definition>
        <argsstring>(int dirfd, const char *filename, mode_t flags, mode_t mode)</argsstring>
        <name>sys_openat</name>
        <param>
          <type>int</type>
          <declname>dirfd</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="file_8h_1af8f4385bb42836d1e3ad4fea9d71d1b9" kindref="member">mode_t</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="file_8h_1af8f4385bb42836d1e3ad4fea9d71d1b9" kindref="member">mode_t</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>open a file with path/cwd+path/dirfd+path </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>file descripter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>bytes buf </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>read len </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="1037" column="5" bodyfile="src/fs/fs.c" bodystart="1037" bodyend="1100"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1a9d94cbe3ac3c59ac54d9e884a024d9c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sys_close</definition>
        <argsstring>(int fd)</argsstring>
        <name>sys_close</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="1102" column="5" bodyfile="src/fs/fs.c" bodystart="1102" bodyend="1104"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1a4b77d64a45fc749afe7885dd223f85a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sys_linkat</definition>
        <argsstring>(int old, const char *oldname, int newd, const char *newname, mode_t flags)</argsstring>
        <name>sys_linkat</name>
        <param>
          <type>int</type>
          <declname>old</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>oldname</declname>
        </param>
        <param>
          <type>int</type>
          <declname>newd</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>newname</declname>
        </param>
        <param>
          <type><ref refid="file_8h_1af8f4385bb42836d1e3ad4fea9d71d1b9" kindref="member">mode_t</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="1106" column="5" bodyfile="src/fs/fs.c" bodystart="1106" bodyend="1150"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1a5ef768b4960fc26d7237db1e53522ecb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sys_unlinkat</definition>
        <argsstring>(int dirfd, const char *path_0, mode_t flags)</argsstring>
        <name>sys_unlinkat</name>
        <param>
          <type>int</type>
          <declname>dirfd</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path_0</declname>
        </param>
        <param>
          <type><ref refid="file_8h_1af8f4385bb42836d1e3ad4fea9d71d1b9" kindref="member">mode_t</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>rm file directed by path, 0 success -1 fail </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dirfd</parametername>
</parameternamelist>
<parameterdescription>
<para>file descripter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>dile path </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>0 or AT_REMOVEDIR </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="1158" column="5" bodyfile="src/fs/fs.c" bodystart="1158" bodyend="1204"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1a17d30333f33f90c98570dc8c5f438283" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sys_mount</definition>
        <argsstring>(const char *special, const char *dir, const char *type, mode_t flags, void *data)</argsstring>
        <name>sys_mount</name>
        <param>
          <type>const char *</type>
          <declname>special</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="file_8h_1af8f4385bb42836d1e3ad4fea9d71d1b9" kindref="member">mode_t</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="1206" column="5" bodyfile="src/fs/fs.c" bodystart="1206" bodyend="1209"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1ae98d4677cec7581b48efb2a2261cd61b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sys_umount2</definition>
        <argsstring>(const char *special, mode_t flags)</argsstring>
        <name>sys_umount2</name>
        <param>
          <type>const char *</type>
          <declname>special</declname>
        </param>
        <param>
          <type><ref refid="file_8h_1af8f4385bb42836d1e3ad4fea9d71d1b9" kindref="member">mode_t</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="1211" column="5" bodyfile="src/fs/fs.c" bodystart="1211" bodyend="1214"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1a538b392173a1c0fffcbed18345952d60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8h_1af10f4c58d91a6fa30ccc8a19d0ecbf48" kindref="member">ssize_t</ref></type>
        <definition>ssize_t sys_read</definition>
        <argsstring>(int fd, char *buf, size_t count)</argsstring>
        <name>sys_read</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1afeaa5ef46acd844422607ca6602691ef" kindref="member">size_t</ref></type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>read count bytes to buf of fd file </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>file descripter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>bytes buf </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>read len </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="1222" column="9" bodyfile="src/fs/fs.c" bodystart="1222" bodyend="1261"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1a1669296484c126d069b1bceeb97af1e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8h_1af10f4c58d91a6fa30ccc8a19d0ecbf48" kindref="member">ssize_t</ref></type>
        <definition>ssize_t sys_write</definition>
        <argsstring>(int fd, const char *buf, size_t count)</argsstring>
        <name>sys_write</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1afeaa5ef46acd844422607ca6602691ef" kindref="member">size_t</ref></type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="1263" column="9" bodyfile="src/fs/fs.c" bodystart="1263" bodyend="1305"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1ab82f35605a94da4595380df6a1774b91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sys_fstat</definition>
        <argsstring>(int fd, kstat_t *statbuf)</argsstring>
        <name>sys_fstat</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type><ref refid="fs_8h_1a8785463dd1769d1167cff6b8f75f28db" kindref="member">kstat_t</ref> *</type>
          <declname>statbuf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="1307" column="5" bodyfile="src/fs/fs.c" bodystart="1307" bodyend="1350"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1a1c701b3d5e133887389c2b3c9e2f331c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fs_load_file</definition>
        <argsstring>(const char *name, uint8_t **bin, int *len)</argsstring>
        <name>fs_load_file</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>uint8_t **</type>
          <declname>bin</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>load elf file in root dir, 0 success, -1 fail </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>elf file should be loaded </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>elf bit array </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="1357" column="5" bodyfile="src/fs/fs.c" bodystart="1357" bodyend="1375"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1a42e383603cf330e3ef86bab31f7f8893" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* sys_mmap</definition>
        <argsstring>(void *addr, size_t length, int prot, int flags, int fd, off_t offset)</argsstring>
        <name>sys_mmap</name>
        <param>
          <type>void *</type>
          <declname>addr</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1afeaa5ef46acd844422607ca6602691ef" kindref="member">size_t</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type>int</type>
          <declname>prot</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type><ref refid="file_8h_1a053c614b69adbac710bb132a6eb9ccf6" kindref="member">off_t</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="1377" column="6" bodyfile="src/fs/fs.c" bodystart="1377" bodyend="1392"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1a1dd9fbbb6f39b66c936d6a283481149f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sys_munmap</definition>
        <argsstring>(void *addr, size_t length)</argsstring>
        <name>sys_munmap</name>
        <param>
          <type>void *</type>
          <declname>addr</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1afeaa5ef46acd844422607ca6602691ef" kindref="member">size_t</ref></type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="1393" column="5" bodyfile="src/fs/fs.c" bodystart="1393" bodyend="1395"/>
      </memberdef>
      <memberdef kind="function" id="fs_8c_1ac7c5c9e629cd40cf7f3ab374962d2610" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8h_1a1062901a7428fdd9c7f180f5e01ea056" kindref="member">bool</ref></type>
        <definition>bool fs_check_file_existence</definition>
        <argsstring>(const char *name)</argsstring>
        <name>fs_check_file_existence</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fs.c" line="1423" column="6" bodyfile="src/fs/fs.c" bodystart="1423" bodyend="1425"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="pgtable_8h" kindref="compound">asm/pgtable.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="sbi_8h" kindref="compound">asm/sbi.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&lt;fs/fs.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="io_8h" kindref="compound">arch/riscv/include/asm/io.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="screen_8h" kindref="compound">drivers/screen/screen.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="virtio_8h" kindref="compound">drivers/virtio/virtio.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="fat32_8h" kindref="compound">fs/fat32.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="file_8h" kindref="compound">fs/file.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="fs_8h" kindref="compound">fs/fs.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdio_8h" kindref="compound">lib/stdio.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="string_8h" kindref="compound">lib/string.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="mm_8h" kindref="compound">os/mm.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="pcb_8h" kindref="compound">os/pcb.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="sync_8h" kindref="compound">os/sync.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="time_8h" kindref="compound">os/time.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;user/user_programs.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>fat32<sp/>infomation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><ref refid="structfat32" kindref="compound">fat32_t</ref><sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><ref refid="structdir__info" kindref="compound">dir_info_t</ref><sp/><ref refid="fs_8c_1ab49ea0634e50fbcf6723c042807d010d" kindref="member">root_dir</ref><sp/>=<sp/>{.<ref refid="structdir__info_1a1d08207729ecb85a7e1562dc7432b598" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/\0&quot;</highlight><highlight class="normal">},<sp/><ref refid="fs_8c_1a7ed1f339a9c42b1a180ffbf41bb91d10" kindref="member">cur_dir</ref><sp/>=<sp/>{.<ref refid="structdir__info_1a1d08207729ecb85a7e1562dc7432b598" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/\0&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="structfd__mbox" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfd__mbox" kindref="compound">fd_mbox</ref><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structfd__mbox_1a3655f3ea9387c50fe9ef73a92c2b2bac" kindref="member">fd</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structfd__mbox_1a6cc4821684b87d450675fe9a78f97e1a" kindref="member">mailbox</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}<sp/><ref refid="fs_8c_1a7be5444289eda6ebe398824eca97e4bf" kindref="member">fd_mbox_t</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><ref refid="structfd__mbox" kindref="compound">fd_mbox_t</ref><sp/><ref refid="fs_8c_1a68d3debefdc71d8e7bd5de836a4c377e" kindref="member">fd_mbox_map</ref>[<ref refid="file_8h_1ae9c7a3fcf619f9aeb244f8e85a68097f" kindref="member">MAX_FD</ref>];</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>/*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*<sp/>return<sp/>the<sp/>next<sp/>cluster<sp/>of<sp/>file<sp/>by<sp/>current<sp/>cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*<sp/>0<sp/>means<sp/>file<sp/>read<sp/>fail<sp/>or<sp/>end<sp/>of<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>static<sp/>inline<sp/>uint32_t<sp/>next_cluster(uint32_t<sp/>cluster){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>uint32_t*<sp/>table<sp/>=<sp/>k_mm_malloc(fat.bpb.bytes_per_sec);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>int<sp/>ret<sp/>=<sp/>sbi_sd_read((uint32_t)table,1,fat_cluster2fatsec(cluster));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if(ret){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k_print(&quot;&gt;<sp/>[FAT32<sp/>traverse]<sp/>fat<sp/>sector<sp/>read<sp/>error!\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>next<sp/>=<sp/>table[fat_cluster2fatoff(cluster)]<sp/>&amp;<sp/>FAT_MASK;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//kfree(table);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if(next<sp/>&gt;=<sp/>FAT_MAX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if(next<sp/>==<sp/>FAT_BAD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k_print(&quot;&gt;<sp/>[FAT32<sp/>traverse]<sp/>current<sp/>cluster<sp/>%d<sp/>bad<sp/>status!\n&quot;,cluster);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>next;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">uint32_t<sp/><ref refid="fs_8c_1af7c6fadfeef72fe01d7b305239373ee0" kindref="member">fat32_fcluster2size</ref>(uint32_t<sp/>first)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ftable[<ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1ac6ee0f9ae1d10f22427bbc7595d10c91" kindref="member">bytes_per_sec</ref><sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t)];</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>cur_fat_sec<sp/>=<sp/>0xffffffff;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_fat_sec<sp/>==<sp/>0xffffffff<sp/>||<sp/>fat_cluster2fatsec(first)<sp/>!=<sp/>cur_fat_sec)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_fat_sec<sp/>=<sp/>fat_cluster2fatsec(first);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fseek(fp,cur_fat_sec*fat.bpb.bytes_per_sec,0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fread(ftable,fat.bpb.bytes_per_sec,1,fp);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="virtio_8h_1a33511cb0c7b8c8a3a4c9e9a337dc567a" kindref="member">d_sd_read</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)ftable,<sp/>&amp;cur_fat_sec,<sp/>1);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;read<sp/>%s<sp/>\n&quot;,buffer[0]-&gt;data);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>=<sp/>ftable[fat_cluster2fatoff(first)]<sp/>&amp;<sp/><ref refid="fat32_8h_1a283ce77ac13408cf4b039da8f9df7dd2" kindref="member">FAT_MASK</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size++;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cnt--;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cnt)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(first<sp/>&lt;<sp/>FAT_MAX<sp/>&amp;&amp;<sp/>first<sp/>&gt;<sp/>2);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size<sp/>*<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a5fc7659eb603d602a275dadaf686b849" kindref="member">bytes_per_cluster</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO<sp/>:<sp/>func<sp/>of<sp/>free<sp/>buffers<sp/>by<sp/>&amp;data,<sp/>use<sp/>write_whole_dir</highlight></codeline>
<codeline lineno="85"><highlight class="comment"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fs_8c_1a5736ddf8a694313c2de4d435f66aba9a" kindref="member">read_whole_dir</ref>(uint32_t<sp/>first,<sp/>uint32_t<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="mm_8h_1a00b0aa73fb7186a4c940dd83496dd199" kindref="member">k_mm_malloc</ref>(((size<sp/>+<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a5fc7659eb603d602a275dadaf686b849" kindref="member">bytes_per_cluster</ref><sp/>-<sp/>1)<sp/>/<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a5fc7659eb603d602a275dadaf686b849" kindref="member">bytes_per_cluster</ref>)<sp/>*<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a5fc7659eb603d602a275dadaf686b849" kindref="member">bytes_per_cluster</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1a06d03ddc23233f125efb5d5daf6fcf79" kindref="member">k_print</ref>(</highlight><highlight class="stringliteral">&quot;[ERROR]<sp/>read<sp/>empty<sp/>file!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ftable[<ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1ac6ee0f9ae1d10f22427bbc7595d10c91" kindref="member">bytes_per_sec</ref><sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t)];</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/><ref refid="fs_8c_1af7c6fadfeef72fe01d7b305239373ee0" kindref="member">fat32_fcluster2size</ref>(first);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;size<sp/>=<sp/>%d,<sp/>malloc<sp/>%d<sp/>sec<sp/>bytes\n&quot;,<sp/>size,<sp/>(size<sp/>/<sp/>fat.bpb.bytes_per_sec<sp/>+<sp/>1)<sp/>*<sp/>fat.bpb.bytes_per_sec);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*data<sp/>=<sp/><ref refid="mm_8h_1a00b0aa73fb7186a4c940dd83496dd199" kindref="member">k_mm_malloc</ref>(((size<sp/>+<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a5fc7659eb603d602a275dadaf686b849" kindref="member">bytes_per_cluster</ref><sp/>-<sp/>1)<sp/>/<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a5fc7659eb603d602a275dadaf686b849" kindref="member">bytes_per_cluster</ref>)<sp/>*<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a5fc7659eb603d602a275dadaf686b849" kindref="member">bytes_per_cluster</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;[debug]<sp/>file<sp/>size<sp/>=<sp/>%u,<sp/>kalloc<sp/>%u\n&quot;,size,((size<sp/>+<sp/>fat.bytes_per_cluster<sp/>-<sp/>1)<sp/>/<sp/>fat.bytes_per_cluster)<sp/>*<sp/>fat.bytes_per_cluster);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>cur_fat_sec<sp/>=<sp/>0xffffffff;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_fat_sec<sp/>==<sp/>0xffffffff<sp/>||<sp/>fat_cluster2fatsec(first)<sp/>!=<sp/>cur_fat_sec)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_fat_sec<sp/>=<sp/>fat_cluster2fatsec(first);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>fseek(fp,cur_fat_sec*fat.bpb.bytes_per_sec,0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>fread(ftable,fat.bpb.bytes_per_sec,1,fp);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="virtio_8h_1a33511cb0c7b8c8a3a4c9e9a337dc567a" kindref="member">d_sd_read</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)ftable,<sp/>&amp;cur_fat_sec,<sp/>1);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;[debug]<sp/>read<sp/>cur<sp/>sec<sp/>%x,<sp/>first<sp/>%x\n&quot;,cur_fat_sec,first);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fseek(fp,fat_cluster2sec(first)*fat.bytes_per_cluster,0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fread(&amp;data[cnt*fat.bytes_per_cluster],<sp/>fat.bytes_per_cluster,<sp/>1,<sp/>fp);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>a<sp/>cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read_whole_cluster(&amp;data[cnt*fat.bytes_per_cluster],fat.bpb.sec_per_cluster);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1a91fb9d11ed7a79a2547dcdca7204b6ac" kindref="member">sec_per_cluster</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>sec_num<sp/>=<sp/>fat_cluster2sec(first)<sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;[debug]<sp/>read<sp/>sec<sp/>%d<sp/>in<sp/>cluster<sp/>%x\n&quot;,sec_num,first);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="virtio_8h_1a33511cb0c7b8c8a3a4c9e9a337dc567a" kindref="member">d_sd_read</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)(&amp;data[cnt<sp/>*<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a5fc7659eb603d602a275dadaf686b849" kindref="member">bytes_per_cluster</ref><sp/>+<sp/>i<sp/>*<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1ac6ee0f9ae1d10f22427bbc7595d10c91" kindref="member">bytes_per_sec</ref>]),<sp/>&amp;sec_num,<sp/>1);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>=<sp/>ftable[fat_cluster2fatoff(first)]<sp/>&amp;<sp/><ref refid="fat32_8h_1a283ce77ac13408cf4b039da8f9df7dd2" kindref="member">FAT_MASK</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cnt++;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(first<sp/>&lt;<sp/>FAT_MAX<sp/>&amp;&amp;<sp/>first<sp/>&gt;<sp/>2);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)data;</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fs_8c_1ab263423f94094a4fd4e8c28d79840755" kindref="member">write_whole_dir</ref>(uint32_t<sp/>first,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/>uint32_t<sp/>write)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first<sp/>&lt;<sp/>2<sp/>||<sp/>!write)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ftable[<ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1ac6ee0f9ae1d10f22427bbc7595d10c91" kindref="member">bytes_per_sec</ref><sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t)];</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>cur_fat_sec<sp/>=<sp/>0xffffffff;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_fat_sec<sp/>==<sp/>0xffffffff<sp/>||<sp/>fat_cluster2fatsec(first)<sp/>!=<sp/>cur_fat_sec)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_fat_sec<sp/>=<sp/>fat_cluster2fatsec(first);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fseek(fp,cur_fat_sec*fat.bpb.bytes_per_sec,0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fread(ftable,fat.bpb.bytes_per_sec,1,fp);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="virtio_8h_1a33511cb0c7b8c8a3a4c9e9a337dc567a" kindref="member">d_sd_read</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)ftable,<sp/>&amp;cur_fat_sec,<sp/>1);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fseek(fp,fat_cluster2sec(first)*fat.bpb.bytes_per_sec,0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fwrite(&amp;data[cnt*fat.bytes_per_cluster],<sp/>fat.bytes_per_cluster,<sp/>1,<sp/>fp);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1a91fb9d11ed7a79a2547dcdca7204b6ac" kindref="member">sec_per_cluster</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>sec_num<sp/>=<sp/>fat_cluster2sec(first)<sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;[debug]<sp/>write<sp/>sec<sp/>%d<sp/>in<sp/>cluster<sp/>%x\n&quot;,sec_num,first);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="virtio_8h_1a3ba8dbd5d9de7f8bb698576b733f17c2" kindref="member">d_sd_write</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)(&amp;((uint8_t<sp/>*)data)[cnt<sp/>*<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a5fc7659eb603d602a275dadaf686b849" kindref="member">bytes_per_cluster</ref><sp/>+<sp/>i<sp/>*<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1ac6ee0f9ae1d10f22427bbc7595d10c91" kindref="member">bytes_per_sec</ref>]),<sp/>&amp;sec_num,<sp/>1);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>=<sp/>ftable[fat_cluster2fatoff(first)]<sp/>&amp;<sp/><ref refid="fat32_8h_1a283ce77ac13408cf4b039da8f9df7dd2" kindref="member">FAT_MASK</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cnt++;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(first<sp/>&lt;<sp/>FAT_MAX<sp/>&amp;&amp;<sp/>first<sp/>&gt;<sp/>2);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>kfree(data);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal">uint32_t<sp/><ref refid="fs_8c_1acdbc891e6ee9df840bb8ec93c380677e" kindref="member">alloc_cluster</ref>(uint32_t<sp/>first)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>cur_fat_sec<sp/>=<sp/>0xffffffff;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fat32_8h_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref><sp/>=<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1ac6ee0f9ae1d10f22427bbc7595d10c91" kindref="member">bytes_per_sec</ref><sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ftable1[<ref refid="fat32_8h_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>];</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ftable2[<ref refid="fat32_8h_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>];</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;[debug]<sp/>alloc<sp/>cluster!<sp/>ftable<sp/>size<sp/>=<sp/>%d\n&quot;,<sp/>sizeof(ftable1));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>last<sp/>cluster<sp/>num<sp/>and<sp/>sec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>functionalize<sp/>first<sp/>cluster<sp/>to<sp/>size?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>next;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_fat_sec<sp/>==<sp/>0xffffffff<sp/>||<sp/>fat_cluster2fatsec(first)<sp/>!=<sp/>cur_fat_sec)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_fat_sec<sp/>=<sp/>fat_cluster2fatsec(first);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fseek(fp,cur_fat_sec*fat.bpb.bytes_per_sec,0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fread(ftable1,fat.bpb.bytes_per_sec,1,fp);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="virtio_8h_1a33511cb0c7b8c8a3a4c9e9a337dc567a" kindref="member">d_sd_read</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)ftable1,<sp/>&amp;cur_fat_sec,<sp/>1);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next<sp/>=<sp/>ftable1[fat_cluster2fatoff(first)]<sp/>&amp;<sp/><ref refid="fat32_8h_1a283ce77ac13408cf4b039da8f9df7dd2" kindref="member">FAT_MASK</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next<sp/>&gt;=<sp/><ref refid="fat32_8h_1a214588323c8c933e0f2955490b0670ff" kindref="member">FAT_MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>=<sp/>next;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>search<sp/>empty<sp/>cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>i<sp/>=<sp/>0,<sp/>base<sp/>=<sp/>fat_cluster2fatsec(0);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1a45e47a9225e413c14d15737c392d4d6d" kindref="member">sec_per_fat</ref>)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>read<sp/>sec<sp/>into<sp/>ftable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>fseek(fp,base*fat.bpb.bytes_per_sec,0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>fread(ftable2,fat.bpb.bytes_per_sec,1,fp);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="virtio_8h_1a33511cb0c7b8c8a3a4c9e9a337dc567a" kindref="member">d_sd_read</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)ftable2,<sp/>&amp;base,<sp/>1);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="fat32_8h_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;[debug]<sp/>fat<sp/>entry(%d,%d)<sp/>:%x\n&quot;,i,j,ftable2[j]<sp/>&amp;<sp/>FAT_MASK);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ftable2[j]<sp/>&amp;<sp/><ref refid="fat32_8h_1a283ce77ac13408cf4b039da8f9df7dd2" kindref="member">FAT_MASK</ref>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ftable2[j]<sp/>=<sp/><ref refid="fat32_8h_1a214588323c8c933e0f2955490b0670ff" kindref="member">FAT_MAX</ref>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;[debug]<sp/>assigned<sp/>value<sp/>%x\n&quot;,ftable2[j]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>new<sp/>cluster<sp/>num</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>(i<sp/>*<sp/><ref refid="fat32_8h_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref><sp/>+<sp/>j)<sp/>&amp;<sp/><ref refid="fat32_8h_1a283ce77ac13408cf4b039da8f9df7dd2" kindref="member">FAT_MASK</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>:<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fseek(fp,(base+i)*fat.bpb.bytes_per_sec,0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;write<sp/>in<sp/>%ld<sp/>bytes\n&quot;,fwrite(ftable2,1,fat.bpb.bytes_per_sec,fp));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="virtio_8h_1a3ba8dbd5d9de7f8bb698576b733f17c2" kindref="member">d_sd_write</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)ftable2,<sp/>&amp;base,<sp/>1);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;[debug]<sp/>alloc<sp/>cluster<sp/>%u<sp/>in<sp/>sec<sp/>%u\n&quot;,<sp/>ret,<sp/>base);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>alloced;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base++;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal">alloced:</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reload<sp/>ftable1<sp/>(ftable1<sp/>hit<sp/>same<sp/>sec<sp/>of<sp/>ftable2)<sp/>and<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>fseek(fp,cur_fat_sec*fat.bpb.bytes_per_sec,0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>fread(ftable1,fat.bpb.bytes_per_sec,1,fp);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="virtio_8h_1a33511cb0c7b8c8a3a4c9e9a337dc567a" kindref="member">d_sd_read</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)ftable1,<sp/>&amp;cur_fat_sec,<sp/>1);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ftable1[fat_cluster2fatoff(first)]<sp/>=<sp/>ret;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>:<sp/>wtite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fseek(fp,cur_fat_sec*fat.bpb.bytes_per_sec,0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fwrite(ftable1,fat.bpb.bytes_per_sec,1,fp);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="virtio_8h_1a3ba8dbd5d9de7f8bb698576b733f17c2" kindref="member">d_sd_write</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)ftable1,<sp/>&amp;cur_fat_sec,<sp/>1);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;[debug]<sp/>fix<sp/>tail<sp/>%u\n&quot;,<sp/>cur_fat_sec);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fs_8c_1a43712190cb180f82c70726244079751c" kindref="member">filename2path</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag<sp/>=<sp/>0,<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(filename[i]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filename[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tag<sp/>=<sp/>i<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="string_8h_1a4985196d8a63d22e320cf33d904d2f92" kindref="member">k_memcpy</ref>((uint8_t<sp/>*)path,<sp/>(uint8_t<sp/>*)filename,<sp/>tag);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>path[tag]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(filename[tag]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name[i++]<sp/>=<sp/>filename[tag++];</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>name[i]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="fs_8c_1a1e6fc6065db482dfd2da40621c76102c" kindref="member">path2name</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path++;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(path[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>path[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name[0]<sp/>=<sp/>path[0];</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path++;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name++;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>name[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>path;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>END_OF_DIR<sp/>0x00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMPTY_ENTRY<sp/>0xE5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fs_8c_1a43e2ec2baca6d87ae8dc1a6fef2bc813" kindref="member">is_end_of_dir</ref>(<ref refid="uniondentry" kindref="compound">dentry_t</ref><sp/>*entry)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entry-&gt;<ref refid="uniondentry_1a2e0a48bc674187147905b55e289be834" kindref="member">sn</ref>.name1[0]<sp/>==<sp/>0x00)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fs_8c_1afd26ad29ba3832e6cd9a367efdfa7745" kindref="member">is_empty_entry</ref>(<ref refid="uniondentry" kindref="compound">dentry_t</ref><sp/>*entry)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((uint8_t)entry-&gt;<ref refid="uniondentry_1a2e0a48bc674187147905b55e289be834" kindref="member">sn</ref>.name1[0]<sp/>==<sp/>0xE5)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fs_8c_1a2ec923e764c37b83412774b1d043d0c2" kindref="member">ldentry2name</ref>(<ref refid="uniondentry" kindref="compound">dentry_t</ref><sp/>*entry,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>long_name_entry_t<sp/>*long_entry<sp/>=<sp/>&amp;entry-&gt;<ref refid="uniondentry_1ad80b95b5fb6a045a49f69ddf519c9325" kindref="member">ln</ref>;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>处理长目录项</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((long_entry-&gt;order<sp/>&amp;<sp/><ref refid="fat32_8h_1a96e90331356a0d3455a9c449f9bd424d" kindref="member">LAST_LONG_ENTRY</ref>)<sp/>==<sp/><ref refid="fat32_8h_1a96e90331356a0d3455a9c449f9bd424d" kindref="member">LAST_LONG_ENTRY</ref>)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>unicode;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>long_entry_num<sp/>=<sp/>long_entry-&gt;order<sp/>&amp;<sp/><ref refid="fat32_8h_1a58626af35e23c5b34253a8934f2d87eb" kindref="member">LONG_ENTRY_SEQ</ref>;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>long_entry_num<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(long_entry_num--)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="fat32_8h_1a497ba0a9b3f71e6d1d16f35e59e0ee41" kindref="member">LONG_NAME1_LEN</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unicode<sp/>=<sp/>long_entry-&gt;name1[i];</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unicode<sp/>==<sp/>0x0000<sp/>||<sp/>unicode<sp/>==<sp/>0xffff)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name[long_entry_num<sp/>*<sp/><ref refid="fat32_8h_1ac790975f8ecfdee44f4e4d86c259fa6b" kindref="member">LONG_NAME_LEN</ref><sp/>+<sp/>count]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name[long_entry_num<sp/>*<sp/><ref refid="fat32_8h_1ac790975f8ecfdee44f4e4d86c259fa6b" kindref="member">LONG_NAME_LEN</ref><sp/>+<sp/>count]<sp/>=<sp/>unicode2char(unicode);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="fat32_8h_1aeed41609dfc0a8f9e8045482e6fde0c6" kindref="member">LONG_NAME2_LEN</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unicode<sp/>=<sp/>long_entry-&gt;name2[i];</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unicode<sp/>==<sp/>0x0000<sp/>||<sp/>unicode<sp/>==<sp/>0xffff)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name[long_entry_num<sp/>*<sp/><ref refid="fat32_8h_1ac790975f8ecfdee44f4e4d86c259fa6b" kindref="member">LONG_NAME_LEN</ref><sp/>+<sp/>count]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name[long_entry_num<sp/>*<sp/><ref refid="fat32_8h_1ac790975f8ecfdee44f4e4d86c259fa6b" kindref="member">LONG_NAME_LEN</ref><sp/>+<sp/>count]<sp/>=<sp/>unicode2char(unicode);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="fat32_8h_1a0649f275ab8a919df26b672f5c59562d" kindref="member">LONG_NAME3_LEN</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unicode<sp/>=<sp/>long_entry-&gt;name3[i];</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unicode<sp/>==<sp/>0x0000<sp/>||<sp/>unicode<sp/>==<sp/>0xffff)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name[long_entry_num<sp/>*<sp/><ref refid="fat32_8h_1ac790975f8ecfdee44f4e4d86c259fa6b" kindref="member">LONG_NAME_LEN</ref><sp/>+<sp/>count]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name[long_entry_num<sp/>*<sp/><ref refid="fat32_8h_1ac790975f8ecfdee44f4e4d86c259fa6b" kindref="member">LONG_NAME_LEN</ref><sp/>+<sp/>count]<sp/>=<sp/>unicode2char(unicode);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>entry<sp/>=<sp/>next_entry(long_entry,<sp/>buf,<sp/>&amp;clus_num,<sp/>&amp;sec_num);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>entry<sp/>=<sp/>next_entry(long_entry,<sp/>buf,<sp/>&amp;nfd-&gt;cur_clus_num,<sp/>&amp;nfd-&gt;cur_sec);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>now<sp/>read<sp/>whole<sp/>dir<sp/>at<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long_entry++;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;getdents:<sp/>%s,<sp/>pos:<sp/>%d,<sp/>cur_clus:<sp/>%d,<sp/>cur_sec:<sp/>%d\n&quot;,nfd-&gt;name,<sp/>nfd-&gt;pos,<sp/>nfd-&gt;cur_clus_num,<sp/>nfd-&gt;cur_sec);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>long_entry<sp/>=<sp/>(long_name_entry_t<sp/>*)entry;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fs_8c_1aefa764ed800e79576511e4fc1b39c4ce" kindref="member">sdentry2name</ref>(<ref refid="uniondentry" kindref="compound">dentry_t</ref><sp/>*entry,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="fat32_8h_1a75db02ccc1974b51db069507421816f8" kindref="member">SHORT_FIR_NAME</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entry-&gt;<ref refid="uniondentry_1a2e0a48bc674187147905b55e289be834" kindref="member">sn</ref>.name1[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name[count++]<sp/>=<sp/>entry-&gt;<ref refid="uniondentry_1a2e0a48bc674187147905b55e289be834" kindref="member">sn</ref>.name1[i];</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entry-&gt;<ref refid="uniondentry_1a2e0a48bc674187147905b55e289be834" kindref="member">sn</ref>.name2[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name[count]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>name[count++]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="fat32_8h_1a561925648134af559971d6567ae0a2fd" kindref="member">SHORT_EXT_NAME</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entry-&gt;<ref refid="uniondentry_1a2e0a48bc674187147905b55e289be834" kindref="member">sn</ref>.name2[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name[count++]<sp/>=<sp/>entry-&gt;<ref refid="uniondentry_1a2e0a48bc674187147905b55e289be834" kindref="member">sn</ref>.name2[i];</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>name[count]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fs_8c_1a16e005ccdf596477d61911a0e79f5f3b" kindref="member">dentry2name</ref>(<ref refid="uniondentry" kindref="compound">dentry_t</ref><sp/>*entry,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fs_8c_1a43e2ec2baca6d87ae8dc1a6fef2bc813" kindref="member">is_end_of_dir</ref>(entry))<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fs_8c_1afd26ad29ba3832e6cd9a367efdfa7745" kindref="member">is_empty_entry</ref>(entry))<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>entry<sp/>cnt,<sp/>name<sp/>len</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entry-&gt;<ref refid="uniondentry_1a2e0a48bc674187147905b55e289be834" kindref="member">sn</ref>.attr<sp/>==<sp/><ref refid="fat32_8h_1a8ebe014bd4f0c93090bd1c884c7285d5" kindref="member">ATTR_LONG_FILE_NAME</ref>)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cnt<sp/>+=<sp/><ref refid="fs_8c_1a2ec923e764c37b83412774b1d043d0c2" kindref="member">ldentry2name</ref>(entry,<sp/>name);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cnt<sp/>+=<sp/><ref refid="fs_8c_1aefa764ed800e79576511e4fc1b39c4ce" kindref="member">sdentry2name</ref>(entry,<sp/>name);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cnt;</highlight></codeline>
<codeline lineno="419"><highlight class="normal">}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="comment">//<sp/>return<sp/>sentry<sp/>offset<sp/>when<sp/>name<sp/>match,<sp/>otherwise<sp/>return<sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fs_8c_1a3d6f2b8b1f2c39a27d09bcf11d343187" kindref="member">fat32_name2offset</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/><ref refid="uniondentry" kindref="compound">dentry_t</ref><sp/>*entry)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dentry2name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>0,<sp/>res<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="fat32_8h_1a909106b46b3b3dccb78a5e3ad9750e9b" kindref="member">name1</ref>[<ref refid="fat32_8h_1afd709f201d7643c3909621f620ea648a" kindref="member">MAX_NAME_LEN</ref>];</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>means<sp/>end<sp/>of<sp/>dir</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/><ref refid="fs_8c_1a16e005ccdf596477d61911a0e79f5f3b" kindref="member">dentry2name</ref>(&amp;entry[offset],<sp/><ref refid="fat32_8h_1a909106b46b3b3dccb78a5e3ad9750e9b" kindref="member">name1</ref>);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!len)<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>found<sp/>in<sp/>dir</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>len;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/><ref refid="string_8h_1ad3fbffdca65397cb78cd0d3d38f7758f" kindref="member">k_strcmp</ref>(name,<sp/><ref refid="fat32_8h_1a909106b46b3b3dccb78a5e3ad9750e9b" kindref="member">name1</ref>);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res)<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>offset<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reuse<sp/>when<sp/>searching<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fs_8c_1a6172695741223828e9e947fae0065aaf" kindref="member">fat32_name2dir</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/><ref refid="structdir__info" kindref="compound">dir_info_t</ref><sp/>*now)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>each<sp/>sector,<sp/>search<sp/>entries(dentry2name),<sp/>assign<sp/>value<sp/>to<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="uniondentry" kindref="compound">dentry_t</ref><sp/>*dtable<sp/>=<sp/><ref refid="types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>dtable<sp/>=<sp/>(<ref refid="uniondentry" kindref="compound">dentry_t</ref><sp/>*)<ref refid="fs_8c_1a5736ddf8a694313c2de4d435f66aba9a" kindref="member">read_whole_dir</ref>(now-&gt;<ref refid="structdir__info_1abaebc1e16cce85b498775b3011dfba8c" kindref="member">first_cluster</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>=<sp/><ref refid="fs_8c_1a3d6f2b8b1f2c39a27d09bcf11d343187" kindref="member">fat32_name2offset</ref>(name,<sp/>dtable);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>&lt;<sp/>0<sp/>||<sp/>dtable[offset].sn.attr<sp/>!=<sp/><ref refid="fat32_8h_1afa13d3c1c60925f7b1e639233a799860" kindref="member">ATTR_DIRECTORY</ref>)<sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>dtable,<sp/>nodir<sp/>with<sp/>same<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>now-&gt;<ref refid="structdir__info_1abaebc1e16cce85b498775b3011dfba8c" kindref="member">first_cluster</ref><sp/>=<sp/>fat32_dentry2fcluster(&amp;dtable[offset]);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>now-&gt;<ref refid="structdir__info_1a01d3b3430c4ebe7468166e4b8daf9958" kindref="member">size</ref><sp/>=<sp/>dtable[offset].<ref refid="uniondentry_1a2e0a48bc674187147905b55e289be834" kindref="member">sn</ref>.file_size;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>path<sp/>after<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:free<sp/>dtable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fs_8c_1a34bc171d41b6c59e03fe21dc2a70416f" kindref="member">fat32_new_dentry</ref>(<ref refid="uniondentry" kindref="compound">dentry_t</ref><sp/>*entry,<sp/>uint32_t<sp/>flags,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;[debug]<sp/>openat<sp/>add<sp/>dentry!<sp/>len<sp/>=<sp/>%d,<sp/>name<sp/>%s\n&quot;,len,name);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>entry[len].<ref refid="uniondentry_1a2e0a48bc674187147905b55e289be834" kindref="member">sn</ref>.attr<sp/>=<sp/>(flags<sp/>&amp;<sp/><ref refid="file_8h_1a6afd3dd2f570069804b40e6aa24fc966" kindref="member">O_DIRECTORY</ref>)<sp/>?<sp/><ref refid="fat32_8h_1afa13d3c1c60925f7b1e639233a799860" kindref="member">ATTR_DIRECTORY</ref><sp/>:<sp/><ref refid="fat32_8h_1a154ecd3eb374bee87efec220f2d5106f" kindref="member">ATTR_READ_WRITE</ref>;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>entry[len].<ref refid="uniondentry_1a2e0a48bc674187147905b55e289be834" kindref="member">sn</ref>.name1[0]<sp/>=<sp/>name[0];</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>entry[len].<ref refid="uniondentry_1a2e0a48bc674187147905b55e289be834" kindref="member">sn</ref>.name1[1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>entry[len].<ref refid="uniondentry_1a2e0a48bc674187147905b55e289be834" kindref="member">sn</ref>.name2[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>entry[len].<ref refid="uniondentry_1a2e0a48bc674187147905b55e289be834" kindref="member">sn</ref>.file_size<sp/>=<sp/>(flags<sp/>&amp;<sp/><ref refid="file_8h_1a6afd3dd2f570069804b40e6aa24fc966" kindref="member">O_DIRECTORY</ref>)<sp/>?<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a5fc7659eb603d602a275dadaf686b849" kindref="member">bytes_per_cluster</ref><sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>fat32_fcluster2dentry(&amp;entry[len],<sp/>(flags<sp/>&amp;<sp/><ref refid="file_8h_1a6afd3dd2f570069804b40e6aa24fc966" kindref="member">O_DIRECTORY</ref>)<sp/>?<sp/><ref refid="fs_8c_1acdbc891e6ee9df840bb8ec93c380677e" kindref="member">alloc_cluster</ref>(0)<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len_0<sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>dentry<sp/>create/write<sp/>time?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>name<sp/>,all<sp/>dentry<sp/>in<sp/>LFN<sp/>without<sp/>./..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="fat32_8h_1a497ba0a9b3f71e6d1d16f35e59e0ee41" kindref="member">LONG_NAME1_LEN</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name[cnt]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry[i].<ref refid="uniondentry_1ad80b95b5fb6a045a49f69ddf519c9325" kindref="member">ln</ref>.name1[j]<sp/>=<sp/>0xffff;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry[i].<ref refid="uniondentry_1ad80b95b5fb6a045a49f69ddf519c9325" kindref="member">ln</ref>.name1[j]<sp/>=<sp/>char2unicode(name[cnt++]);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="fat32_8h_1aeed41609dfc0a8f9e8045482e6fde0c6" kindref="member">LONG_NAME2_LEN</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name[cnt]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry[i].<ref refid="uniondentry_1ad80b95b5fb6a045a49f69ddf519c9325" kindref="member">ln</ref>.name2[j]<sp/>=<sp/>0xffff;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry[i].<ref refid="uniondentry_1ad80b95b5fb6a045a49f69ddf519c9325" kindref="member">ln</ref>.name2[j]<sp/>=<sp/>char2unicode(name[cnt++]);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="fat32_8h_1a0649f275ab8a919df26b672f5c59562d" kindref="member">LONG_NAME3_LEN</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name[cnt]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry[i].<ref refid="uniondentry_1ad80b95b5fb6a045a49f69ddf519c9325" kindref="member">ln</ref>.name3[j]<sp/>=<sp/>0xffff;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry[i].<ref refid="uniondentry_1ad80b95b5fb6a045a49f69ddf519c9325" kindref="member">ln</ref>.name3[j]<sp/>=<sp/>char2unicode(name[cnt++]);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry[i].<ref refid="uniondentry_1ad80b95b5fb6a045a49f69ddf519c9325" kindref="member">ln</ref>.attr<sp/>=<sp/><ref refid="fat32_8h_1a8ebe014bd4f0c93090bd1c884c7285d5" kindref="member">ATTR_LONG_FILE_NAME</ref>;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry[i++].<ref refid="uniondentry_1ad80b95b5fb6a045a49f69ddf519c9325" kindref="member">ln</ref>.order<sp/>=<sp/>(uint8_t)len;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len--;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>entry-&gt;<ref refid="uniondentry_1ad80b95b5fb6a045a49f69ddf519c9325" kindref="member">ln</ref>.order<sp/>|=<sp/><ref refid="fat32_8h_1a96e90331356a0d3455a9c449f9bd424d" kindref="member">LAST_LONG_ENTRY</ref>;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/><ref refid="file_8h_1a6afd3dd2f570069804b40e6aa24fc966" kindref="member">O_DIRECTORY</ref>))<sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>:<sp/>set<sp/>./..<sp/>in<sp/>dir<sp/>entry,<sp/>not<sp/>finish</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="uniondentry" kindref="compound">dentry_t</ref><sp/>*dtable<sp/>=<sp/><ref refid="fs_8c_1a5736ddf8a694313c2de4d435f66aba9a" kindref="member">read_whole_dir</ref>(fat32_dentry2fcluster(&amp;entry[len_0]),<sp/>0);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="string_8h_1aaf442a6d4665859606fb0376506a349c" kindref="member">k_memset</ref>(dtable,<sp/>0,<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a5fc7659eb603d602a275dadaf686b849" kindref="member">bytes_per_cluster</ref>);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dtable[0].sn.name1[0]<sp/>=<sp/>&apos;.&apos;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dtable[0].sn.name1[1]<sp/>=<sp/>&apos;<sp/>&apos;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dtable[0].sn.name2[0]<sp/>=<sp/>&apos;<sp/>&apos;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dtable[0].sn.attr<sp/>=<sp/>ATTR_DIRECTORY;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dtable[1].sn.name1[0]<sp/>=<sp/>&apos;.&apos;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dtable[1].sn.name1[1]<sp/>=<sp/>&apos;.&apos;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dtable[1].sn.name1[2]<sp/>=<sp/>&apos;<sp/>&apos;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dtable[1].sn.name2[0]<sp/>=<sp/>&apos;<sp/>&apos;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dtable[1].sn.attr<sp/>=<sp/>ATTR_DIRECTORY;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fs_8c_1ab263423f94094a4fd4e8c28d79840755" kindref="member">write_whole_dir</ref>(fat32_dentry2fcluster(&amp;entry[len_0]),<sp/>dtable,<sp/>1);</highlight></codeline>
<codeline lineno="540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fs_8c_1a3908ce770240abc7be9af011f236918b" kindref="member">alloc_dentry</ref>(<ref refid="uniondentry" kindref="compound">dentry_t</ref><sp/>**dtable,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/><ref refid="file_8h_1af8f4385bb42836d1e3ad4fea9d71d1b9" kindref="member">mode_t</ref><sp/>flags,<sp/><ref refid="file_8h_1af8f4385bb42836d1e3ad4fea9d71d1b9" kindref="member">mode_t</ref><sp/>mode,<sp/><ref refid="structdir__info" kindref="compound">dir_info_t</ref><sp/>*now)<sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="uniondentry" kindref="compound">dentry_t</ref><sp/>*table<sp/>=<sp/><ref refid="types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>get<sp/>file<sp/>size<sp/>by<sp/>first,<sp/>there<sp/>is<sp/>a<sp/>better<sp/>way</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>size<sp/>=<sp/><ref refid="fs_8c_1af7c6fadfeef72fe01d7b305239373ee0" kindref="member">fat32_fcluster2size</ref>(now-&gt;<ref refid="structdir__info_1abaebc1e16cce85b498775b3011dfba8c" kindref="member">first_cluster</ref>)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="fat32_8h_1adea5e9d8af4a39aaf5ea29b82359b74c" kindref="member">dentry_t</ref>);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>(<ref refid="string_8h_1ae096c40164c6e072e600751bd7151fb9" kindref="member">k_strlen</ref>(name)<sp/>+<sp/><ref refid="fat32_8h_1ac790975f8ecfdee44f4e4d86c259fa6b" kindref="member">LONG_NAME_LEN</ref><sp/>-<sp/>1)<sp/>/<sp/><ref refid="fat32_8h_1ac790975f8ecfdee44f4e4d86c259fa6b" kindref="member">LONG_NAME_LEN</ref>;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>cnt,<sp/>i;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>table<sp/>=<sp/>*dtable;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>cnt<sp/>=<sp/>0,<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((uint8_t)table[i].<ref refid="uniondentry_1a2e0a48bc674187147905b55e289be834" kindref="member">sn</ref>.name1[0]<sp/>==<sp/>0xE5)<sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cnt++;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((uint8_t)table[i].<ref refid="uniondentry_1a2e0a48bc674187147905b55e289be834" kindref="member">sn</ref>.name1[0]<sp/>==<sp/>0x00)<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>len<sp/>-<sp/>cnt;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fs_8c_1a34bc171d41b6c59e03fe21dc2a70416f" kindref="member">fat32_new_dentry</ref>(&amp;table[i<sp/>-<sp/>len],<sp/>flags,<sp/>len,<sp/>name);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cnt<sp/>&gt;<sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fs_8c_1a34bc171d41b6c59e03fe21dc2a70416f" kindref="member">fat32_new_dentry</ref>(&amp;table[i<sp/>-<sp/>len],<sp/>flags,<sp/>len,<sp/>name);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;[debug]<sp/>openat<sp/>alloc<sp/>new<sp/>cluster!\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fs_8c_1acdbc891e6ee9df840bb8ec93c380677e" kindref="member">alloc_cluster</ref>(now-&gt;<ref refid="structdir__info_1abaebc1e16cce85b498775b3011dfba8c" kindref="member">first_cluster</ref>);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>now-&gt;<ref refid="structdir__info_1a01d3b3430c4ebe7468166e4b8daf9958" kindref="member">size</ref><sp/>+=<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a5fc7659eb603d602a275dadaf686b849" kindref="member">bytes_per_cluster</ref>;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reload<sp/>dir<sp/>table<sp/>and<sp/>go<sp/>to<sp/>the<sp/>head<sp/>of<sp/>this<sp/>function?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dtable<sp/>=<sp/><ref refid="fs_8c_1a5736ddf8a694313c2de4d435f66aba9a" kindref="member">read_whole_dir</ref>(now-&gt;<ref refid="structdir__info_1abaebc1e16cce85b498775b3011dfba8c" kindref="member">first_cluster</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>outside</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table<sp/>=<sp/>*dtable;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>dentry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fs_8c_1a34bc171d41b6c59e03fe21dc2a70416f" kindref="member">fat32_new_dentry</ref>(&amp;table[size],<sp/>flags,<sp/>len,<sp/>name);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>len<sp/>+<sp/>size;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fs_8c_1ab263423f94094a4fd4e8c28d79840755" kindref="member">write_whole_dir</ref>(now-&gt;<ref refid="structdir__info_1abaebc1e16cce85b498775b3011dfba8c" kindref="member">first_cluster</ref>,<sp/>*dtable,<sp/>1);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fs_8c_1ae5044d9b0bc2286bc5dc04fc14fdc164" kindref="member">destroy_dentry</ref>(<ref refid="uniondentry" kindref="compound">dentry_t</ref><sp/>*dtable,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset)<sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>offset<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(dtable[i].ln.attr<sp/>==<sp/><ref refid="fat32_8h_1a8ebe014bd4f0c93090bd1c884c7285d5" kindref="member">ATTR_LONG_FILE_NAME</ref>)<sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtable[i].<ref refid="uniondentry_1ad80b95b5fb6a045a49f69ddf519c9325" kindref="member">ln</ref>.order<sp/>=<sp/>0xE5;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="string_8h_1aaf442a6d4665859606fb0376506a349c" kindref="member">k_memset</ref>(dtable[i].ln.name1,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="uniondentry" kindref="compound">dentry_t</ref>)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i--;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="string_8h_1aaf442a6d4665859606fb0376506a349c" kindref="member">k_memset</ref>(dtable[offset].sn.name1,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="uniondentry" kindref="compound">dentry_t</ref>));</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>dtable[offset].<ref refid="uniondentry_1a2e0a48bc674187147905b55e289be834" kindref="member">sn</ref>.name1[0]<sp/>=<sp/>0xE5;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="610"><highlight class="normal">}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fs_8c_1afc3440e0d49f08a090794f81e6f6988d" kindref="member">fat32_path2dir</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/><ref refid="structdir__info" kindref="compound">dir_info_t</ref><sp/>*</highlight><highlight class="keyword">new</highlight><highlight class="normal">,<sp/><ref refid="structdir__info" kindref="compound">dir_info_t</ref><sp/>now)<sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>name[<ref refid="fat32_8h_1afd709f201d7643c3909621f620ea648a" kindref="member">MAX_NAME_LEN</ref>];</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>search<sp/>sequentially</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>=<sp/><ref refid="fs_8c_1a1e6fc6065db482dfd2da40621c76102c" kindref="member">path2name</ref>(path,<sp/>name);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>chdir<sp/>to<sp/>now<sp/>itserf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="string_8h_1ad3fbffdca65397cb78cd0d3d38f7758f" kindref="member">k_strcmp</ref>(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">,<sp/>name))<sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="fs_8c_1a6172695741223828e9e947fae0065aaf" kindref="member">fat32_name2dir</ref>(name,<sp/>&amp;now);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(path<sp/>!=<sp/><ref refid="types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>ret<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>found<sp/>return<sp/>NULL,<sp/>found<sp/>return<sp/>dir_info<sp/>to<sp/>update<sp/>cwd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ret)<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">-&gt;first_cluster<sp/>=<sp/>now.<ref refid="structdir__info_1abaebc1e16cce85b498775b3011dfba8c" kindref="member">first_cluster</ref>;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">-&gt;size<sp/>=<sp/>now.<ref refid="structdir__info_1a01d3b3430c4ebe7468166e4b8daf9958" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>generate<sp/>name<sp/>later<sp/>as<sp/>we<sp/>can&apos;t<sp/>get<sp/>path<sp/>from<sp/>root<sp/>or<sp/>cur</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_memcpy(new-&gt;name,path_0,kk_strlen(path)+1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal">}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fs_8c_1a79130d4d80dcfc1ec167de197ac7de78" kindref="member">fat32_dentry2fd</ref>(<ref refid="uniondentry" kindref="compound">dentry_t</ref><sp/>*entry,<sp/><ref refid="structfd" kindref="compound">fd_t</ref><sp/>*file,<sp/><ref refid="file_8h_1af8f4385bb42836d1e3ad4fea9d71d1b9" kindref="member">mode_t</ref><sp/>flags,<sp/><ref refid="file_8h_1af8f4385bb42836d1e3ad4fea9d71d1b9" kindref="member">mode_t</ref><sp/>mode,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)<sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entry-&gt;<ref refid="uniondentry_1a2e0a48bc674187147905b55e289be834" kindref="member">sn</ref>.attr<sp/>&amp;<sp/><ref refid="fat32_8h_1afa13d3c1c60925f7b1e639233a799860" kindref="member">ATTR_DIRECTORY</ref>)<sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file-&gt;<ref refid="structfd_1a18bc3b87f2dac145f951518a964fe306" kindref="member">file</ref><sp/>=<sp/><ref refid="fat32_8h_1afa13d3c1c60925f7b1e639233a799860" kindref="member">ATTR_DIRECTORY</ref>;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file-&gt;<ref refid="structfd_1a18bc3b87f2dac145f951518a964fe306" kindref="member">file</ref><sp/>=<sp/><ref refid="fat32_8h_1afa13d3c1c60925f7b1e639233a799860" kindref="member">ATTR_DIRECTORY</ref><sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="string_8h_1a4985196d8a63d22e320cf33d904d2f92" kindref="member">k_memcpy</ref>((uint8_t<sp/>*)file-&gt;<ref refid="structfd_1a8ae494856c95ccc9dc7fadc4423471f6" kindref="member">name</ref>,<sp/>(uint8_t<sp/>*)name,<sp/><ref refid="string_8h_1ae096c40164c6e072e600751bd7151fb9" kindref="member">k_strlen</ref>(name)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>file-&gt;<ref refid="structfd_1a8e675d589d95a1c6a7d99bd45164dbb9" kindref="member">dev</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>file-&gt;<ref refid="structfd_1a2cfdb78805b3a952d9eba494e1ae005c" kindref="member">flags</ref><sp/>=<sp/>flags<sp/>&amp;<sp/>~(<ref refid="file_8h_1a6afd3dd2f570069804b40e6aa24fc966" kindref="member">O_DIRECTORY</ref>);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>file-&gt;<ref refid="structfd_1a186b68a5c96f7e13f1148ee474ce7cbb" kindref="member">mode</ref><sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>file-&gt;<ref refid="structfd_1aa3d778b06e093523359f0e04dbeb8599" kindref="member">first_cluster</ref><sp/>=<sp/>fat32_dentry2fcluster(entry);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>file-&gt;<ref refid="structfd_1a60eabea029590e8f49eae78e5181450e" kindref="member">cur_clus_num</ref><sp/>=<sp/>file-&gt;<ref refid="structfd_1aa3d778b06e093523359f0e04dbeb8599" kindref="member">first_cluster</ref>;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>file-&gt;<ref refid="structfd_1ab8a702fe2f6bf2e32278fac665966e7b" kindref="member">pos</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>file-&gt;<ref refid="structfd_1a05ac683ed52f0851b0aece8f854b0805" kindref="member">size</ref><sp/>=<sp/>entry-&gt;<ref refid="uniondentry_1a2e0a48bc674187147905b55e289be834" kindref="member">sn</ref>.file_size;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="663"><highlight class="normal">}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fs_8c_1af264b947ceef01d5bfb234c2002a3666" kindref="member">fs_init</ref>()<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1a06d03ddc23233f125efb5d5daf6fcf79" kindref="member">k_print</ref>(</highlight><highlight class="stringliteral">&quot;&gt;<sp/>[FAT32<sp/>init]<sp/>begin!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fd_8c_1a6cb1ecabc3abc6e1cdfac5f1ea59dbcc" kindref="member">fd_table_init</ref>();</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>BOOT_SEC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*boot<sp/>=<sp/><ref refid="mm_8h_1a00b0aa73fb7186a4c940dd83496dd199" kindref="member">k_mm_malloc</ref>(<ref refid="mm_8h_1a7d467c1d283fdfa1f2081ba1e0d01b6e" kindref="member">PAGE_SIZE</ref>);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>boot_sec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="virtio_8h_1a33511cb0c7b8c8a3a4c9e9a337dc567a" kindref="member">d_sd_read</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)boot,<sp/>&amp;boot_sec,<sp/>1);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="virtio_8h_1a3ba8dbd5d9de7f8bb698576b733f17c2" kindref="member">d_sd_write</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)boot,<sp/>&amp;boot_sec,<sp/>1);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:check<sp/>fat32?<sp/>should<sp/>not<sp/>be<sp/>check<sp/>device<sp/>name?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>little<sp/>endian<sp/>not<sp/>need<sp/>do<sp/>add?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1ac6ee0f9ae1d10f22427bbc7595d10c91" kindref="member">bytes_per_sec</ref><sp/>=<sp/>*(uint16_t<sp/>*)(boot<sp/>+<sp/><ref refid="fat32_8h_1a1ecb533ef27737750a95f2cdb9a0f43b" kindref="member">BPB_BYTES_PER_SEC</ref>);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1a91fb9d11ed7a79a2547dcdca7204b6ac" kindref="member">sec_per_cluster</ref><sp/>=<sp/>*(boot<sp/>+<sp/><ref refid="fat32_8h_1a4d33cc730b9a26d5b31a223a239d3a8d" kindref="member">BPB_SEC_PER_CLUSTER</ref>);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1ab7d658e44fbbcf59d0a9b04b67cf407a" kindref="member">rsvd_sec_cnt</ref><sp/>=<sp/>*(uint16_t<sp/>*)(boot<sp/>+<sp/><ref refid="fat32_8h_1aceaeaa4ad72f292ff407f6789a3d49b1" kindref="member">BPB_RSVD_SEC_CNT</ref>);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1a921f1311f3e7f7b167fcbcbe378b945b" kindref="member">fat_num</ref><sp/>=<sp/>*(boot<sp/>+<sp/><ref refid="fat32_8h_1a55ce87cd9e26f21c76ba06e7b514993d" kindref="member">BPB_FAT_NUM</ref>);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1a253922b4d29a6f3d7df54b1c0055271f" kindref="member">hidd_sec</ref><sp/>=<sp/>*(uint32_t<sp/>*)(boot<sp/>+<sp/><ref refid="fat32_8h_1adcc1172b9cd884e5b5e349740928a6e1" kindref="member">BPB_HIDD_SEC</ref>);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1aee381a8a01b4792cda133fe688b22faf" kindref="member">totl_sec</ref><sp/>=<sp/>*(uint32_t<sp/>*)(boot<sp/>+<sp/><ref refid="fat32_8h_1ab278ee63f0bda2e75f566e689265c656" kindref="member">BPB_TOTL_SEC</ref>);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1a45e47a9225e413c14d15737c392d4d6d" kindref="member">sec_per_fat</ref><sp/>=<sp/>*(uint32_t<sp/>*)(boot<sp/>+<sp/><ref refid="fat32_8h_1a394f5e2cf6b7cdebfbc56ab5f9490986" kindref="member">BPB_SEC_PER_FAT</ref>);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1a0c3185d3dd1309f5a4751b4b8a58f4d9" kindref="member">root_cluster</ref><sp/>=<sp/>*(uint32_t<sp/>*)(boot<sp/>+<sp/><ref refid="fat32_8h_1ae2da53692da5a321d90d429d8713912b" kindref="member">BPB_ROOT_CLUSTER</ref>);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a5fc7659eb603d602a275dadaf686b849" kindref="member">bytes_per_cluster</ref><sp/>=<sp/>(uint32_t)<ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1ac6ee0f9ae1d10f22427bbc7595d10c91" kindref="member">bytes_per_sec</ref><sp/>*<sp/>(uint32_t)<ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1a91fb9d11ed7a79a2547dcdca7204b6ac" kindref="member">sec_per_cluster</ref>;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a5d895f7663cfbeeb117a02cc4691c4aa" kindref="member">first_data_sec</ref><sp/>=<sp/>(uint32_t)<ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1a253922b4d29a6f3d7df54b1c0055271f" kindref="member">hidd_sec</ref><sp/>+<sp/>(uint32_t)<ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1ab7d658e44fbbcf59d0a9b04b67cf407a" kindref="member">rsvd_sec_cnt</ref><sp/>+<sp/>(uint32_t)<ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1a921f1311f3e7f7b167fcbcbe378b945b" kindref="member">fat_num</ref><sp/>*<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1a45e47a9225e413c14d15737c392d4d6d" kindref="member">sec_per_fat</ref>;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a0178cabae422e7fc8c732e6732bfdd2a" kindref="member">data_sec_cnt</ref><sp/>=<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1aee381a8a01b4792cda133fe688b22faf" kindref="member">totl_sec</ref><sp/>-<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a5d895f7663cfbeeb117a02cc4691c4aa" kindref="member">first_data_sec</ref>;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1acb75a52b1f365390f28e7a07b0a36844" kindref="member">data_cluster_cnt</ref><sp/>=<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a0178cabae422e7fc8c732e6732bfdd2a" kindref="member">data_sec_cnt</ref><sp/>/<sp/>(uint32_t)<ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1a91fb9d11ed7a79a2547dcdca7204b6ac" kindref="member">sec_per_cluster</ref>;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1abf4c3a05a4408284a41c05651b441e9b" kindref="member">next_free_fat_sec</ref><sp/>=<sp/>(uint32_t)<ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1a253922b4d29a6f3d7df54b1c0055271f" kindref="member">hidd_sec</ref><sp/>+<sp/>(uint32_t)<ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1ab7d658e44fbbcf59d0a9b04b67cf407a" kindref="member">rsvd_sec_cnt</ref>;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a5620c49b36cce0cd5f5b78694b40da76" kindref="member">entry_per_sec</ref><sp/>=<sp/>(uint32_t)<ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1ac6ee0f9ae1d10f22427bbc7595d10c91" kindref="member">bytes_per_sec</ref><sp/>&gt;&gt;<sp/>2;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>root<sp/>dir<sp/>use<sp/>one<sp/>cluster?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1ac39eecb53bcba471597a8a80c34fc5b6" kindref="member">free_clusters</ref><sp/>=<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1acb75a52b1f365390f28e7a07b0a36844" kindref="member">data_cluster_cnt</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a0e9da26e844b565694e339bdc607b439" kindref="member">next_free_cluster</ref><sp/>=<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1a0c3185d3dd1309f5a4751b4b8a58f4d9" kindref="member">root_cluster</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1a06d03ddc23233f125efb5d5daf6fcf79" kindref="member">k_print</ref>(</highlight><highlight class="stringliteral">&quot;&gt;<sp/>[FAT32<sp/>init]<sp/>byts_per_sec:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1ac6ee0f9ae1d10f22427bbc7595d10c91" kindref="member">bytes_per_sec</ref>);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1a06d03ddc23233f125efb5d5daf6fcf79" kindref="member">k_print</ref>(</highlight><highlight class="stringliteral">&quot;&gt;<sp/>[FAT32<sp/>init]<sp/>root_clus:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1a0c3185d3dd1309f5a4751b4b8a58f4d9" kindref="member">root_cluster</ref>);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1a06d03ddc23233f125efb5d5daf6fcf79" kindref="member">k_print</ref>(</highlight><highlight class="stringliteral">&quot;&gt;<sp/>[FAT32<sp/>init]<sp/>sec_per_clus:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1a91fb9d11ed7a79a2547dcdca7204b6ac" kindref="member">sec_per_cluster</ref>);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1a06d03ddc23233f125efb5d5daf6fcf79" kindref="member">k_print</ref>(</highlight><highlight class="stringliteral">&quot;&gt;<sp/>[FAT32<sp/>init]<sp/>fat_cnt:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1a921f1311f3e7f7b167fcbcbe378b945b" kindref="member">fat_num</ref>);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1a06d03ddc23233f125efb5d5daf6fcf79" kindref="member">k_print</ref>(</highlight><highlight class="stringliteral">&quot;&gt;<sp/>[FAT32<sp/>init]<sp/>fat_sz:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1a45e47a9225e413c14d15737c392d4d6d" kindref="member">sec_per_fat</ref>);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1a06d03ddc23233f125efb5d5daf6fcf79" kindref="member">k_print</ref>(</highlight><highlight class="stringliteral">&quot;&gt;<sp/>[FAT32<sp/>init]<sp/>fat_rsvd:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1ab7d658e44fbbcf59d0a9b04b67cf407a" kindref="member">rsvd_sec_cnt</ref>);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1a06d03ddc23233f125efb5d5daf6fcf79" kindref="member">k_print</ref>(</highlight><highlight class="stringliteral">&quot;&gt;<sp/>[FAT32<sp/>init]<sp/>fat_hid:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1a253922b4d29a6f3d7df54b1c0055271f" kindref="member">hidd_sec</ref>);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1a06d03ddc23233f125efb5d5daf6fcf79" kindref="member">k_print</ref>(</highlight><highlight class="stringliteral">&quot;&gt;<sp/>[FAT32<sp/>init]<sp/>fat_totl:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1aee381a8a01b4792cda133fe688b22faf" kindref="member">totl_sec</ref>);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1a06d03ddc23233f125efb5d5daf6fcf79" kindref="member">k_print</ref>(</highlight><highlight class="stringliteral">&quot;&gt;<sp/>[FAT32<sp/>init]<sp/>fat_byts_per_clus:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a5fc7659eb603d602a275dadaf686b849" kindref="member">bytes_per_cluster</ref>);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1a06d03ddc23233f125efb5d5daf6fcf79" kindref="member">k_print</ref>(</highlight><highlight class="stringliteral">&quot;&gt;<sp/>[FAT32<sp/>init]<sp/>fat_first_data_sec:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a5d895f7663cfbeeb117a02cc4691c4aa" kindref="member">first_data_sec</ref>);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1a06d03ddc23233f125efb5d5daf6fcf79" kindref="member">k_print</ref>(</highlight><highlight class="stringliteral">&quot;&gt;<sp/>[FAT32<sp/>init]<sp/>fat_data_cluster_cnt:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1acb75a52b1f365390f28e7a07b0a36844" kindref="member">data_cluster_cnt</ref>);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1a06d03ddc23233f125efb5d5daf6fcf79" kindref="member">k_print</ref>(</highlight><highlight class="stringliteral">&quot;&gt;<sp/>[FAT32<sp/>init]<sp/>fat.next_free_cluster:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a0e9da26e844b565694e339bdc607b439" kindref="member">next_free_cluster</ref>);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>root<sp/>dir<sp/>and<sp/>cwd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fs_8c_1ab49ea0634e50fbcf6723c042807d010d" kindref="member">root_dir</ref>.<ref refid="structdir__info_1abaebc1e16cce85b498775b3011dfba8c" kindref="member">first_cluster</ref><sp/>=<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1a0c3185d3dd1309f5a4751b4b8a58f4d9" kindref="member">root_cluster</ref>;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fs_8c_1ab49ea0634e50fbcf6723c042807d010d" kindref="member">root_dir</ref>.<ref refid="structdir__info_1a01d3b3430c4ebe7468166e4b8daf9958" kindref="member">size</ref><sp/>=<sp/><ref refid="fs_8c_1af7c6fadfeef72fe01d7b305239373ee0" kindref="member">fat32_fcluster2size</ref>(<ref refid="fs_8c_1ab49ea0634e50fbcf6723c042807d010d" kindref="member">root_dir</ref>.<ref refid="structdir__info_1abaebc1e16cce85b498775b3011dfba8c" kindref="member">first_cluster</ref>);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fs_8c_1ab49ea0634e50fbcf6723c042807d010d" kindref="member">root_dir</ref>.<ref refid="structdir__info_1a1d08207729ecb85a7e1562dc7432b598" kindref="member">name</ref>[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fs_8c_1ab49ea0634e50fbcf6723c042807d010d" kindref="member">root_dir</ref>.<ref refid="structdir__info_1a1d08207729ecb85a7e1562dc7432b598" kindref="member">name</ref>[1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1a06d03ddc23233f125efb5d5daf6fcf79" kindref="member">k_print</ref>(</highlight><highlight class="stringliteral">&quot;root<sp/>dir<sp/>begin<sp/>at<sp/>cluster<sp/>%d,<sp/>size<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="fs_8c_1ab49ea0634e50fbcf6723c042807d010d" kindref="member">root_dir</ref>.<ref refid="structdir__info_1abaebc1e16cce85b498775b3011dfba8c" kindref="member">first_cluster</ref>);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fs_8c_1a7ed1f339a9c42b1a180ffbf41bb91d10" kindref="member">cur_dir</ref>.<ref refid="structdir__info_1abaebc1e16cce85b498775b3011dfba8c" kindref="member">first_cluster</ref><sp/>=<sp/><ref refid="fs_8c_1ab49ea0634e50fbcf6723c042807d010d" kindref="member">root_dir</ref>.<ref refid="structdir__info_1abaebc1e16cce85b498775b3011dfba8c" kindref="member">first_cluster</ref>;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fs_8c_1a7ed1f339a9c42b1a180ffbf41bb91d10" kindref="member">cur_dir</ref>.<ref refid="structdir__info_1a01d3b3430c4ebe7468166e4b8daf9958" kindref="member">size</ref><sp/>=<sp/><ref refid="fs_8c_1ab49ea0634e50fbcf6723c042807d010d" kindref="member">root_dir</ref>.<ref refid="structdir__info_1a01d3b3430c4ebe7468166e4b8daf9958" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fs_8c_1a7ed1f339a9c42b1a180ffbf41bb91d10" kindref="member">cur_dir</ref>.<ref refid="structdir__info_1a1d08207729ecb85a7e1562dc7432b598" kindref="member">name</ref>[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fs_8c_1a7ed1f339a9c42b1a180ffbf41bb91d10" kindref="member">cur_dir</ref>.<ref refid="structdir__info_1a1d08207729ecb85a7e1562dc7432b598" kindref="member">name</ref>[1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>kfree(boot);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="uniondentry" kindref="compound">dentry_t</ref><sp/>*dtable<sp/>=<sp/><ref refid="fs_8c_1a5736ddf8a694313c2de4d435f66aba9a" kindref="member">read_whole_dir</ref>(<ref refid="fs_8c_1ab49ea0634e50fbcf6723c042807d010d" kindref="member">root_dir</ref>.<ref refid="structdir__info_1abaebc1e16cce85b498775b3011dfba8c" kindref="member">first_cluster</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>name[<ref refid="fat32_8h_1afd709f201d7643c3909621f620ea648a" kindref="member">MAX_NAME_LEN</ref>];</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/><ref refid="fs_8c_1a16e005ccdf596477d61911a0e79f5f3b" kindref="member">dentry2name</ref>(&amp;dtable[offset],<sp/>name);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>=<sp/><ref refid="fs_8c_1a16e005ccdf596477d61911a0e79f5f3b" kindref="member">dentry2name</ref>(&amp;dtable[offset],<sp/>name);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//[read]<sp/>ok</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>read_fd<sp/>=<sp/>sys_openat(AT_FDCWD,&quot;./text.txt&quot;,O_RDONLY,0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fd_t<sp/>*file_txt<sp/>=<sp/>get_fd(read_fd);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(file_txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>k_print(&quot;[test]<sp/>1.<sp/>read<sp/>openat<sp/>success!<sp/>name<sp/>%s\n&quot;,file_txt-&gt;name);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>read_len<sp/>=<sp/>sys_read(read_fd,name,256);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>k_print(&quot;[test]<sp/>2.<sp/>read<sp/>%d<sp/>bytes<sp/>:<sp/>%s\n&quot;,read_len,name);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sys_write(STDOUT,name,read_len);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fd_free(read_fd);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//[chdir]<sp/>ok(cwd<sp/>is<sp/>path<sp/>or<sp/>name?)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sys_mkdirat(AT_FDCWD,&quot;test_chdir&quot;,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sys_chdir(&quot;test_chdir&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sys_getcwd(name,MAX_NAME_LEN);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;[test]<sp/>getcwd<sp/>%s&quot;,name);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>[dup]<sp/>ok</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>dup_fd<sp/>=<sp/>sys_dup(STDOUT);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;[test]<sp/>dup<sp/>fd<sp/>%d\n&quot;,dup_fd);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>[dup]<sp/>ok</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sys_dup3(STDOUT,100,0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>const<sp/>char<sp/>*str<sp/>=<sp/>&quot;<sp/><sp/>from<sp/>fd<sp/>100\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sys_write(100,<sp/>str,<sp/>k_strlen(str));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>[fstats]<sp/>ok</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>sys_fd<sp/>=<sp/>sys_openat(AT_FDCWD,&quot;./text.txt&quot;,O_RDONLY,0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>kstat_t<sp/>kst;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sys_fstat(sys_fd,<sp/>&amp;kst);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;fstat:<sp/>dev:<sp/>%d,<sp/>inode:<sp/>%d,<sp/>mode:<sp/>%d,<sp/>nlink:<sp/>%d,<sp/>size:<sp/>%d,<sp/>atime:<sp/>%d,<sp/>mtime:<sp/>%d,<sp/>ctime:<sp/>%d\n&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>kst.st_dev,<sp/>kst.st_ino,<sp/>kst.st_mode,<sp/>kst.st_nlink,<sp/>kst.st_size,<sp/>kst.st_atime_sec,<sp/>kst.st_mtime_sec,<sp/>kst.st_ctime_sec);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>[getcwd]<sp/>ok</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>[get<sp/>dentry]<sp/>ok</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dirent64_t<sp/>*test_getdentry<sp/>=<sp/>k_mm_malloc(512);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>fd<sp/>=<sp/>sys_openat(AT_FDCWD,&quot;.&quot;,O_RDONLY,0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>cnt<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>while(sys_getdents64(fd,test_getdentry,512)){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>k_print(&quot;[test]<sp/>get<sp/>%d<sp/>dentry<sp/>name<sp/>%s,<sp/>attr<sp/>%d\n&quot;,<sp/>cnt++,<sp/>test_getdentry-&gt;d_name,<sp/>test_getdentry-&gt;d_type<sp/>&amp;<sp/>ATTR_DIRECTORY);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>[mkdir<sp/>at]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>mkdir_ret<sp/>=<sp/>sys_mkdirat(AT_FDCWD,&quot;test_mkdir&quot;,0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>mkdir_fd<sp/>=<sp/>sys_openat(AT_FDCWD,&quot;test_mkdir&quot;,<sp/>O_RDONLY<sp/>|<sp/>O_DIRECTORY,0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;mkdir<sp/>ret:<sp/>%d<sp/>openat<sp/>fd<sp/>%d\n&quot;,<sp/>mkdir_ret,mkdir_fd);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>[mount]<sp/>ok</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>char<sp/>mntpoint[64]<sp/>=<sp/>&quot;./mnt&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>char<sp/>device[64]<sp/>=<sp/>&quot;/dev/vda2&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>const<sp/>char<sp/>*fs_type<sp/>=<sp/>&quot;vfat&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;Mounting<sp/>dev:%s<sp/>to<sp/>%s\n&quot;,<sp/>device,<sp/>mntpoint);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>ret<sp/>=<sp/>sys_mount(device,<sp/>mntpoint,<sp/>fs_type,<sp/>0,<sp/>NULL);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;mount<sp/>return:<sp/>%d\n&quot;,<sp/>ret);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(ret<sp/>==<sp/>0)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>k_print(&quot;mount<sp/>successfully\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>ret<sp/>=<sp/>sys_umount2(mntpoint,0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>k_print(&quot;umount<sp/>return:<sp/>%d\n&quot;,<sp/>ret);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>[unlink]<sp/>ok</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>char<sp/>*fname<sp/>=<sp/>&quot;./test_unlink&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>unlink_fd,<sp/>unlink_ret;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unlink_fd<sp/>=<sp/>sys_openat(AT_FDCWD,fname,<sp/>O_CREATE<sp/>|<sp/>O_WRONLY,0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sys_close(unlink_fd);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unlink_ret<sp/>=<sp/>sys_unlinkat(AT_FDCWD,fname,0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unlink_fd<sp/>=<sp/>sys_openat(AT_FDCWD,fname,<sp/>O_RDONLY,0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(unlink_fd<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>unlink_ret<sp/>==<sp/>0){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>k_print(&quot;<sp/><sp/>unlink<sp/>success!\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}else{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>k_print(&quot;<sp/><sp/>unlink<sp/>error!\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>sys_close(unlink_fd);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>[write]<sp/>ok</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>const<sp/>char<sp/>*wstr<sp/>=<sp/>&quot;Hello<sp/>operating<sp/>system<sp/>contest.\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>str_len<sp/>=<sp/>k_strlen(wstr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(str_len<sp/>==<sp/>sys_write(STDOUT,<sp/>wstr,<sp/>str_len)){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>k_print(&quot;[test]<sp/>write<sp/>success!\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}else{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>k_print(&quot;[test]<sp/>write<sp/>fail?<sp/>strlen<sp/>=<sp/>%d,<sp/>write<sp/>len<sp/>=<sp/>%d&quot;,str_len,sys_write(STDOUT,<sp/>wstr,<sp/>str_len));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[pipe]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uint8_t*<sp/>disk_data;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uint8_t*<sp/>elf_data;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>disk_len;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>elf_len;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>ret<sp/>=<sp/>fs_load_file(&quot;test_virtio.elf&quot;,&amp;disk_data,&amp;disk_len);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(!ret)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>get_elf_file(&quot;virtio&quot;,&amp;elf_data,&amp;elf_len);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(disk_len==elf_len<sp/>&amp;&amp;<sp/>ret<sp/>!=0){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>k_print(&quot;[debug]<sp/>get<sp/>same<sp/>shell.elf<sp/>length<sp/>%d!\n&quot;,disk_len);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>int<sp/>len<sp/>=<sp/>disk_len;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>while(len--<sp/>&gt;<sp/>0){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(elf_data[len]!=disk_data[len]){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k_print(&quot;[debug]<sp/>file<sp/>not<sp/>same<sp/>at<sp/>offset<sp/>%d,<sp/>elf<sp/>%u,<sp/>disk<sp/>%u\n&quot;,len,elf_data[len],disk_data[len]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>k_print(&quot;[debug]<sp/>cmp<sp/>finish!\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}else{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>k_print(&quot;[debug]<sp/>get<sp/>diff<sp/>shell.elf<sp/>length!<sp/>elf<sp/>len<sp/>%d,<sp/>disk<sp/>len<sp/>%d\n&quot;,elf_len,disk_len);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>kfree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="840"><highlight class="normal">}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="fs_8c_1a8febdf58a0f5691f83349e95eae8d074" kindref="member">sys_getcwd</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structbuf" kindref="compound">buf</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="string_8h_1a4985196d8a63d22e320cf33d904d2f92" kindref="member">k_memcpy</ref>((uint8_t<sp/>*)<ref refid="structbuf" kindref="compound">buf</ref>,<sp/>(uint8_t<sp/>*)<ref refid="fs_8c_1a7ed1f339a9c42b1a180ffbf41bb91d10" kindref="member">cur_dir</ref>.<ref refid="structdir__info_1a1d08207729ecb85a7e1562dc7432b598" kindref="member">name</ref>,<sp/><ref refid="fat32_8h_1abb702d8b501669a23aa0ab3b281b9384" kindref="member">min</ref>(<ref refid="string_8h_1ae096c40164c6e072e600751bd7151fb9" kindref="member">k_strlen</ref>(<ref refid="fs_8c_1a7ed1f339a9c42b1a180ffbf41bb91d10" kindref="member">cur_dir</ref>.<ref refid="structdir__info_1a1d08207729ecb85a7e1562dc7432b598" kindref="member">name</ref>)<sp/>+<sp/>1,<sp/>size));</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<ref refid="virtio__blk_8c_1a2841fd18a733a1bc41ab17873c8aab74" kindref="member">buf</ref>;</highlight></codeline>
<codeline lineno="850"><highlight class="normal">}</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fs_8c_1a239a2e4b8412446aac813a9439350059" kindref="member">sys_pipe2</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="structfd" kindref="compound">fd</ref>,<sp/><ref refid="file_8h_1af8f4385bb42836d1e3ad4fea9d71d1b9" kindref="member">mode_t</ref><sp/>flags)<sp/>{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1.<sp/>alloc<sp/>one<sp/>pipe?<sp/>what&apos;s<sp/>pipe?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2.<sp/>alloc<sp/>2<sp/>fd<sp/>for<sp/>pipe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fd_8c_1a547b443fd97255c9aee93ea57d113518" kindref="member">pipe_alloc</ref>(<ref refid="structfd" kindref="compound">fd</ref>)<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mailbox<sp/>=<sp/><ref refid="sync_8h_1a515d4acfe510559477bb110678bfffbc" kindref="member">k_mbox_open</ref>(<ref refid="structfd" kindref="compound">fd</ref>[0],<sp/><ref refid="structfd" kindref="compound">fd</ref>[1]);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>init</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfd" kindref="compound">fd_t</ref><sp/>*file<sp/>=<sp/><ref refid="fd_8c_1a15dcc53ce1c457472fc819d1ab3cf5e1" kindref="member">get_fd</ref>(<ref refid="structfd" kindref="compound">fd</ref>[0]);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;[pipe]<sp/>get<sp/>pipe<sp/>read<sp/>id<sp/>%u,<sp/>fd<sp/>%d\n&quot;,<sp/>file-&gt;pip_num,<sp/>fd[0]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>file-&gt;<ref refid="structfd_1a18bc3b87f2dac145f951518a964fe306" kindref="member">file</ref><sp/>=<sp/><ref refid="fat32_8h_1afa13d3c1c60925f7b1e639233a799860" kindref="member">ATTR_DIRECTORY</ref><sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>file-&gt;<ref refid="structfd_1ab8a702fe2f6bf2e32278fac665966e7b" kindref="member">pos</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>file-&gt;<ref refid="structfd_1a2cfdb78805b3a952d9eba494e1ae005c" kindref="member">flags</ref><sp/>=<sp/><ref refid="file_8h_1a7a68c9ffaac7dbcd652225dd7c06a54b" kindref="member">O_RDONLY</ref>;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>file-&gt;<ref refid="structfd_1a38cc2e5878e108cdd70327a1cf2e2133" kindref="member">mailbox</ref><sp/>=<sp/>mailbox;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>=<sp/><ref refid="fd_8c_1a15dcc53ce1c457472fc819d1ab3cf5e1" kindref="member">get_fd</ref>(<ref refid="structfd" kindref="compound">fd</ref>[1]);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;[pipe]<sp/>get<sp/>pipe<sp/>write<sp/>id<sp/>%u,<sp/>fd<sp/>%d\n&quot;,<sp/>file-&gt;pip_num,<sp/>fd[1]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>file-&gt;<ref refid="structfd_1a18bc3b87f2dac145f951518a964fe306" kindref="member">file</ref><sp/>=<sp/><ref refid="fat32_8h_1afa13d3c1c60925f7b1e639233a799860" kindref="member">ATTR_DIRECTORY</ref><sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>file-&gt;<ref refid="structfd_1ab8a702fe2f6bf2e32278fac665966e7b" kindref="member">pos</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>file-&gt;<ref refid="structfd_1a2cfdb78805b3a952d9eba494e1ae005c" kindref="member">flags</ref><sp/>=<sp/><ref refid="file_8h_1a11b644a8526139c4cc1850dac1271ced" kindref="member">O_WRONLY</ref>;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>file-&gt;<ref refid="structfd_1a38cc2e5878e108cdd70327a1cf2e2133" kindref="member">mailbox</ref><sp/>=<sp/>mailbox;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpipe" kindref="compound">pipe_t</ref><sp/>*p<sp/>=<sp/>&amp;<ref refid="fd_8c_1a8025a26fe82fa76119549722ae508993" kindref="member">pipe_table</ref>[file-&gt;<ref refid="structfd_1a83737c9fc04a24cc7a3c0f7331928d40" kindref="member">pip_num</ref>];</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structpipe_1afcf26d833296bf47f8d2210591eb6a9f" kindref="member">r_valid</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structpipe_1a729795bc415b421b99ef7dc4d4286d13" kindref="member">w_valid</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structpipe_1a5ee26c9cdf246d2e2fbf6fccf0282da4" kindref="member">mailbox</ref><sp/>=<sp/>mailbox;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="886"><highlight class="normal">}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fs_8c_1a3c4b72a274d8b87700a689b13b232c5b" kindref="member">sys_dup</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>old)<sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfd" kindref="compound">fd_t</ref><sp/>*file1<sp/>=<sp/><ref refid="fd_8c_1a15dcc53ce1c457472fc819d1ab3cf5e1" kindref="member">get_fd</ref>(old);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file1)<sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>=<sp/><ref refid="fd_8c_1a0d55425e16feb3bea1363d51fdf3a094" kindref="member">fd_alloc</ref>();</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfd" kindref="compound">fd_t</ref><sp/>*file2<sp/>=<sp/><ref refid="fd_8c_1a15dcc53ce1c457472fc819d1ab3cf5e1" kindref="member">get_fd</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file2)<sp/>{</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="string_8h_1a4985196d8a63d22e320cf33d904d2f92" kindref="member">k_memcpy</ref>((uint8_t<sp/>*)file2,<sp/>(uint8_t<sp/>*)file1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structfd" kindref="compound">fd_t</ref>));</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>fail<sp/>return<sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal">}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fs_8c_1a52646d65d2bce20361d7ba0784868e04" kindref="member">sys_dup3</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>old,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">,<sp/><ref refid="file_8h_1af8f4385bb42836d1e3ad4fea9d71d1b9" kindref="member">mode_t</ref><sp/>flags)<sp/>{</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfd" kindref="compound">fd_t</ref><sp/>*file1<sp/>=<sp/><ref refid="fd_8c_1a15dcc53ce1c457472fc819d1ab3cf5e1" kindref="member">get_fd</ref>(old);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file1)<sp/>{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfd" kindref="compound">fd_t</ref><sp/>*file2<sp/>=<sp/><ref refid="fd_8c_1a8f91d1842f703d4598574b0bcb74e8cc" kindref="member">fd_alloc_spec</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file2)<sp/>{</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="string_8h_1a4985196d8a63d22e320cf33d904d2f92" kindref="member">k_memcpy</ref>((uint8_t<sp/>*)file2,<sp/>(uint8_t<sp/>*)file1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structfd" kindref="compound">fd_t</ref>));</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>fail<sp/>return<sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal">}</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fs_8c_1a9b352b5b74a2cd9b6aab5aef21f11872" kindref="member">sys_mkdirat</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dirfd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path_0,<sp/><ref refid="file_8h_1af8f4385bb42836d1e3ad4fea9d71d1b9" kindref="member">mode_t</ref><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>dir<sp/>file<sp/>belonged<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdir__info" kindref="compound">dir_info_t</ref><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>path[<ref refid="fat32_8h_1abdd33f362ae3bbdacb5de76473aa8a2f" kindref="member">MAX_PATH_LEN</ref>],<sp/>name[<ref refid="fat32_8h_1afd709f201d7643c3909621f620ea648a" kindref="member">MAX_NAME_LEN</ref>];</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fs_8c_1a43712190cb180f82c70726244079751c" kindref="member">filename2path</ref>(path,<sp/>name,<sp/>path_0);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;[debug]<sp/>mkdir<sp/>%s,<sp/>at<sp/>%s\n&quot;,<sp/>name,<sp/>path);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="fs_8c_1afc3440e0d49f08a090794f81e6f6988d" kindref="member">fat32_path2dir</ref>(path,<sp/>&amp;</highlight><highlight class="keyword">new</highlight><highlight class="normal">,<sp/><ref refid="fs_8c_1ab49ea0634e50fbcf6723c042807d010d" kindref="member">root_dir</ref>);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dirfd<sp/>==<sp/><ref refid="file_8h_1a301749b9aa4b9416c329bb8b19345216" kindref="member">AT_FDCWD</ref>)<sp/>{</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="fs_8c_1afc3440e0d49f08a090794f81e6f6988d" kindref="member">fat32_path2dir</ref>(path,<sp/>&amp;</highlight><highlight class="keyword">new</highlight><highlight class="normal">,<sp/><ref refid="fs_8c_1a7ed1f339a9c42b1a180ffbf41bb91d10" kindref="member">cur_dir</ref>);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structfd" kindref="compound">fd_t</ref><sp/>*file<sp/>=<sp/><ref refid="fd_8c_1a15dcc53ce1c457472fc819d1ab3cf5e1" kindref="member">get_fd</ref>(dirfd);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file<sp/>||<sp/>file-&gt;<ref refid="structfd_1a18bc3b87f2dac145f951518a964fe306" kindref="member">file</ref><sp/>!=<sp/><ref refid="fat32_8h_1afa13d3c1c60925f7b1e639233a799860" kindref="member">ATTR_DIRECTORY</ref>)<sp/>{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">.first_cluster<sp/>=<sp/>file-&gt;<ref refid="structfd_1aa3d778b06e093523359f0e04dbeb8599" kindref="member">first_cluster</ref>;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">.size<sp/>=<sp/><ref refid="fs_8c_1af7c6fadfeef72fe01d7b305239373ee0" kindref="member">fat32_fcluster2size</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal">.first_cluster);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>use<sp/>of<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>found<sp/>by<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ret)<sp/>{</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="uniondentry" kindref="compound">dentry_t</ref><sp/>*dtable<sp/>=<sp/><ref refid="types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>dtable<sp/>=<sp/><ref refid="fs_8c_1a5736ddf8a694313c2de4d435f66aba9a" kindref="member">read_whole_dir</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal">.first_cluster,<sp/>0);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>=<sp/><ref refid="fs_8c_1a3d6f2b8b1f2c39a27d09bcf11d343187" kindref="member">fat32_name2offset</ref>(name,<sp/>dtable);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;[fat32]<sp/>openat<sp/>create<sp/>file<sp/>with<sp/>name<sp/>%s!\n&quot;,name);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>=<sp/><ref refid="fs_8c_1a3908ce770240abc7be9af011f236918b" kindref="member">alloc_dentry</ref>(&amp;dtable,<sp/>name,<sp/><ref refid="file_8h_1a6afd3dd2f570069804b40e6aa24fc966" kindref="member">O_DIRECTORY</ref><sp/>|<sp/><ref refid="file_8h_1abb0586253488ee61072b73557eeb873b" kindref="member">O_RDWR</ref>,<sp/>mode,<sp/>&amp;</highlight><highlight class="keyword">new</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="974"><highlight class="normal">}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fs_8c_1a7948e6c31a074f7d53aa5836fec7fe12" kindref="member">sys_chdir</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path)<sp/>{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdir__info" kindref="compound">dir_info_t</ref><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="fs_8c_1afc3440e0d49f08a090794f81e6f6988d" kindref="member">fat32_path2dir</ref>(path,<sp/>&amp;</highlight><highlight class="keyword">new</highlight><highlight class="normal">,<sp/><ref refid="fs_8c_1ab49ea0634e50fbcf6723c042807d010d" kindref="member">root_dir</ref>);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="fs_8c_1afc3440e0d49f08a090794f81e6f6988d" kindref="member">fat32_path2dir</ref>(path,<sp/>&amp;</highlight><highlight class="keyword">new</highlight><highlight class="normal">,<sp/><ref refid="fs_8c_1a7ed1f339a9c42b1a180ffbf41bb91d10" kindref="member">cur_dir</ref>);</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ret)<sp/>{</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1a06d03ddc23233f125efb5d5daf6fcf79" kindref="member">k_print</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>such<sp/>Directory!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fs_8c_1a7ed1f339a9c42b1a180ffbf41bb91d10" kindref="member">cur_dir</ref>.<ref refid="structdir__info_1abaebc1e16cce85b498775b3011dfba8c" kindref="member">first_cluster</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">.first_cluster;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fs_8c_1a7ed1f339a9c42b1a180ffbf41bb91d10" kindref="member">cur_dir</ref>.<ref refid="structdir__info_1a01d3b3430c4ebe7468166e4b8daf9958" kindref="member">size</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">.size;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>path<sp/>from<sp/>cur<sp/>dir<sp/>or<sp/>root<sp/>dir?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="string_8h_1a4985196d8a63d22e320cf33d904d2f92" kindref="member">k_memcpy</ref>((uint8_t<sp/>*)<ref refid="fs_8c_1a7ed1f339a9c42b1a180ffbf41bb91d10" kindref="member">cur_dir</ref>.<ref refid="structdir__info_1a1d08207729ecb85a7e1562dc7432b598" kindref="member">name</ref>,<sp/>(uint8_t<sp/>*)path,<sp/><ref refid="string_8h_1ae096c40164c6e072e600751bd7151fb9" kindref="member">k_strlen</ref>(path)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>:<sp/>fix<sp/>&apos;/&apos;<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="string_8h_1a4985196d8a63d22e320cf33d904d2f92" kindref="member">k_memcpy</ref>((uint8_t<sp/>*)(&amp;<ref refid="fs_8c_1a7ed1f339a9c42b1a180ffbf41bb91d10" kindref="member">cur_dir</ref>.<ref refid="structdir__info_1a1d08207729ecb85a7e1562dc7432b598" kindref="member">name</ref>[<ref refid="string_8h_1ae096c40164c6e072e600751bd7151fb9" kindref="member">k_strlen</ref>(<ref refid="fs_8c_1a7ed1f339a9c42b1a180ffbf41bb91d10" kindref="member">cur_dir</ref>.<ref refid="structdir__info_1a1d08207729ecb85a7e1562dc7432b598" kindref="member">name</ref>)]),<sp/>(uint8_t<sp/>*)path,<sp/><ref refid="string_8h_1ae096c40164c6e072e600751bd7151fb9" kindref="member">k_strlen</ref>(path)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fs_8c_1afa7db92317ec016b54afebbbcc6b273a" kindref="member">sys_getdents64</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structfd" kindref="compound">fd</ref>,<sp/><ref refid="structdirent64" kindref="compound">dirent64_t</ref><sp/>*dirent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfd" kindref="compound">fd_t</ref><sp/>*file<sp/>=<sp/><ref refid="fd_8c_1a15dcc53ce1c457472fc819d1ab3cf5e1" kindref="member">get_fd</ref>(<ref refid="structfd" kindref="compound">fd</ref>);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file-&gt;<ref refid="structfd_1a18bc3b87f2dac145f951518a964fe306" kindref="member">file</ref><sp/>!=<sp/><ref refid="fat32_8h_1afa13d3c1c60925f7b1e639233a799860" kindref="member">ATTR_DIRECTORY</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="uniondentry" kindref="compound">dentry_t</ref><sp/>*dtable<sp/>=<sp/><ref refid="fs_8c_1a5736ddf8a694313c2de4d435f66aba9a" kindref="member">read_whole_dir</ref>(file-&gt;<ref refid="structfd_1aa3d778b06e093523359f0e04dbeb8599" kindref="member">first_cluster</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>name[<ref refid="fat32_8h_1afd709f201d7643c3909621f620ea648a" kindref="member">MAX_NAME_LEN</ref>];</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal">repeat:</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>=<sp/><ref refid="fs_8c_1a16e005ccdf596477d61911a0e79f5f3b" kindref="member">dentry2name</ref>(&amp;dtable[file-&gt;<ref refid="structfd_1ab8a702fe2f6bf2e32278fac665966e7b" kindref="member">pos</ref>],<sp/>name);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!offset)<sp/>{</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((offset<sp/>==<sp/>1)<sp/>&amp;&amp;<sp/>(name[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>repeat;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>file-&gt;<ref refid="structfd_1ab8a702fe2f6bf2e32278fac665966e7b" kindref="member">pos</ref><sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>dirent-&gt;<ref refid="structdirent64_1ac6e4ef85c65554400b54453e5cb017f7" kindref="member">d_ino</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>dirent-&gt;<ref refid="structdirent64_1a75cbff7adaa1a45994be22687441e214" kindref="member">d_off</ref><sp/>=<sp/>(long)offset;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>dirent-&gt;<ref refid="structdirent64_1a4472cd642ab74191bccff5fdb87ba57e" kindref="member">d_reclen</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="fs_8h_1a24aad750df2ab79e1cab28e733481b6f" kindref="member">dirent64_t</ref>)<sp/>+<sp/><ref refid="string_8h_1ae096c40164c6e072e600751bd7151fb9" kindref="member">k_strlen</ref>(name)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>dirent-&gt;<ref refid="structdirent64_1a4228c87afd910baab45a45ce745df789" kindref="member">d_type</ref><sp/>=<sp/>dtable[file-&gt;<ref refid="structfd_1ab8a702fe2f6bf2e32278fac665966e7b" kindref="member">pos</ref><sp/>-<sp/>1].<ref refid="uniondentry_1a2e0a48bc674187147905b55e289be834" kindref="member">sn</ref>.attr;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="string_8h_1a4985196d8a63d22e320cf33d904d2f92" kindref="member">k_memcpy</ref>((uint8_t<sp/>*)dirent-&gt;<ref refid="structdirent64_1a16dc8c4c2b92cd2dc6cb1a5f8bf76fa1" kindref="member">d_name</ref>,<sp/>(uint8_t<sp/>*)name,<sp/><ref refid="string_8h_1ae096c40164c6e072e600751bd7151fb9" kindref="member">k_strlen</ref>(name)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="fs_8h_1a24aad750df2ab79e1cab28e733481b6f" kindref="member">dirent64_t</ref>)<sp/>+<sp/><ref refid="string_8h_1ae096c40164c6e072e600751bd7151fb9" kindref="member">k_strlen</ref>(name)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fs_8c_1a8b008c50b5e190654619ffbbdfc8f1a4" kindref="member">sys_openat</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dirfd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,<sp/><ref refid="file_8h_1af8f4385bb42836d1e3ad4fea9d71d1b9" kindref="member">mode_t</ref><sp/>flags,<sp/><ref refid="file_8h_1af8f4385bb42836d1e3ad4fea9d71d1b9" kindref="member">mode_t</ref><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>dir<sp/>file<sp/>belonged<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdir__info" kindref="compound">dir_info_t</ref><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>path[<ref refid="fat32_8h_1abdd33f362ae3bbdacb5de76473aa8a2f" kindref="member">MAX_PATH_LEN</ref>],<sp/>name[<ref refid="fat32_8h_1afd709f201d7643c3909621f620ea648a" kindref="member">MAX_NAME_LEN</ref>];</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fs_8c_1a43712190cb180f82c70726244079751c" kindref="member">filename2path</ref>(path,<sp/>name,<sp/>filename);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;[debug]<sp/>open<sp/>%s,<sp/>at<sp/>%s\n&quot;,name,path);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="fs_8c_1afc3440e0d49f08a090794f81e6f6988d" kindref="member">fat32_path2dir</ref>(path,<sp/>&amp;</highlight><highlight class="keyword">new</highlight><highlight class="normal">,<sp/><ref refid="fs_8c_1ab49ea0634e50fbcf6723c042807d010d" kindref="member">root_dir</ref>);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dirfd<sp/>==<sp/><ref refid="file_8h_1a301749b9aa4b9416c329bb8b19345216" kindref="member">AT_FDCWD</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="fs_8c_1afc3440e0d49f08a090794f81e6f6988d" kindref="member">fat32_path2dir</ref>(path,<sp/>&amp;</highlight><highlight class="keyword">new</highlight><highlight class="normal">,<sp/><ref refid="fs_8c_1a7ed1f339a9c42b1a180ffbf41bb91d10" kindref="member">cur_dir</ref>);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structfd" kindref="compound">fd_t</ref><sp/>*file<sp/>=<sp/><ref refid="fd_8c_1a15dcc53ce1c457472fc819d1ab3cf5e1" kindref="member">get_fd</ref>(dirfd);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file<sp/>||<sp/>file-&gt;<ref refid="structfd_1a18bc3b87f2dac145f951518a964fe306" kindref="member">file</ref><sp/>!=<sp/><ref refid="fat32_8h_1afa13d3c1c60925f7b1e639233a799860" kindref="member">ATTR_DIRECTORY</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">.first_cluster<sp/>=<sp/>file-&gt;<ref refid="structfd_1aa3d778b06e093523359f0e04dbeb8599" kindref="member">first_cluster</ref>;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">.size<sp/>=<sp/><ref refid="fs_8c_1af7c6fadfeef72fe01d7b305239373ee0" kindref="member">fat32_fcluster2size</ref>(file-&gt;<ref refid="structfd_1aa3d778b06e093523359f0e04dbeb8599" kindref="member">first_cluster</ref>);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>use<sp/>of<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>found<sp/>by<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ret)<sp/>{</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>open<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="fd_8c_1a0d55425e16feb3bea1363d51fdf3a094" kindref="member">fd_alloc</ref>();</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfd" kindref="compound">fd_t</ref><sp/>*file<sp/>=<sp/><ref refid="fd_8c_1a15dcc53ce1c457472fc819d1ab3cf5e1" kindref="member">get_fd</ref>(ret);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;[debug]<sp/>name<sp/>=<sp/>%s\n&quot;,name);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="string_8h_1ad3fbffdca65397cb78cd0d3d38f7758f" kindref="member">k_strcmp</ref>(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">,<sp/>name))<sp/>{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file-&gt;<ref refid="structfd_1a18bc3b87f2dac145f951518a964fe306" kindref="member">file</ref><sp/>=<sp/><ref refid="fat32_8h_1afa13d3c1c60925f7b1e639233a799860" kindref="member">ATTR_DIRECTORY</ref>;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_memcpy((uint8_t<sp/>*)file-&gt;name,(uint8_t<sp/>*)cur_dir.name,k_strlen(cur_dir.name)+1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file-&gt;<ref refid="structfd_1a8e675d589d95a1c6a7d99bd45164dbb9" kindref="member">dev</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file-&gt;<ref refid="structfd_1a2cfdb78805b3a952d9eba494e1ae005c" kindref="member">flags</ref><sp/>=<sp/>flags<sp/>&amp;<sp/>~(<ref refid="file_8h_1a6afd3dd2f570069804b40e6aa24fc966" kindref="member">O_DIRECTORY</ref><sp/>|<sp/><ref refid="file_8h_1ab40a23079c3b9a7e25ffdc8108c7fb02" kindref="member">O_CREATE</ref>);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file-&gt;<ref refid="structfd_1a186b68a5c96f7e13f1148ee474ce7cbb" kindref="member">mode</ref><sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file-&gt;<ref refid="structfd_1aa3d778b06e093523359f0e04dbeb8599" kindref="member">first_cluster</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">.first_cluster;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file-&gt;<ref refid="structfd_1a60eabea029590e8f49eae78e5181450e" kindref="member">cur_clus_num</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">.first_cluster;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file-&gt;<ref refid="structfd_1ab8a702fe2f6bf2e32278fac665966e7b" kindref="member">pos</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file-&gt;<ref refid="structfd_1a05ac683ed52f0851b0aece8f854b0805" kindref="member">size</ref><sp/>=<sp/><ref refid="fs_8c_1af7c6fadfeef72fe01d7b305239373ee0" kindref="member">fat32_fcluster2size</ref>(<ref refid="fs_8c_1a7ed1f339a9c42b1a180ffbf41bb91d10" kindref="member">cur_dir</ref>.<ref refid="structdir__info_1a01d3b3430c4ebe7468166e4b8daf9958" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="uniondentry" kindref="compound">dentry_t</ref><sp/>*dtable<sp/>=<sp/><ref refid="types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/>dtable<sp/>=<sp/><ref refid="fs_8c_1a5736ddf8a694313c2de4d435f66aba9a" kindref="member">read_whole_dir</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal">.first_cluster,<sp/>0);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>=<sp/><ref refid="fs_8c_1a3d6f2b8b1f2c39a27d09bcf11d343187" kindref="member">fat32_name2offset</ref>(name,<sp/>dtable);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(((dtable[offset].sn.attr<sp/>&amp;<sp/><ref refid="fat32_8h_1afa13d3c1c60925f7b1e639233a799860" kindref="member">ATTR_DIRECTORY</ref>)<sp/>==<sp/>0)<sp/>^<sp/>((flags<sp/>&amp;<sp/><ref refid="file_8h_1a6afd3dd2f570069804b40e6aa24fc966" kindref="member">O_DIRECTORY</ref>)<sp/>==<sp/>0)))<sp/>{</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;[debug]<sp/>openat<sp/>file<sp/>type<sp/>right!\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fs_8c_1a79130d4d80dcfc1ec167de197ac7de78" kindref="member">fat32_dentry2fd</ref>(&amp;dtable[offset],<sp/>file,<sp/>flags<sp/>&amp;<sp/>~<ref refid="file_8h_1ab40a23079c3b9a7e25ffdc8108c7fb02" kindref="member">O_CREATE</ref>,<sp/>mode,<sp/>name);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>(flags<sp/>&amp;<sp/><ref refid="file_8h_1ab40a23079c3b9a7e25ffdc8108c7fb02" kindref="member">O_CREATE</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;[debug]<sp/>openat<sp/>create<sp/>file<sp/>with<sp/>name<sp/>%s!\n&quot;,name);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/><ref refid="fs_8c_1a3908ce770240abc7be9af011f236918b" kindref="member">alloc_dentry</ref>(&amp;dtable,<sp/>name,<sp/>flags<sp/>&amp;<sp/>~<ref refid="file_8h_1ab40a23079c3b9a7e25ffdc8108c7fb02" kindref="member">O_CREATE</ref>,<sp/>mode,<sp/>&amp;</highlight><highlight class="keyword">new</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fs_8c_1a79130d4d80dcfc1ec167de197ac7de78" kindref="member">fat32_dentry2fd</ref>(&amp;dtable[offset],<sp/>file,<sp/>flags<sp/>&amp;<sp/>~<ref refid="file_8h_1ab40a23079c3b9a7e25ffdc8108c7fb02" kindref="member">O_CREATE</ref>,<sp/>mode,<sp/>name);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fd_8c_1ac7a4c8f3c3f91405b5f70fdc19533a16" kindref="member">fd_free</ref>(ret);</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fs_8c_1a9d94cbe3ac3c59ac54d9e884a024d9c5" kindref="member">sys_close</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structfd" kindref="compound">fd</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fd_8c_1ac7a4c8f3c3f91405b5f70fdc19533a16" kindref="member">fd_free</ref>(<ref refid="structfd" kindref="compound">fd</ref>);</highlight></codeline>
<codeline lineno="1104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fs_8c_1a4b77d64a45fc749afe7885dd223f85a1" kindref="member">sys_linkat</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>old,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*oldname,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*newname,<sp/><ref refid="file_8h_1af8f4385bb42836d1e3ad4fea9d71d1b9" kindref="member">mode_t</ref><sp/>flags)<sp/>{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>fat<sp/>not<sp/>support<sp/>it!<sp/>just<sp/>return<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//get<sp/>dir<sp/>file<sp/>belonged<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dir_info_t<sp/>new;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>char<sp/>path[MAX_PATH_LEN],<sp/>name[MAX_NAME_LEN];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>ret<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filename2path(path,name,oldname);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;open<sp/>%s,<sp/>at<sp/>%s\n&quot;,name,path);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(path[0]<sp/>==<sp/>&apos;/&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>fat32_path2dir(path,&amp;new,root_dir);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else<sp/>if(old<sp/>==<sp/>AT_FDCWD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>fat32_path2dir(path,&amp;new,cur_dir);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>fd_t<sp/>*file<sp/>=<sp/>get_fd(old);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if(!file<sp/>||<sp/>file-&gt;file<sp/>!=<sp/>ATTR_DIRECTORY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>new.first_cluster<sp/>=<sp/>file-&gt;first_cluster;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>new.size<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>fat32_fcluster2size(new.first_cluster);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//no<sp/>use<sp/>of<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//not<sp/>found<sp/>by<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(!ret)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//try<sp/>open<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>offset<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dentry_t*<sp/>dtable<sp/>=<sp/>NULL;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dtable<sp/>=<sp/>read_whole_dir(new.first_cluster,0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>offset<sp/>=<sp/>fat32_name2offset(name,dtable);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(offset<sp/>&gt;=<sp/>0){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if(!(dtable[offset].sn.attr<sp/>&amp;<sp/>ATTR_DIRECTORY)){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>dtable[offset].sn.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}else{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fd_free(ret);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fs_8c_1a5ef768b4960fc26d7237db1e53522ecb" kindref="member">sys_unlinkat</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dirfd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path_0,<sp/><ref refid="file_8h_1af8f4385bb42836d1e3ad4fea9d71d1b9" kindref="member">mode_t</ref><sp/>flags)<sp/>{</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>dir<sp/>file<sp/>belonged<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdir__info" kindref="compound">dir_info_t</ref><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>path[<ref refid="fat32_8h_1abdd33f362ae3bbdacb5de76473aa8a2f" kindref="member">MAX_PATH_LEN</ref>],<sp/>name[<ref refid="fat32_8h_1afd709f201d7643c3909621f620ea648a" kindref="member">MAX_NAME_LEN</ref>];</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fs_8c_1a43712190cb180f82c70726244079751c" kindref="member">filename2path</ref>(path,<sp/>name,<sp/>path_0);</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;[debug]<sp/>rm<sp/>%s,<sp/>at<sp/>%s\n&quot;,name,path);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="fs_8c_1afc3440e0d49f08a090794f81e6f6988d" kindref="member">fat32_path2dir</ref>(path,<sp/>&amp;</highlight><highlight class="keyword">new</highlight><highlight class="normal">,<sp/><ref refid="fs_8c_1ab49ea0634e50fbcf6723c042807d010d" kindref="member">root_dir</ref>);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dirfd<sp/>==<sp/><ref refid="file_8h_1a301749b9aa4b9416c329bb8b19345216" kindref="member">AT_FDCWD</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="fs_8c_1afc3440e0d49f08a090794f81e6f6988d" kindref="member">fat32_path2dir</ref>(path,<sp/>&amp;</highlight><highlight class="keyword">new</highlight><highlight class="normal">,<sp/><ref refid="fs_8c_1a7ed1f339a9c42b1a180ffbf41bb91d10" kindref="member">cur_dir</ref>);</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structfd" kindref="compound">fd_t</ref><sp/>*file<sp/>=<sp/><ref refid="fd_8c_1a15dcc53ce1c457472fc819d1ab3cf5e1" kindref="member">get_fd</ref>(dirfd);</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file<sp/>||<sp/>file-&gt;<ref refid="structfd_1a18bc3b87f2dac145f951518a964fe306" kindref="member">file</ref><sp/>!=<sp/><ref refid="fat32_8h_1afa13d3c1c60925f7b1e639233a799860" kindref="member">ATTR_DIRECTORY</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">.first_cluster<sp/>=<sp/>file-&gt;<ref refid="structfd_1aa3d778b06e093523359f0e04dbeb8599" kindref="member">first_cluster</ref>;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">.size<sp/>=<sp/><ref refid="fs_8c_1af7c6fadfeef72fe01d7b305239373ee0" kindref="member">fat32_fcluster2size</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal">.first_cluster);</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>use<sp/>of<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>found<sp/>by<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ret)<sp/>{</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>open<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="uniondentry" kindref="compound">dentry_t</ref><sp/>*dtable<sp/>=<sp/><ref refid="types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/>dtable<sp/>=<sp/><ref refid="fs_8c_1a5736ddf8a694313c2de4d435f66aba9a" kindref="member">read_whole_dir</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal">.first_cluster,<sp/>0);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>=<sp/><ref refid="fs_8c_1a3d6f2b8b1f2c39a27d09bcf11d343187" kindref="member">fat32_name2offset</ref>(name,<sp/>dtable);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;[debug]<sp/>:<sp/>testopen<sp/>not<sp/>found!\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>dtable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(((dtable[offset].sn.attr<sp/>&amp;<sp/><ref refid="fat32_8h_1afa13d3c1c60925f7b1e639233a799860" kindref="member">ATTR_DIRECTORY</ref>)<sp/>==<sp/>0)<sp/>^<sp/>((flags<sp/>&amp;<sp/><ref refid="file_8h_1a18f47dae5e59e6683441ef49754fe068" kindref="member">AT_REMOVEDIR</ref>)<sp/>==<sp/>0)))<sp/>{</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;[debug]<sp/>destroy<sp/>%s<sp/>at<sp/>dir<sp/>%s,<sp/>offset<sp/>%d\n&quot;,name,path,offset);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>set<sp/>empty<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fs_8c_1ae5044d9b0bc2286bc5dc04fc14fdc164" kindref="member">destroy_dentry</ref>(dtable,<sp/>offset);</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fs_8c_1ab263423f94094a4fd4e8c28d79840755" kindref="member">write_whole_dir</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal">.first_cluster,<sp/>dtable,<sp/>1);</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fs_8c_1a17d30333f33f90c98570dc8c5f438283" kindref="member">sys_mount</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*special,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dir,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="fat32_8h_1a1d127017fb298b889f4ba24752d08b8e" kindref="member">type</ref>,<sp/><ref refid="file_8h_1af8f4385bb42836d1e3ad4fea9d71d1b9" kindref="member">mode_t</ref><sp/>flags,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)<sp/>{</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>todo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fs_8c_1ae98d4677cec7581b48efb2a2261cd61b" kindref="member">sys_umount2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*special,<sp/><ref refid="file_8h_1af8f4385bb42836d1e3ad4fea9d71d1b9" kindref="member">mode_t</ref><sp/>flags)<sp/>{</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>todo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><ref refid="types_8h_1af10f4c58d91a6fa30ccc8a19d0ecbf48" kindref="member">ssize_t</ref><sp/><ref refid="fs_8c_1a538b392173a1c0fffcbed18345952d60" kindref="member">sys_read</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structfd" kindref="compound">fd</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structbuf" kindref="compound">buf</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count)<sp/>{</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfd" kindref="compound">fd_t</ref><sp/>*file<sp/>=<sp/><ref refid="fd_8c_1a15dcc53ce1c457472fc819d1ab3cf5e1" kindref="member">get_fd</ref>(<ref refid="structfd" kindref="compound">fd</ref>);</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file)<sp/>{</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file-&gt;<ref refid="structfd_1a18bc3b87f2dac145f951518a964fe306" kindref="member">file</ref><sp/>==<sp/><ref refid="fs_8h_1aaca70138f0cb63ddb026921afc635179" kindref="member">stdin</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structbuf" kindref="compound">buf</ref><sp/>=<sp/><ref refid="io_8h_1af8b2177b61ff35b8b5582e5d214f3a21" kindref="member">k_port_read</ref>();</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(file-&gt;<ref refid="structfd_1a2cfdb78805b3a952d9eba494e1ae005c" kindref="member">flags</ref><sp/>==<sp/><ref refid="file_8h_1a7a68c9ffaac7dbcd652225dd7c06a54b" kindref="member">O_RDONLY</ref>)<sp/>&amp;&amp;<sp/>!(file-&gt;<ref refid="structfd_1a2cfdb78805b3a952d9eba494e1ae005c" kindref="member">flags</ref><sp/>==<sp/><ref refid="file_8h_1abb0586253488ee61072b73557eeb873b" kindref="member">O_RDWR</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file-&gt;<ref refid="structfd_1a2cfdb78805b3a952d9eba494e1ae005c" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="file_8h_1a6afd3dd2f570069804b40e6aa24fc966" kindref="member">O_DIRECTORY</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>pipe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file-&gt;<ref refid="structfd_1a62e02f7c06fb7a737ddcb71a3fb68e68" kindref="member">is_pipe_read</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpipe" kindref="compound">pipe_t</ref><sp/>*p<sp/>=<sp/>&amp;<ref refid="fd_8c_1a8025a26fe82fa76119549722ae508993" kindref="member">pipe_table</ref>[file-&gt;<ref refid="structfd_1a83737c9fc04a24cc7a3c0f7331928d40" kindref="member">pip_num</ref>];</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmbox__arg" kindref="compound">mbox_arg_t</ref><sp/>arg<sp/>=<sp/>{.<ref refid="structmbox__arg_1a867ce7c71bddb19af981d3a370b4b41d" kindref="member">msg</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<ref refid="structbuf" kindref="compound">buf</ref>,<sp/>.msg_length<sp/>=<sp/>count,<sp/>.sleep_operation<sp/>=<sp/>0};</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="sync_8h_1a9d75e952b9e2ef4f0f9d9ad1a3374573" kindref="member">k_mbox_recv</ref>(p-&gt;<ref refid="structpipe_1a5ee26c9cdf246d2e2fbf6fccf0282da4" kindref="member">mailbox</ref>,<sp/><ref refid="types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>&amp;arg);</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*data<sp/>=<sp/><ref refid="fs_8c_1a5736ddf8a694313c2de4d435f66aba9a" kindref="member">read_whole_dir</ref>(file-&gt;<ref refid="structfd_1aa3d778b06e093523359f0e04dbeb8599" kindref="member">first_cluster</ref>,<sp/>file-&gt;<ref refid="structfd_1a05ac683ed52f0851b0aece8f854b0805" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file-&gt;<ref refid="structfd_1a05ac683ed52f0851b0aece8f854b0805" kindref="member">size</ref><sp/>-<sp/>file-&gt;<ref refid="structfd_1ab8a702fe2f6bf2e32278fac665966e7b" kindref="member">pos</ref><sp/>&gt;=<sp/>count)<sp/>{</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="string_8h_1a4985196d8a63d22e320cf33d904d2f92" kindref="member">k_memcpy</ref>((uint8_t<sp/>*)<ref refid="structbuf" kindref="compound">buf</ref>,<sp/>&amp;data[file-&gt;<ref refid="structfd_1ab8a702fe2f6bf2e32278fac665966e7b" kindref="member">pos</ref>],<sp/>count);</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file-&gt;<ref refid="structfd_1ab8a702fe2f6bf2e32278fac665966e7b" kindref="member">pos</ref><sp/>+=<sp/>count;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>data<sp/>TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>file-&gt;<ref refid="structfd_1a05ac683ed52f0851b0aece8f854b0805" kindref="member">size</ref><sp/>-<sp/>file-&gt;<ref refid="structfd_1ab8a702fe2f6bf2e32278fac665966e7b" kindref="member">pos</ref>;</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="string_8h_1a4985196d8a63d22e320cf33d904d2f92" kindref="member">k_memcpy</ref>((uint8_t<sp/>*)<ref refid="structbuf" kindref="compound">buf</ref>,<sp/>&amp;data[file-&gt;<ref refid="structfd_1ab8a702fe2f6bf2e32278fac665966e7b" kindref="member">pos</ref>],<sp/>len);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file-&gt;<ref refid="structfd_1ab8a702fe2f6bf2e32278fac665966e7b" kindref="member">pos</ref><sp/>=<sp/>file-&gt;<ref refid="structfd_1a05ac683ed52f0851b0aece8f854b0805" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>data<sp/>TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><ref refid="types_8h_1af10f4c58d91a6fa30ccc8a19d0ecbf48" kindref="member">ssize_t</ref><sp/><ref refid="fs_8c_1a1669296484c126d069b1bceeb97af1e7" kindref="member">sys_write</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structfd" kindref="compound">fd</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structbuf" kindref="compound">buf</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count)<sp/>{</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfd" kindref="compound">fd_t</ref><sp/>*file<sp/>=<sp/><ref refid="fd_8c_1a15dcc53ce1c457472fc819d1ab3cf5e1" kindref="member">get_fd</ref>(<ref refid="structfd" kindref="compound">fd</ref>);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file)<sp/>{</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file-&gt;<ref refid="structfd_1a18bc3b87f2dac145f951518a964fe306" kindref="member">file</ref><sp/>==<sp/><ref refid="fs_8h_1a0c0ef221f95f64e8632451312fd18cc8" kindref="member">stdout</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>:<sp/>create<sp/>stdin/out/err</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="screen_8c_1a4bda076c33e4ef2c3667be3f9d47ca4f" kindref="member">sys_screen_write_len</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<ref refid="structbuf" kindref="compound">buf</ref>,<sp/>count);</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(file-&gt;<ref refid="structfd_1a2cfdb78805b3a952d9eba494e1ae005c" kindref="member">flags</ref><sp/>==<sp/><ref refid="file_8h_1a11b644a8526139c4cc1850dac1271ced" kindref="member">O_WRONLY</ref>)<sp/>&amp;&amp;<sp/>!(file-&gt;<ref refid="structfd_1a2cfdb78805b3a952d9eba494e1ae005c" kindref="member">flags</ref><sp/>==<sp/><ref refid="file_8h_1abb0586253488ee61072b73557eeb873b" kindref="member">O_RDWR</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file-&gt;<ref refid="structfd_1a18bc3b87f2dac145f951518a964fe306" kindref="member">file</ref><sp/>==<sp/><ref refid="fat32_8h_1afa13d3c1c60925f7b1e639233a799860" kindref="member">ATTR_DIRECTORY</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>pipe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file-&gt;<ref refid="structfd_1a6bbeed3999a7b76f6329862eba659fad" kindref="member">is_pipe_write</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpipe" kindref="compound">pipe_t</ref><sp/>*p<sp/>=<sp/>&amp;<ref refid="fd_8c_1a8025a26fe82fa76119549722ae508993" kindref="member">pipe_table</ref>[file-&gt;<ref refid="structfd_1a83737c9fc04a24cc7a3c0f7331928d40" kindref="member">pip_num</ref>];</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmbox__arg" kindref="compound">mbox_arg_t</ref><sp/>arg<sp/>=<sp/>{.<ref refid="structmbox__arg_1a867ce7c71bddb19af981d3a370b4b41d" kindref="member">msg</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<ref refid="structbuf" kindref="compound">buf</ref>,<sp/>.msg_length<sp/>=<sp/>count,<sp/>.sleep_operation<sp/>=<sp/>0};</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="sync_8h_1a7bb8ff6db004056fd78710f8b40543d5" kindref="member">k_mbox_send</ref>(p-&gt;<ref refid="structpipe_1a5ee26c9cdf246d2e2fbf6fccf0282da4" kindref="member">mailbox</ref>,<sp/><ref refid="types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>&amp;arg);</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structpipe_1a729795bc415b421b99ef7dc4d4286d13" kindref="member">w_valid</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>=<sp/>(file-&gt;<ref refid="structfd_1ab8a702fe2f6bf2e32278fac665966e7b" kindref="member">pos</ref><sp/>+<sp/>count<sp/>+<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a5fc7659eb603d602a275dadaf686b849" kindref="member">bytes_per_cluster</ref><sp/>-<sp/>1)<sp/>/<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a5fc7659eb603d602a275dadaf686b849" kindref="member">bytes_per_cluster</ref><sp/>-<sp/>(file-&gt;<ref refid="structfd_1a05ac683ed52f0851b0aece8f854b0805" kindref="member">size</ref><sp/>+<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a5fc7659eb603d602a275dadaf686b849" kindref="member">bytes_per_cluster</ref><sp/>-<sp/>1)<sp/>/<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a5fc7659eb603d602a275dadaf686b849" kindref="member">bytes_per_cluster</ref>;<sp/></highlight><highlight class="comment">//<sp/>need<sp/>more<sp/>cluster?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file-&gt;<ref refid="structfd_1aa3d778b06e093523359f0e04dbeb8599" kindref="member">first_cluster</ref><sp/>=<sp/><ref refid="fs_8c_1acdbc891e6ee9df840bb8ec93c380677e" kindref="member">alloc_cluster</ref>(file-&gt;<ref refid="structfd_1aa3d778b06e093523359f0e04dbeb8599" kindref="member">first_cluster</ref>);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>--;</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*data<sp/>=<sp/><ref refid="fs_8c_1a5736ddf8a694313c2de4d435f66aba9a" kindref="member">read_whole_dir</ref>(file-&gt;<ref refid="structfd_1aa3d778b06e093523359f0e04dbeb8599" kindref="member">first_cluster</ref>,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>enough<sp/>room</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data)<sp/>{</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file-&gt;<ref refid="structfd_1ab8a702fe2f6bf2e32278fac665966e7b" kindref="member">pos</ref><sp/>+<sp/>count<sp/>&gt;<sp/>file-&gt;<ref refid="structfd_1a05ac683ed52f0851b0aece8f854b0805" kindref="member">size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file-&gt;<ref refid="structfd_1a05ac683ed52f0851b0aece8f854b0805" kindref="member">size</ref><sp/>=<sp/>file-&gt;<ref refid="structfd_1ab8a702fe2f6bf2e32278fac665966e7b" kindref="member">pos</ref><sp/>+<sp/>count;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="string_8h_1a4985196d8a63d22e320cf33d904d2f92" kindref="member">k_memcpy</ref>(&amp;data[file-&gt;<ref refid="structfd_1ab8a702fe2f6bf2e32278fac665966e7b" kindref="member">pos</ref>],<sp/>(uint8_t<sp/>*)<ref refid="structbuf" kindref="compound">buf</ref>,<sp/>count);<sp/></highlight><highlight class="comment">//<sp/>has<sp/>enough<sp/>room</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fs_8c_1ab263423f94094a4fd4e8c28d79840755" kindref="member">write_whole_dir</ref>(file-&gt;<ref refid="structfd_1aa3d778b06e093523359f0e04dbeb8599" kindref="member">first_cluster</ref>,<sp/>data,<sp/>1);</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/>file-&gt;<ref refid="structfd_1ab8a702fe2f6bf2e32278fac665966e7b" kindref="member">pos</ref><sp/>+=<sp/>count;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fs_8c_1ab82f35605a94da4595380df6a1774b91" kindref="member">sys_fstat</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structfd" kindref="compound">fd</ref>,<sp/><ref refid="structkstat" kindref="compound">kstat_t</ref><sp/>*statbuf)<sp/>{</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfd" kindref="compound">fd_t</ref><sp/>*file<sp/>=<sp/><ref refid="fd_8c_1a15dcc53ce1c457472fc819d1ab3cf5e1" kindref="member">get_fd</ref>(<ref refid="structfd" kindref="compound">fd</ref>);</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>statbuf-&gt;st_dev<sp/>=<sp/>file-&gt;dev;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>statbuf-&gt;st_ino<sp/>=<sp/>fd<sp/>-<sp/>3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>statbuf-&gt;st_mode<sp/>=<sp/>file-&gt;mode;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>statbuf-&gt;st_nlink<sp/>=<sp/>file-&gt;nlink;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>statbuf-&gt;st_uid<sp/>=<sp/>file-&gt;uid;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>statbuf-&gt;st_gid<sp/>=<sp/>file-&gt;gid;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>statbuf-&gt;st_rdev<sp/>=<sp/>file-&gt;rdev;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>statbuf-&gt;__pad<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>statbuf-&gt;st_size<sp/>=<sp/>file-&gt;size;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>statbuf-&gt;st_blksize<sp/>=<sp/>fat.bpb.bytes_per_sec;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>statbuf-&gt;__pad2<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>statbuf-&gt;st_blocks<sp/>=<sp/>(uint64_t)(fat32_fcluster2size(file-&gt;first_cluster)<sp/>/<sp/>fat.bpb.bytes_per_sec);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>statbuf-&gt;st_atime_sec<sp/>=<sp/>file-&gt;atime_sec;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>statbuf-&gt;st_atime_nsec<sp/>=<sp/>file-&gt;atime_nsec;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>statbuf-&gt;st_mtime_sec<sp/>=<sp/>file-&gt;mtime_sec;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>statbuf-&gt;st_mtime_nsec<sp/>=<sp/>file-&gt;mtime_nsec;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>statbuf-&gt;st_ctime_sec<sp/>=<sp/>file-&gt;ctime_sec;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>statbuf-&gt;st_ctime_nsec<sp/>=<sp/>file-&gt;ctime_nsec;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/>statbuf-&gt;<ref refid="structkstat_1a61010d90aaad1ca40bc863d2c6313452" kindref="member">st_dev</ref><sp/>=<sp/>file-&gt;<ref refid="structfd_1a8e675d589d95a1c6a7d99bd45164dbb9" kindref="member">dev</ref>;</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/>statbuf-&gt;<ref refid="structkstat_1a3029f24da03d40d2976c7223c908019c" kindref="member">st_ino</ref><sp/>=<sp/><ref refid="structfd" kindref="compound">fd</ref><sp/>-<sp/>3;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/>statbuf-&gt;<ref refid="structkstat_1a7dda59111ccfca356784cf30a8c6a15c" kindref="member">st_mode</ref><sp/>=<sp/>file-&gt;<ref refid="structfd_1a186b68a5c96f7e13f1148ee474ce7cbb" kindref="member">mode</ref>;</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/>statbuf-&gt;<ref refid="structkstat_1af8d07f3ba24ab49960756f70afe1fcfa" kindref="member">st_nlink</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/>statbuf-&gt;<ref refid="structkstat_1a383bd33a0780993a5898d547e0823093" kindref="member">st_uid</ref><sp/>=<sp/>file-&gt;<ref refid="structfd_1a9cc26c18f99b24f36a0e007985aadea6" kindref="member">uid</ref>;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/>statbuf-&gt;<ref refid="structkstat_1a1e72af54d87518bbdd2cef4c325abde6" kindref="member">st_gid</ref><sp/>=<sp/>file-&gt;<ref refid="structfd_1a9545de6d20ad8aa7f5881b65cc2efc0d" kindref="member">gid</ref>;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/>statbuf-&gt;<ref refid="structkstat_1aeef4f0679e42b46765a7551343b1ee20" kindref="member">st_rdev</ref><sp/>=<sp/>file-&gt;<ref refid="structfd_1a56690df82a7b78fe9ce769bdffcfde76" kindref="member">rdev</ref>;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/>statbuf-&gt;<ref refid="structkstat_1ab5d49d4e0b0188b6f0b31c88b19f13cf" kindref="member">__pad</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/>statbuf-&gt;<ref refid="structkstat_1acb089ce5ac53aebc5b8fe5351e293dcd" kindref="member">st_size</ref><sp/>=<sp/>file-&gt;<ref refid="structfd_1a05ac683ed52f0851b0aece8f854b0805" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/>statbuf-&gt;<ref refid="structkstat_1aac5763ac31d4bcd17723a1acb8b924ae" kindref="member">st_blksize</ref><sp/>=<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1ac6ee0f9ae1d10f22427bbc7595d10c91" kindref="member">bytes_per_sec</ref>;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/>statbuf-&gt;<ref refid="structkstat_1a30aaf8c3fe759e6f1244730f53e84ef8" kindref="member">__pad2</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/>statbuf-&gt;<ref refid="structkstat_1a92ea89155b4b5753bebdfbe309a9483d" kindref="member">st_blocks</ref><sp/>=<sp/>(uint64_t)(<ref refid="fs_8c_1af7c6fadfeef72fe01d7b305239373ee0" kindref="member">fat32_fcluster2size</ref>(file-&gt;<ref refid="structfd_1aa3d778b06e093523359f0e04dbeb8599" kindref="member">first_cluster</ref>)<sp/>/<sp/><ref refid="fs_8c_1aedf326fe429f8658c6dfcd69bf33dc38" kindref="member">fat</ref>.<ref refid="structfat32_1a409e6b408769b27b603d57dc1f15a5ed" kindref="member">bpb</ref>.<ref refid="structfat32_1ac6ee0f9ae1d10f22427bbc7595d10c91" kindref="member">bytes_per_sec</ref>);</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnanotime__val" kindref="compound">nanotime_val_t</ref><sp/>time;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="time_8h_1a723c6615d70bae09da02cb9d16344ee4" kindref="member">k_time_get_nanotime</ref>(&amp;time);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>statbuf-&gt;<ref refid="structkstat_1aea79328138f8bdf97487a6fbfccd5d5c" kindref="member">st_atime_sec</ref><sp/>=<sp/>time.<ref refid="structnanotime__val_1a46e99a6ed5552516ffc814a3b0b2c81a" kindref="member">sec</ref>;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/>statbuf-&gt;<ref refid="structkstat_1abe1094a11b5752d7059526f537cee1b7" kindref="member">st_atime_nsec</ref><sp/>=<sp/>time.<ref refid="structnanotime__val_1af6a5bbbd8b3afe6517daff0d2ff0f0e8" kindref="member">nsec</ref>;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/>statbuf-&gt;<ref refid="structkstat_1a3367fe6570767334ca284e626eb238d6" kindref="member">st_mtime_sec</ref><sp/>=<sp/>time.<ref refid="structnanotime__val_1a46e99a6ed5552516ffc814a3b0b2c81a" kindref="member">sec</ref>;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/>statbuf-&gt;<ref refid="structkstat_1af2993a781c201c64c4550ef956d2adab" kindref="member">st_mtime_nsec</ref><sp/>=<sp/>time.<ref refid="structnanotime__val_1af6a5bbbd8b3afe6517daff0d2ff0f0e8" kindref="member">nsec</ref>;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/>statbuf-&gt;<ref refid="structkstat_1a52fefa73230530c2fad355755d2b9947" kindref="member">st_ctime_sec</ref><sp/>=<sp/>time.<ref refid="structnanotime__val_1a46e99a6ed5552516ffc814a3b0b2c81a" kindref="member">sec</ref>;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/>statbuf-&gt;<ref refid="structkstat_1a04b3b935593a4a8f65bb927b568392b4" kindref="member">st_ctime_nsec</ref><sp/>=<sp/>time.<ref refid="structnanotime__val_1af6a5bbbd8b3afe6517daff0d2ff0f0e8" kindref="member">nsec</ref>;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>statbuf-&gt;<ref refid="structkstat_1acd511b9312e5d30574bddc909818d8d0" kindref="member">__unused</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/>statbuf-&gt;<ref refid="structkstat_1acd511b9312e5d30574bddc909818d8d0" kindref="member">__unused</ref>[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fs_8c_1a1c701b3d5e133887389c2b3c9e2f331c" kindref="member">fs_load_file</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/>uint8_t<sp/>**bin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*len)<sp/>{</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="uniondentry" kindref="compound">dentry_t</ref><sp/>*dtable<sp/>=<sp/><ref refid="types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>read<sp/>in<sp/>dir<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/>dtable<sp/>=<sp/><ref refid="fs_8c_1a5736ddf8a694313c2de4d435f66aba9a" kindref="member">read_whole_dir</ref>(<ref refid="fs_8c_1ab49ea0634e50fbcf6723c042807d010d" kindref="member">root_dir</ref>.<ref refid="structdir__info_1abaebc1e16cce85b498775b3011dfba8c" kindref="member">first_cluster</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/><ref refid="fs_8c_1a3d6f2b8b1f2c39a27d09bcf11d343187" kindref="member">fat32_name2offset</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)name,<sp/>dtable);</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;[debug]<sp/>can&apos;t<sp/>load,<sp/>no<sp/>such<sp/>file!\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>first<sp/>=<sp/>fat32_dentry2fcluster(&amp;dtable[offset]);</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>buffer<sp/>of<sp/>dtable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/>*len<sp/>=<sp/>dtable[offset].<ref refid="uniondentry_1a2e0a48bc674187147905b55e289be834" kindref="member">sn</ref>.file_size;</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*len<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_print(&quot;[debug]<sp/>can&apos;t<sp/>load,<sp/>empty<sp/>file!\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/>*bin<sp/>=<sp/>(uint8_t<sp/>*)<ref refid="fs_8c_1a5736ddf8a694313c2de4d435f66aba9a" kindref="member">read_whole_dir</ref>(first,<sp/>0);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fs_8c_1a42e383603cf330e3ef86bab31f7f8893" kindref="member">sys_mmap</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*addr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prot,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structfd" kindref="compound">fd</ref>,<sp/><ref refid="file_8h_1a053c614b69adbac710bb132a6eb9ccf6" kindref="member">off_t</ref><sp/>offset)<sp/>{</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(addr<sp/>!=<sp/><ref refid="types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>NOT<sp/>support<sp/>spec<sp/>addr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>addr;</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfd" kindref="compound">fd_t</ref><sp/>*file<sp/>=<sp/><ref refid="fd_8c_1a15dcc53ce1c457472fc819d1ab3cf5e1" kindref="member">get_fd</ref>(<ref refid="structfd" kindref="compound">fd</ref>);</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file)<sp/>{</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)-1;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1ad6cb5da84246290b3d730166b020f2a8" kindref="member">uintptr_t</ref><sp/>ret<sp/>=<sp/><ref refid="mm_8h_1a0f6d4865e00774e6ee9a47c82423bd4a" kindref="member">k_mm_alloc_newva</ref>();</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1ad6cb5da84246290b3d730166b020f2a8" kindref="member">uintptr_t</ref><sp/>kva<sp/>=<sp/><ref refid="mm_8h_1a0ac89a697d37de67b2f7a8861c3a1e8e" kindref="member">k_mm_alloc_page_helper</ref>(ret,<sp/>(pa2kva((*current_running)-&gt;pgdir<sp/>&lt;&lt;<sp/>12)));</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*data<sp/>=<sp/><ref refid="fs_8c_1a5736ddf8a694313c2de4d435f66aba9a" kindref="member">read_whole_dir</ref>(file-&gt;<ref refid="structfd_1aa3d778b06e093523359f0e04dbeb8599" kindref="member">first_cluster</ref>,<sp/>file-&gt;<ref refid="structfd_1a05ac683ed52f0851b0aece8f854b0805" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="string_8h_1a4985196d8a63d22e320cf33d904d2f92" kindref="member">k_memcpy</ref>((uint8_t<sp/>*)kva,<sp/>&amp;data[offset],<sp/>length);</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ret;</highlight></codeline>
<codeline lineno="1392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fs_8c_1a1dd9fbbb6f39b66c936d6a283481149f" kindref="member">sys_munmap</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*addr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight><highlight class="comment">//<sp/>int<sp/>fs_start_sec<sp/>=<sp/>114514;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight><highlight class="comment">//<sp/>int<sp/>magic_number<sp/>=<sp/>0x114514;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight><highlight class="comment">//<sp/>int<sp/>sb_sec_offset<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight><highlight class="comment">//<sp/>int<sp/>sb2_sec_offset<sp/>=<sp/>1024<sp/>*<sp/>1024<sp/>+<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"></highlight><highlight class="comment">//<sp/>uint64_t<sp/>iab_map_addr_offset<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight><highlight class="comment">//<sp/>uint64_t<sp/>sec_map_addr_offset<sp/>=<sp/>512;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight><highlight class="comment">//<sp/>uint64_t<sp/>iab_map_addr_size<sp/>=<sp/>257<sp/>*<sp/>512;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"></highlight><highlight class="comment">//<sp/>uint64_t<sp/>inode_addr_offset<sp/>=<sp/>258<sp/>*<sp/>512;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight><highlight class="comment">//<sp/>uint64_t<sp/>dir_addr_offset<sp/>=<sp/>770<sp/>*<sp/>512;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight><highlight class="comment">//<sp/>uint64_t<sp/>dir2_addr_offset<sp/>=<sp/>778<sp/>*<sp/>512;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight><highlight class="comment">//<sp/>uint64_t<sp/>dir3_addr_offset<sp/>=<sp/>786<sp/>*<sp/>512;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight><highlight class="comment">//<sp/>uint64_t<sp/>dir4_addr_offset<sp/>=<sp/>794<sp/>*<sp/>512;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight><highlight class="comment">//<sp/>uint64_t<sp/>data_addr_offset<sp/>=<sp/>802<sp/>*<sp/>512;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight><highlight class="comment">//<sp/>uint64_t<sp/>empty_block<sp/>=<sp/>FS_KERNEL_ADDR<sp/>-<sp/>0x2000;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight><highlight class="comment">//<sp/>inode_t<sp/>nowinode;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight><highlight class="comment">//<sp/>int<sp/>nowinodeid;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight><highlight class="comment">//<sp/>fentry_t<sp/>fd[20];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight><highlight class="comment">//<sp/>int<sp/>nowfid<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight><highlight class="comment">//<sp/>int<sp/>freefid[20];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"></highlight><highlight class="comment">//<sp/>int<sp/>freenum<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[FUNCTION<sp/>REQUIREMENTS]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="fs_8c_1ac7c5c9e629cd40cf7f3ab374962d2610" kindref="member">fs_check_file_existence</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)<sp/>{</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1425"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/fs/fs.c"/>
  </compounddef>
</doxygen>
