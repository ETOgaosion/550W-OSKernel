<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="zh">
  <compounddef id="string_8h" kind="file" language="C++">
    <compoundname>string.h</compoundname>
    <includes refid="types_8h" local="no">common/types.h</includes>
    <includedby refid="stack_8c" local="no">src/arch/riscv/kernel/init/stack.c</includedby>
    <includedby refid="screen_8c" local="no">src/drivers/screen/screen.c</includedby>
    <includedby refid="virtio__blk_8c" local="no">src/drivers/virtio/virtio_blk.c</includedby>
    <includedby refid="file_8h" local="no">src/fs/file.h</includedby>
    <includedby refid="fs_8c" local="no">src/fs/fs.c</includedby>
    <includedby refid="elf_8h" local="no">src/include/common/elf.h</includedby>
    <includedby refid="lock_8c" local="no">src/kernel/sync/lock.c</includedby>
    <includedby refid="sync_8c" local="no">src/kernel/sync/sync.c</includedby>
    <includedby refid="info_8c" local="no">src/kernel/sys/info.c</includedby>
    <includedby refid="pcb_8c" local="no">src/kernel/sys/pcb.c</includedby>
    <includedby refid="string_8c" local="no">src/lib/string.c</includedby>
    <incdepgraph>
      <node id="3">
        <label>common/errno.h</label>
        <link refid="errno_8h"/>
      </node>
      <node id="2">
        <label>common/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/include/lib/string.h</label>
        <link refid="string_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7">
        <label>src/fs/fs.c</label>
        <link refid="fs_8c"/>
      </node>
      <node id="23">
        <label>src/kernel/sync/lock.c</label>
        <link refid="lock_8c"/>
      </node>
      <node id="19">
        <label>src/drivers/plic/plic.c</label>
        <link refid="plic_8c"/>
      </node>
      <node id="15">
        <label>src/kernel/sys/smp.c</label>
        <link refid="smp_8c"/>
      </node>
      <node id="3">
        <label>src/drivers/screen/screen.c</label>
        <link refid="screen_8c"/>
      </node>
      <node id="9">
        <label>src/include/common/elf.h</label>
        <link refid="elf_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>src/lib/printk.c</label>
        <link refid="printk_8c"/>
      </node>
      <node id="24">
        <label>src/kernel/sync/sync.c</label>
        <link refid="sync_8c"/>
      </node>
      <node id="27">
        <label>src/kernel/sys/info.c</label>
        <link refid="info_8c"/>
      </node>
      <node id="12">
        <label>src/kernel/sys/pcb.c</label>
        <link refid="pcb_8c"/>
      </node>
      <node id="22">
        <label>src/include/os/syscall.h</label>
        <link refid="include_2os_2syscall_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>src/kernel/sys/time.c</label>
        <link refid="time_8c"/>
      </node>
      <node id="8">
        <label>src/init/main.c</label>
        <link refid="main_8c"/>
      </node>
      <node id="14">
        <label>src/kernel/irq/irq.c</label>
        <link refid="irq_8c"/>
      </node>
      <node id="13">
        <label>src/include/os/irq.h</label>
        <link refid="irq_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>src/kernel/mm/mm.c</label>
        <link refid="mm_8c"/>
      </node>
      <node id="25">
        <label>src/init/vm.c</label>
        <link refid="init_2vm_8c"/>
      </node>
      <node id="26">
        <label>src/lib/elf.c</label>
        <link refid="elf_8c"/>
      </node>
      <node id="18">
        <label>src/arch/riscv/sbi/io.c</label>
        <link refid="io_8c"/>
      </node>
      <node id="17">
        <label>src/include/os/smp.h</label>
        <link refid="smp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/drivers/virtio/virtio_blk.c</label>
        <link refid="virtio__blk_8c"/>
      </node>
      <node id="11">
        <label>src/arch/riscv/include/asm/stack.h</label>
        <link refid="stack_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/include/lib/string.h</label>
        <link refid="string_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>src/lib/string.c</label>
        <link refid="string_8c"/>
      </node>
      <node id="10">
        <label>src/include/os/pcb.h</label>
        <link refid="pcb_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>src/fs/fd.c</label>
        <link refid="fd_8c"/>
      </node>
      <node id="5">
        <label>src/fs/file.h</label>
        <link refid="file_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/arch/riscv/kernel/init/stack.c</label>
        <link refid="stack_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="string_8h_1ac03af82466c30fadbb52b0bd96cd26f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_isspace</definition>
        <argsstring>(int c)</argsstring>
        <name>k_isspace</name>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/lib/string.h" line="5" column="5" bodyfile="src/lib/string.c" bodystart="9" bodyend="11" declfile="src/include/lib/string.h" declline="5" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1a0eea1897991c4fe22521d22db09c4c56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_isdigit</definition>
        <argsstring>(int c)</argsstring>
        <name>k_isdigit</name>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/lib/string.h" line="6" column="5" bodyfile="src/lib/string.c" bodystart="13" bodyend="15" declfile="src/include/lib/string.h" declline="6" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1acacfcfff91441c7553fbc5bc30821a05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_isalpha</definition>
        <argsstring>(int x)</argsstring>
        <name>k_isalpha</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/lib/string.h" line="7" column="5" bodyfile="src/lib/string.c" bodystart="17" bodyend="23" declfile="src/include/lib/string.h" declline="7" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1a0cf23537c31602e7a3a60f3d9fdd2c1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_isupper</definition>
        <argsstring>(int x)</argsstring>
        <name>k_isupper</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/lib/string.h" line="8" column="5" bodyfile="src/lib/string.c" bodystart="25" bodyend="30" declfile="src/include/lib/string.h" declline="8" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1a3c3dfa8b99c16c1c0654bc24597bb0da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long k_atol</definition>
        <argsstring>(const char *str)</argsstring>
        <name>k_atol</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/lib/string.h" line="10" column="6" bodyfile="src/lib/string.c" bodystart="32" bodyend="56" declfile="src/include/lib/string.h" declline="10" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1a5101d780842a59c3f03743ced7f46c66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_atoi</definition>
        <argsstring>(const char *s)</argsstring>
        <name>k_atoi</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/lib/string.h" line="11" column="5" bodyfile="src/lib/string.c" bodystart="58" bodyend="74" declfile="src/include/lib/string.h" declline="11" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1a4985196d8a63d22e320cf33d904d2f92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void k_memcpy</definition>
        <argsstring>(uint8_t *dest, const uint8_t *src, uint32_t len)</argsstring>
        <name>k_memcpy</name>
        <param>
          <type>uint8_t *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/lib/string.h" line="13" column="6" bodyfile="src/lib/string.c" bodystart="76" bodyend="80" declfile="src/include/lib/string.h" declline="13" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1aaf442a6d4665859606fb0376506a349c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void k_memset</definition>
        <argsstring>(void *dest, uint8_t val, uint32_t len)</argsstring>
        <name>k_memset</name>
        <param>
          <type>void *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>val</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/lib/string.h" line="14" column="6" bodyfile="src/lib/string.c" bodystart="82" bodyend="88" declfile="src/include/lib/string.h" declline="14" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1aeda98d87407f4e928e8c47a2e7de1e94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void k_bzero</definition>
        <argsstring>(void *dest, uint32_t len)</argsstring>
        <name>k_bzero</name>
        <param>
          <type>void *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/lib/string.h" line="15" column="6" bodyfile="src/lib/string.c" bodystart="90" bodyend="92" declfile="src/include/lib/string.h" declline="15" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1ad3fbffdca65397cb78cd0d3d38f7758f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_strcmp</definition>
        <argsstring>(const char *str1, const char *str2)</argsstring>
        <name>k_strcmp</name>
        <param>
          <type>const char *</type>
          <declname>str1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/lib/string.h" line="17" column="5" bodyfile="src/lib/string.c" bodystart="94" bodyend="103" declfile="src/include/lib/string.h" declline="17" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1ab247ff09c9f6dc2e9a0b645a4e8ca6d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_strncmp</definition>
        <argsstring>(const char *_l, const char *_r, size_t n)</argsstring>
        <name>k_strncmp</name>
        <param>
          <type>const char *</type>
          <declname>_l</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>_r</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1afeaa5ef46acd844422607ca6602691ef" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/lib/string.h" line="18" column="5" bodyfile="src/lib/string.c" bodystart="105" bodyend="113" declfile="src/include/lib/string.h" declline="18" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1a36d0589c17e8a5bba8c6e569ea0109f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* k_strcpy</definition>
        <argsstring>(char *dest, const char *src)</argsstring>
        <name>k_strcpy</name>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/lib/string.h" line="19" column="6" bodyfile="src/lib/string.c" bodystart="115" bodyend="125" declfile="src/include/lib/string.h" declline="19" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1a17a4290b9c58dce19468efb2139a5fb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* k_strncpy</definition>
        <argsstring>(char *restrict d, const char *restrict s, size_t n)</argsstring>
        <name>k_strncpy</name>
        <param>
          <type>char *restrict</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const char *restrict</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1afeaa5ef46acd844422607ca6602691ef" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/lib/string.h" line="20" column="6" declfile="src/include/lib/string.h" declline="20" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1a3ffa6c0492a0ff6b656c748a32e1bfcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* k_strcat</definition>
        <argsstring>(char *dest, const char *src)</argsstring>
        <name>k_strcat</name>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/lib/string.h" line="21" column="6" bodyfile="src/lib/string.c" bodystart="152" bodyend="165" declfile="src/include/lib/string.h" declline="21" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1ae096c40164c6e072e600751bd7151fb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_strlen</definition>
        <argsstring>(const char *src)</argsstring>
        <name>k_strlen</name>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/lib/string.h" line="22" column="5" bodyfile="src/lib/string.c" bodystart="167" bodyend="171" declfile="src/include/lib/string.h" declline="22" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1aa8a53745ab243c018da1ae7a41a5d0f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8h_1afeaa5ef46acd844422607ca6602691ef" kindref="member">size_t</ref></type>
        <definition>size_t k_strnlen</definition>
        <argsstring>(const char *s, size_t n)</argsstring>
        <name>k_strnlen</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1afeaa5ef46acd844422607ca6602691ef" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/lib/string.h" line="23" column="8" bodyfile="src/lib/string.c" bodystart="191" bodyend="194" declfile="src/include/lib/string.h" declline="23" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1aac6baff2271e498b362a65320c5d5941" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_strlistlen</definition>
        <argsstring>(char *src[])</argsstring>
        <name>k_strlistlen</name>
        <param>
          <type>char *</type>
          <declname>src</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/lib/string.h" line="24" column="5" bodyfile="src/lib/string.c" bodystart="196" bodyend="204" declfile="src/include/lib/string.h" declline="24" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1a3010e3dc6dc13be23b7dbe36284327e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* k_strtok</definition>
        <argsstring>(char *substr, char *str, const char delim, int length)</argsstring>
        <name>k_strtok</name>
        <param>
          <type>char *</type>
          <declname>substr</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char</type>
          <declname>delim</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/lib/string.h" line="25" column="6" bodyfile="src/lib/string.c" bodystart="206" bodyend="223" declfile="src/include/lib/string.h" declline="25" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1ac7732068bb0c32e1cde3cb29191335ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long k_strtol</definition>
        <argsstring>(const char *nptr, char **endptr, register int base)</argsstring>
        <name>k_strtol</name>
        <param>
          <type>const char *</type>
          <declname>nptr</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>endptr</declname>
        </param>
        <param>
          <type>register int</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/lib/string.h" line="26" column="6" bodyfile="src/lib/string.c" bodystart="235" bodyend="289" declfile="src/include/lib/string.h" declline="26" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="types_8h" kindref="compound">common/types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="string_8h_1ac03af82466c30fadbb52b0bd96cd26f3" kindref="member">k_isspace</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="string_8h_1a0eea1897991c4fe22521d22db09c4c56" kindref="member">k_isdigit</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="string_8h_1acacfcfff91441c7553fbc5bc30821a05" kindref="member">k_isalpha</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x);</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="string_8h_1a0cf23537c31602e7a3a60f3d9fdd2c1b" kindref="member">k_isupper</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="string_8h_1a3c3dfa8b99c16c1c0654bc24597bb0da" kindref="member">k_atol</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="string_8h_1a5101d780842a59c3f03743ced7f46c66" kindref="member">k_atoi</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="string_8h_1a4985196d8a63d22e320cf33d904d2f92" kindref="member">k_memcpy</ref>(uint8_t<sp/>*dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*src,<sp/>uint32_t<sp/>len);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="string_8h_1aaf442a6d4665859606fb0376506a349c" kindref="member">k_memset</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dest,<sp/>uint8_t<sp/>val,<sp/>uint32_t<sp/>len);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="string_8h_1aeda98d87407f4e928e8c47a2e7de1e94" kindref="member">k_bzero</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dest,<sp/>uint32_t<sp/>len);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="string_8h_1ad3fbffdca65397cb78cd0d3d38f7758f" kindref="member">k_strcmp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str2);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="string_8h_1ab247ff09c9f6dc2e9a0b645a4e8ca6d7" kindref="member">k_strncmp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_l,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_r,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="string_8h_1a36d0589c17e8a5bba8c6e569ea0109f5" kindref="member">k_strcpy</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src);</highlight></codeline>
<codeline lineno="20" refid="string_8h_1a17a4290b9c58dce19468efb2139a5fb8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="string_8h_1a17a4290b9c58dce19468efb2139a5fb8" kindref="member">k_strncpy</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*restrict<sp/>d,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*restrict<sp/>s,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="string_8h_1a3ffa6c0492a0ff6b656c748a32e1bfcf" kindref="member">k_strcat</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="string_8h_1ae096c40164c6e072e600751bd7151fb9" kindref="member">k_strlen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="string_8h_1aa8a53745ab243c018da1ae7a41a5d0f9" kindref="member">k_strnlen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="string_8h_1aac6baff2271e498b362a65320c5d5941" kindref="member">k_strlistlen</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src[]);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="string_8h_1a3010e3dc6dc13be23b7dbe36284327e5" kindref="member">k_strtok</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*substr,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>delim,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="string_8h_1ac7732068bb0c32e1cde3cb29191335ba" kindref="member">k_strtol</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*nptr,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**endptr,<sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base);</highlight></codeline>
    </programlisting>
    <location file="src/include/lib/string.h"/>
  </compounddef>
</doxygen>
