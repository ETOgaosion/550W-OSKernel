<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="zh">
  <compounddef id="virtio__blk_8c" kind="file" language="C++">
    <compoundname>virtio_blk.c</compoundname>
    <includes refid="screen_8h" local="no">drivers/screen/screen.h</includes>
    <includes refid="virtio_8h" local="no">drivers/virtio/virtio.h</includes>
    <includes refid="assert_8h" local="no">lib/assert.h</includes>
    <includes refid="string_8h" local="no">lib/string.h</includes>
    <includes refid="ioremap_8h" local="no">os/ioremap.h</includes>
    <includes refid="irq_8h" local="no">os/irq.h</includes>
    <includes refid="mm_8h" local="no">os/mm.h</includes>
    <includes refid="pcb_8h" local="no">os/pcb.h</includes>
    <includes refid="smp_8h" local="no">os/smp.h</includes>
    <incdepgraph>
      <node id="4">
        <label>asm/pgtable.h</label>
        <link refid="pgtable_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>os/mm.h</label>
        <link refid="mm_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>drivers/screen/screen.h</label>
        <link refid="screen_8h"/>
      </node>
      <node id="12">
        <label>lib/stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>common/elf.h</label>
        <link refid="elf_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>common/errno.h</label>
        <link refid="errno_8h"/>
      </node>
      <node id="3">
        <label>drivers/virtio/virtio.h</label>
        <link refid="virtio_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>os/cpu.h</label>
        <link refid="cpu_8h"/>
      </node>
      <node id="23">
        <label>os/time.h</label>
        <link refid="time_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>asm/context.h</label>
        <link refid="context_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>os/irq.h</label>
        <link refid="irq_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>asm/sbidef.h</label>
        <link refid="sbidef_8h"/>
      </node>
      <node id="7">
        <label>common/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>os/smp.h</label>
        <link refid="smp_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/drivers/virtio/virtio_blk.c</label>
        <link refid="virtio__blk_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>lib/string.h</label>
        <link refid="string_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>asm/sbi.h</label>
        <link refid="sbi_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>os/pcb.h</label>
        <link refid="pcb_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>os/ioremap.h</label>
        <link refid="ioremap_8h"/>
      </node>
      <node id="9">
        <label>os/lock.h</label>
        <link refid="lock_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>lib/stdarg.h</label>
        <link refid="stdarg_8h"/>
      </node>
      <node id="22">
        <label>os/sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>lib/assert.h</label>
        <link refid="assert_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>lib/list.h</label>
        <link refid="list_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="virtio__blk_8c_1a63f4138a272db1e1892f31c0f2473301" prot="public" static="no" mutable="no">
        <type><ref refid="lock_8h_1a78e3055bd891f045188756c613a5ad92" kindref="member">spin_lock_t</ref></type>
        <definition>spin_lock_t lock</definition>
        <argsstring></argsstring>
        <name>lock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drivers/virtio/virtio_blk.c" line="209" column="17" bodyfile="src/drivers/virtio/virtio_blk.c" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="virtio__blk_8c_1a2841fd18a733a1bc41ab17873c8aab74" prot="public" static="no" mutable="no">
        <type><ref refid="virtio_8h_1abeec8e43c27af535cdc9eecf74feec14" kindref="member">buf_t</ref></type>
        <definition>buf_t buf[NBUF]</definition>
        <argsstring>[NBUF]</argsstring>
        <name>buf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drivers/virtio/virtio_blk.c" line="210" column="11" bodyfile="src/drivers/virtio/virtio_blk.c" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="virtio__blk_8c_1a2f3fce4bb758d0ed4c15a3ea8faac3ae" prot="public" static="no" mutable="no">
        <type><ref refid="virtio_8h_1abeec8e43c27af535cdc9eecf74feec14" kindref="member">buf_t</ref></type>
        <definition>buf_t head</definition>
        <argsstring></argsstring>
        <name>head</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drivers/virtio/virtio_blk.c" line="215" column="11" bodyfile="src/drivers/virtio/virtio_blk.c" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="virtio__blk_8c_1a484cc4a6a6fe40f324eaab3f87b0c74e" prot="public" static="no" mutable="no">
        <type>struct @1</type>
        <definition>struct @1 bcache</definition>
        <argsstring></argsstring>
        <name>bcache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drivers/virtio/virtio_blk.c" line="216" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="virtio__blk_8c_1a363dd90d7728cc25a788786c6703a162" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="virtio_8h_1a8d653a4500a141fdb698c92dab13cab6" kindref="member">disk_t</ref></type>
        <definition>disk_t __attribute__</definition>
        <argsstring>((aligned(NORMAL_PAGE_SIZE)))</argsstring>
        <name>__attribute__</name>
        <param>
          <type>(aligned(<ref refid="pgtable_8h_1a4d79b19c57b121d211b145092347ae82" kindref="member">NORMAL_PAGE_SIZE</ref>))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drivers/virtio/virtio_blk.c" line="11" column="8" bodyfile="src/drivers/virtio/virtio_blk.c" bodystart="11" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="virtio__blk_8c_1a68ab0a3df2b532b21d556685eb663864" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int alloc_desc</definition>
        <argsstring>()</argsstring>
        <name>alloc_desc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drivers/virtio/virtio_blk.c" line="76" column="12" bodyfile="src/drivers/virtio/virtio_blk.c" bodystart="76" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="virtio__blk_8c_1a7309d78ad991d2e097e13d91d085771a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void free_desc</definition>
        <argsstring>(int i)</argsstring>
        <name>free_desc</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drivers/virtio/virtio_blk.c" line="87" column="13" bodyfile="src/drivers/virtio/virtio_blk.c" bodystart="87" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="virtio__blk_8c_1ad1f207361918cae4f211d8ff8543ffba" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void free_chain</definition>
        <argsstring>(int i)</argsstring>
        <name>free_chain</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drivers/virtio/virtio_blk.c" line="94" column="13" bodyfile="src/drivers/virtio/virtio_blk.c" bodystart="94" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="virtio__blk_8c_1a1ec2edfe03003d478868a1d3964118a8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int alloc3_desc</definition>
        <argsstring>(int *idx)</argsstring>
        <name>alloc3_desc</name>
        <param>
          <type>int *</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drivers/virtio/virtio_blk.c" line="105" column="12" bodyfile="src/drivers/virtio/virtio_blk.c" bodystart="105" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="virtio__blk_8c_1a9cc8ace726fbd2f55efe7bac40d4ee31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void d_virtio_disk_rw</definition>
        <argsstring>(buf_t *b, int write)</argsstring>
        <name>d_virtio_disk_rw</name>
        <param>
          <type><ref refid="virtio_8h_1abeec8e43c27af535cdc9eecf74feec14" kindref="member">buf_t</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int</type>
          <declname>write</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drivers/virtio/virtio_blk.c" line="118" column="6" bodyfile="src/drivers/virtio/virtio_blk.c" bodystart="118" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="virtio__blk_8c_1a8ddc08c99fd7de9077364679f3e88a1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void d_binit</definition>
        <argsstring>(void)</argsstring>
        <name>d_binit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drivers/virtio/virtio_blk.c" line="218" column="6" bodyfile="src/drivers/virtio/virtio_blk.c" bodystart="218" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="virtio__blk_8c_1a32fabd804fc8d195cb48ffd4e4227615" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="virtio_8h_1abeec8e43c27af535cdc9eecf74feec14" kindref="member">buf_t</ref> *</type>
        <definition>static buf_t* bget</definition>
        <argsstring>(uint dev, uint sectorno)</argsstring>
        <name>bget</name>
        <param>
          <type><ref refid="types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>sectorno</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drivers/virtio/virtio_blk.c" line="241" column="14" bodyfile="src/drivers/virtio/virtio_blk.c" bodystart="241" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="virtio__blk_8c_1abbe29775b1e823f8656e762918301b19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="virtio_8h_1abeec8e43c27af535cdc9eecf74feec14" kindref="member">buf_t</ref> *</type>
        <definition>buf_t* d_bread</definition>
        <argsstring>(uint dev, uint sectorno)</argsstring>
        <name>d_bread</name>
        <param>
          <type><ref refid="types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>sectorno</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drivers/virtio/virtio_blk.c" line="274" column="7" bodyfile="src/drivers/virtio/virtio_blk.c" bodystart="274" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="virtio__blk_8c_1ab30ee70ddb637afdcdcc27c5c1186601" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void d_bwrite</definition>
        <argsstring>(buf_t *b)</argsstring>
        <name>d_bwrite</name>
        <param>
          <type><ref refid="virtio_8h_1abeec8e43c27af535cdc9eecf74feec14" kindref="member">buf_t</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drivers/virtio/virtio_blk.c" line="287" column="6" bodyfile="src/drivers/virtio/virtio_blk.c" bodystart="287" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="virtio__blk_8c_1a4e86b21b9d263f9fc0237363e4538858" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void d_brelse</definition>
        <argsstring>(buf_t *b)</argsstring>
        <name>d_brelse</name>
        <param>
          <type><ref refid="virtio_8h_1abeec8e43c27af535cdc9eecf74feec14" kindref="member">buf_t</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drivers/virtio/virtio_blk.c" line="296" column="6" bodyfile="src/drivers/virtio/virtio_blk.c" bodystart="296" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="virtio__blk_8c_1abbc4ceecde1af6b734b07cb37714f926" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bpin</definition>
        <argsstring>(buf_t *b)</argsstring>
        <name>bpin</name>
        <param>
          <type><ref refid="virtio_8h_1abeec8e43c27af535cdc9eecf74feec14" kindref="member">buf_t</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drivers/virtio/virtio_blk.c" line="318" column="6" bodyfile="src/drivers/virtio/virtio_blk.c" bodystart="318" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="virtio__blk_8c_1a4511e8aa57fd419643e35fa073c0c299" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bunpin</definition>
        <argsstring>(buf_t *b)</argsstring>
        <name>bunpin</name>
        <param>
          <type><ref refid="virtio_8h_1abeec8e43c27af535cdc9eecf74feec14" kindref="member">buf_t</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drivers/virtio/virtio_blk.c" line="324" column="6" bodyfile="src/drivers/virtio/virtio_blk.c" bodystart="324" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="virtio__blk_8c_1ab7173e75b343137611ed74ed0278e3ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void d_sd_read</definition>
        <argsstring>(char *buffers, uint *start_block_ids, uint block_num)</argsstring>
        <name>d_sd_read</name>
        <param>
          <type>char *</type>
          <declname>buffers</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref> *</type>
          <declname>start_block_ids</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>block_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drivers/virtio/virtio_blk.c" line="330" column="6" bodyfile="src/drivers/virtio/virtio_blk.c" bodystart="330" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="virtio__blk_8c_1a3ba8dbd5d9de7f8bb698576b733f17c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void d_sd_write</definition>
        <argsstring>(char *buffers, uint *start_block_ids, uint block_num)</argsstring>
        <name>d_sd_write</name>
        <param>
          <type>char *</type>
          <declname>buffers</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref> *</type>
          <declname>start_block_ids</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>block_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drivers/virtio/virtio_blk.c" line="339" column="6" bodyfile="src/drivers/virtio/virtio_blk.c" bodystart="339" bodyend="347"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="screen_8h" kindref="compound">drivers/screen/screen.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="virtio_8h" kindref="compound">drivers/virtio/virtio.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="assert_8h" kindref="compound">lib/assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="string_8h" kindref="compound">lib/string.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ioremap_8h" kindref="compound">os/ioremap.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="irq_8h" kindref="compound">os/irq.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="mm_8h" kindref="compound">os/mm.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="pcb_8h" kindref="compound">os/pcb.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="smp_8h" kindref="compound">os/smp.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><ref refid="structdisk" kindref="compound">disk_t</ref><sp/><ref refid="virtio__blk_8c_1a363dd90d7728cc25a788786c6703a162" kindref="member">__attribute__</ref>((aligned(<ref refid="pgtable_8h_1a4d79b19c57b121d211b145092347ae82" kindref="member">NORMAL_PAGE_SIZE</ref>)))<sp/><ref refid="virtio_8h_1affcceda12b139f26819f4929be705eb1" kindref="member">disk</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><ref refid="types_8h_1ad6cb5da84246290b3d730166b020f2a8" kindref="member">uintptr_t</ref><sp/><ref refid="virtio_8h_1a149d1d589a8c46a58ed3709179dacd09" kindref="member">virtio_base</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="virtio_8h_1af424e92b7261894dfbedb1a74cd058b2" kindref="member">d_virtio_disk_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="virtio_8h_1a149d1d589a8c46a58ed3709179dacd09" kindref="member">virtio_base</ref><sp/>=<sp/>(<ref refid="types_8h_1ad6cb5da84246290b3d730166b020f2a8" kindref="member">uintptr_t</ref>)<ref refid="ioremap_8h_1a9ca808bb834ec9c82192df44ae9d8d2b" kindref="member">k_ioremap</ref>((uint64_t)<ref refid="virtio_8h_1aac8de2a0393367154119c25e2b279953" kindref="member">VIRTIO0</ref>,<sp/>0x4000<sp/>*<sp/><ref refid="pgtable_8h_1a4d79b19c57b121d211b145092347ae82" kindref="member">NORMAL_PAGE_SIZE</ref>);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref><sp/>status<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lock_8h_1a5ecc66db27d505944136e8cb400d30f9" kindref="member">k_spin_lock_init</ref>(&amp;<ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a68fda05cc6273072a123fddf6a69ae7a" kindref="member">vdisk_lock</ref>);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="virtio_8h_1a80e6faf1cf09d43dab325b4fd98cddfd" kindref="member">R</ref>(<ref refid="virtio_8h_1adbc4f6c0d30c76a45fdc2dabe4cd2cbb" kindref="member">VIRTIO_MMIO_MAGIC_VALUE</ref>)<sp/>!=<sp/><ref refid="virtio_8h_1a1ff87be27fd6ca3d1bd9190864fdf3a5" kindref="member">VIRTIO_MAGIC</ref><sp/>||<sp/>*<ref refid="virtio_8h_1a80e6faf1cf09d43dab325b4fd98cddfd" kindref="member">R</ref>(<ref refid="virtio_8h_1ab3b8d6bd5655e57baf01447384883076" kindref="member">VIRTIO_MMIO_VERSION</ref>)<sp/>!=<sp/><ref refid="virtio_8h_1a854926a03de057048cd2bb6711b3cac0" kindref="member">VIRTIO_VERSION</ref><sp/>||<sp/>*<ref refid="virtio_8h_1a80e6faf1cf09d43dab325b4fd98cddfd" kindref="member">R</ref>(<ref refid="virtio_8h_1a843ffa98e22c96b9f33a0f4eb37a00cb" kindref="member">VIRTIO_MMIO_DEVICE_ID</ref>)<sp/>!=<sp/><ref refid="virtio_8h_1a522b8a7ec068da7590967e4bb211cba6" kindref="member">VIRTIO_DEVICE_ID_BLK</ref><sp/>||<sp/>*<ref refid="virtio_8h_1a80e6faf1cf09d43dab325b4fd98cddfd" kindref="member">R</ref>(<ref refid="virtio_8h_1ae24a27c9de546c99f70992f060e4ce99" kindref="member">VIRTIO_MMIO_VENDOR_ID</ref>)<sp/>!=<sp/><ref refid="virtio_8h_1a4ec945bee3dc37c6fd22962eaed5ef68" kindref="member">VIRTIO_VENDOR_ID_QEMU</ref>)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>panic(</highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>find<sp/>virtio<sp/>disk&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="virtio_8h_1a9a057904115e16c67c5adc2c97d69746" kindref="member">VIRTIO_CONFIG_S_ACKNOWLEDGE</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="virtio_8h_1a80e6faf1cf09d43dab325b4fd98cddfd" kindref="member">R</ref>(<ref refid="virtio_8h_1a93ae0e8556428cc98d2f964eb82d3aec" kindref="member">VIRTIO_MMIO_STATUS</ref>)<sp/>=<sp/>status;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="virtio_8h_1a02ec5c45d255a19824d61050d9925b39" kindref="member">VIRTIO_CONFIG_S_DRIVER</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="virtio_8h_1a80e6faf1cf09d43dab325b4fd98cddfd" kindref="member">R</ref>(<ref refid="virtio_8h_1a93ae0e8556428cc98d2f964eb82d3aec" kindref="member">VIRTIO_MMIO_STATUS</ref>)<sp/>=<sp/>status;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>negotiate<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1a29940ae63ec06c9998bba873e25407ad" kindref="member">uint64</ref><sp/>features<sp/>=<sp/>*<ref refid="virtio_8h_1a80e6faf1cf09d43dab325b4fd98cddfd" kindref="member">R</ref>(<ref refid="virtio_8h_1a5dd01aeb9c7de8d00b86814e1df075c1" kindref="member">VIRTIO_MMIO_DEVICE_FEATURES</ref>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>features<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/><ref refid="virtio_8h_1aa24486e8dd96dd86c415ad6e04221424" kindref="member">VIRTIO_BLK_F_RO</ref>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>features<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/><ref refid="virtio_8h_1aad7c44284dc8173499943e3402de5b1b" kindref="member">VIRTIO_BLK_F_SCSI</ref>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>features<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/><ref refid="virtio_8h_1a6064eb12c03012a30c0a5082b4fba3e4" kindref="member">VIRTIO_BLK_F_CONFIG_WCE</ref>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>features<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/><ref refid="virtio_8h_1a825eaa1d195818dc1c2cc9796363d148" kindref="member">VIRTIO_BLK_F_MQ</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>features<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/><ref refid="virtio_8h_1aa32be3266e0b2ded01f1609380cff620" kindref="member">VIRTIO_F_ANY_LAYOUT</ref>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>features<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/><ref refid="virtio_8h_1abaad7d994ac1bb57a3bd2d058cff5c7a" kindref="member">VIRTIO_RING_F_EVENT_IDX</ref>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>features<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/><ref refid="virtio_8h_1ab01a363ce20422c5d9065269fbf3eccf" kindref="member">VIRTIO_RING_F_INDIRECT_DESC</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="virtio_8h_1a80e6faf1cf09d43dab325b4fd98cddfd" kindref="member">R</ref>(<ref refid="virtio_8h_1a9cf63c483bba3f905802d27bdef1c405" kindref="member">VIRTIO_MMIO_DRIVER_FEATURES</ref>)<sp/>=<sp/>features;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tell<sp/>device<sp/>that<sp/>feature<sp/>negotiation<sp/>is<sp/>complete.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="virtio_8h_1a5c8cf2858a304245299ce50835b47291" kindref="member">VIRTIO_CONFIG_S_FEATURES_OK</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="virtio_8h_1a80e6faf1cf09d43dab325b4fd98cddfd" kindref="member">R</ref>(<ref refid="virtio_8h_1a93ae0e8556428cc98d2f964eb82d3aec" kindref="member">VIRTIO_MMIO_STATUS</ref>)<sp/>=<sp/>status;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tell<sp/>device<sp/>we&apos;re<sp/>completely<sp/>ready.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="virtio_8h_1afc68bf23eb9cda196e0fab18f89aa3e1" kindref="member">VIRTIO_CONFIG_S_DRIVER_OK</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="virtio_8h_1a80e6faf1cf09d43dab325b4fd98cddfd" kindref="member">R</ref>(<ref refid="virtio_8h_1a93ae0e8556428cc98d2f964eb82d3aec" kindref="member">VIRTIO_MMIO_STATUS</ref>)<sp/>=<sp/>status;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="virtio_8h_1a80e6faf1cf09d43dab325b4fd98cddfd" kindref="member">R</ref>(<ref refid="virtio_8h_1ac38064f45b6ee9dde59197cd6aeaf5ef" kindref="member">VIRTIO_MMIO_GUEST_PAGE_SIZE</ref>)<sp/>=<sp/><ref refid="pgtable_8h_1a4d79b19c57b121d211b145092347ae82" kindref="member">NORMAL_PAGE_SIZE</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>queue<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="virtio_8h_1a80e6faf1cf09d43dab325b4fd98cddfd" kindref="member">R</ref>(<ref refid="virtio_8h_1af06acc888e4338d9d286199d9f005380" kindref="member">VIRTIO_MMIO_QUEUE_SEL</ref>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref><sp/><ref refid="fat32_8h_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref><sp/>=<sp/>*<ref refid="virtio_8h_1a80e6faf1cf09d43dab325b4fd98cddfd" kindref="member">R</ref>(<ref refid="virtio_8h_1a017f59f133403156d7443bf5a28a3ceb" kindref="member">VIRTIO_MMIO_QUEUE_NUM_MAX</ref>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fat32_8h_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>panic(</highlight><highlight class="stringliteral">&quot;virtio<sp/>disk<sp/>has<sp/>no<sp/>queue<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fat32_8h_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref><sp/>&lt;<sp/><ref refid="virtio_8h_1a426aa6e3c35dfb88e15948652c6ebfc6" kindref="member">DESC_NUM</ref>)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>panic(</highlight><highlight class="stringliteral">&quot;virtio<sp/>disk<sp/>max<sp/>queue<sp/>too<sp/>short&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="virtio_8h_1a80e6faf1cf09d43dab325b4fd98cddfd" kindref="member">R</ref>(<ref refid="virtio_8h_1ac04653c6ac4c886e5f08f0b292f66d1c" kindref="member">VIRTIO_MMIO_QUEUE_NUM</ref>)<sp/>=<sp/><ref refid="virtio_8h_1a426aa6e3c35dfb88e15948652c6ebfc6" kindref="member">DESC_NUM</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="string_8h_1aaf442a6d4665859606fb0376506a349c" kindref="member">k_memset</ref>(<ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a6d4c7ff9bc8353d450030cd8e48f9cec" kindref="member">pages</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a6d4c7ff9bc8353d450030cd8e48f9cec" kindref="member">pages</ref>));</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="virtio_8h_1a80e6faf1cf09d43dab325b4fd98cddfd" kindref="member">R</ref>(<ref refid="virtio_8h_1ad4da01927cf7b7e634817688bd6863a5" kindref="member">VIRTIO_MMIO_QUEUE_PFN</ref>)<sp/>=<sp/>((<ref refid="types_8h_1a29940ae63ec06c9998bba873e25407ad" kindref="member">uint64</ref>)<ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a6d4c7ff9bc8353d450030cd8e48f9cec" kindref="member">pages</ref>)<sp/>&gt;&gt;<sp/><ref refid="pgtable_8h_1a7fe96413b980b8b6c52da8ebb14154e8" kindref="member">NORMAL_PAGE_SHIFT</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a7b2400d9c769854a3efed9b5b65839db" kindref="member">desc</ref><sp/>=<sp/>(<ref refid="structvring__desc__t" kindref="compound">vring_desc_t</ref><sp/>*)<ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a6d4c7ff9bc8353d450030cd8e48f9cec" kindref="member">pages</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a2fed856c690d0ea756d79f944d49298b" kindref="member">avail</ref><sp/>=<sp/>(<ref refid="types_8h_1a05f6b0ae8f6a6e135b0e290c25fe0e4e" kindref="member">uint16</ref><sp/>*)(((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a7b2400d9c769854a3efed9b5b65839db" kindref="member">desc</ref>)<sp/>+<sp/><ref refid="virtio_8h_1a426aa6e3c35dfb88e15948652c6ebfc6" kindref="member">DESC_NUM</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="virtio_8h_1a6cf8c39ebd728b928a97e94adec87acb" kindref="member">vring_desc_t</ref>));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a058b2305d48e765acfa6119ae33b9744" kindref="member">used</ref><sp/>=<sp/>(<ref refid="structvring__used__area" kindref="compound">vring_used_area_t</ref><sp/>*)(<ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a6d4c7ff9bc8353d450030cd8e48f9cec" kindref="member">pages</ref><sp/>+<sp/><ref refid="pgtable_8h_1a4d79b19c57b121d211b145092347ae82" kindref="member">NORMAL_PAGE_SIZE</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="virtio_8h_1a426aa6e3c35dfb88e15948652c6ebfc6" kindref="member">DESC_NUM</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a3f5e4b09fa2f087160e09c1172ca0469" kindref="member">free</ref>[i]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>plic.c<sp/>and<sp/>trap.c<sp/>arrange<sp/>for<sp/>interrupts<sp/>from<sp/>VIRTIO0_IRQ.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>find<sp/>a<sp/>free<sp/>descriptor,<sp/>mark<sp/>it<sp/>non-free,<sp/>return<sp/>its<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>alloc_desc()<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="virtio_8h_1a426aa6e3c35dfb88e15948652c6ebfc6" kindref="member">DESC_NUM</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a3f5e4b09fa2f087160e09c1172ca0469" kindref="member">free</ref>[i])<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a3f5e4b09fa2f087160e09c1172ca0469" kindref="member">free</ref>[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>mark<sp/>a<sp/>descriptor<sp/>as<sp/>free.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>free_desc(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a7b2400d9c769854a3efed9b5b65839db" kindref="member">desc</ref>[i].<ref refid="structvring__desc__t_1af3b580bebd608778555c5c8ba43f1223" kindref="member">addr</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a3f5e4b09fa2f087160e09c1172ca0469" kindref="member">free</ref>[i]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pcb_8h_1a2d546871750b175deb1f3c0279c64e3f" kindref="member">k_pcb_wakeup</ref>(&amp;<ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a3f5e4b09fa2f087160e09c1172ca0469" kindref="member">free</ref>[0]);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/>free<sp/>a<sp/>chain<sp/>of<sp/>descriptors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>free_chain(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_desc(i);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a7b2400d9c769854a3efed9b5b65839db" kindref="member">desc</ref>[i].<ref refid="structvring__desc__t_1a0c1d8fa3e009abfbd010f4dde9470e07" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="virtio_8h_1ac98030127cfdd5b7e53a4756a38d3e28" kindref="member">VRING_DESC_F_NEXT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/><ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a7b2400d9c769854a3efed9b5b65839db" kindref="member">desc</ref>[i].<ref refid="structvring__desc__t_1acc506d763dd0c278697133eb6c81cf8c" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>alloc3_desc(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*idx)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx[i]<sp/>=<sp/>alloc_desc();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idx[i]<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>i;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_desc(idx[j]);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="virtio__blk_8c_1a9cc8ace726fbd2f55efe7bac40d4ee31" kindref="member">d_virtio_disk_rw</ref>(<ref refid="structbuf" kindref="compound">buf_t</ref><sp/>*b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>write)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1a29940ae63ec06c9998bba873e25407ad" kindref="member">uint64</ref><sp/>sector<sp/>=<sp/>b-&gt;<ref refid="structbuf_1a6e69224f6242650993c1e3f12d39b85d" kindref="member">sectorno</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lock_8h_1aa8b07da1c0d3b17f49429722404c9649" kindref="member">k_spin_lock_acquire</ref>(&amp;<ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a68fda05cc6273072a123fddf6a69ae7a" kindref="member">vdisk_lock</ref>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>spec<sp/>says<sp/>that<sp/>legacy<sp/>block<sp/>operations<sp/>use<sp/>three</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>descriptors:<sp/>one<sp/>for<sp/>type/reserved/sector,<sp/>one<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>data,<sp/>one<sp/>for<sp/>a<sp/>1-byte<sp/>status<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>the<sp/>three<sp/>descriptors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx[3];</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alloc3_desc(idx)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcb_8h_1a5111ec3b899498d5951050cd72bfe21b" kindref="member">k_pcb_sleep</ref>(&amp;<ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a3f5e4b09fa2f087160e09c1172ca0469" kindref="member">free</ref>[0],<sp/>&amp;<ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a68fda05cc6273072a123fddf6a69ae7a" kindref="member">vdisk_lock</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>format<sp/>the<sp/>three<sp/>descriptors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>qemu&apos;s<sp/>virtio-blk.c<sp/>reads<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">virtio_blk_outhdr<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref><sp/><ref refid="fat32_8h_1a1d127017fb298b889f4ba24752d08b8e" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref><sp/>reserved;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1a29940ae63ec06c9998bba873e25407ad" kindref="member">uint64</ref><sp/>sector;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>buf0;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(write)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf0.type<sp/>=<sp/><ref refid="virtio_8h_1a47e0526d29f30098a2f665fb9f4b6d1f" kindref="member">VIRTIO_BLK_T_OUT</ref>;<sp/></highlight><highlight class="comment">//<sp/>write<sp/>the<sp/>disk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf0.type<sp/>=<sp/><ref refid="virtio_8h_1a736c5cf3b8352bcec7c79ef42536a445" kindref="member">VIRTIO_BLK_T_IN</ref>;<sp/></highlight><highlight class="comment">//<sp/>read<sp/>the<sp/>disk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>buf0.reserved<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>buf0.sector<sp/>=<sp/>sector;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>buf0<sp/>is<sp/>on<sp/>a<sp/>kernel<sp/>stack,<sp/>which<sp/>is<sp/>not<sp/>direct<sp/>mapped,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>thus<sp/>the<sp/>call<sp/>to<sp/>kvmpa().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iskva((<ref refid="types_8h_1ad6cb5da84246290b3d730166b020f2a8" kindref="member">uintptr_t</ref>)&amp;buf0))<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a7b2400d9c769854a3efed9b5b65839db" kindref="member">desc</ref>[idx[0]].<ref refid="structvring__desc__t_1af3b580bebd608778555c5c8ba43f1223" kindref="member">addr</ref><sp/>=<sp/>(<ref refid="types_8h_1a29940ae63ec06c9998bba873e25407ad" kindref="member">uint64</ref>)kva2pa((<ref refid="types_8h_1a29940ae63ec06c9998bba873e25407ad" kindref="member">uint64</ref>)&amp;buf0);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a7b2400d9c769854a3efed9b5b65839db" kindref="member">desc</ref>[idx[0]].<ref refid="structvring__desc__t_1af3b580bebd608778555c5c8ba43f1223" kindref="member">addr</ref><sp/>=<sp/>(<ref refid="types_8h_1a29940ae63ec06c9998bba873e25407ad" kindref="member">uint64</ref>)&amp;buf0;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a7b2400d9c769854a3efed9b5b65839db" kindref="member">desc</ref>[idx[0]].<ref refid="structvring__desc__t_1a207df2c4115f2de24b151f792c922fd6" kindref="member">len</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf0);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a7b2400d9c769854a3efed9b5b65839db" kindref="member">desc</ref>[idx[0]].<ref refid="structvring__desc__t_1a0c1d8fa3e009abfbd010f4dde9470e07" kindref="member">flags</ref><sp/>=<sp/><ref refid="virtio_8h_1ac98030127cfdd5b7e53a4756a38d3e28" kindref="member">VRING_DESC_F_NEXT</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a7b2400d9c769854a3efed9b5b65839db" kindref="member">desc</ref>[idx[0]].<ref refid="structvring__desc__t_1acc506d763dd0c278697133eb6c81cf8c" kindref="member">next</ref><sp/>=<sp/>idx[1];</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a7b2400d9c769854a3efed9b5b65839db" kindref="member">desc</ref>[idx[1]].<ref refid="structvring__desc__t_1af3b580bebd608778555c5c8ba43f1223" kindref="member">addr</ref><sp/>=<sp/>(<ref refid="types_8h_1a29940ae63ec06c9998bba873e25407ad" kindref="member">uint64</ref>)b-&gt;<ref refid="structbuf_1a6f4829eccb5ca803fb56d9998aa2b7e4" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a7b2400d9c769854a3efed9b5b65839db" kindref="member">desc</ref>[idx[1]].<ref refid="structvring__desc__t_1a207df2c4115f2de24b151f792c922fd6" kindref="member">len</ref><sp/>=<sp/><ref refid="virtio_8h_1a403cf3149c084cea115b85c90721039a" kindref="member">BSIZE</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(write)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a7b2400d9c769854a3efed9b5b65839db" kindref="member">desc</ref>[idx[1]].<ref refid="structvring__desc__t_1a0c1d8fa3e009abfbd010f4dde9470e07" kindref="member">flags</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>device<sp/>reads<sp/>b-&gt;data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a7b2400d9c769854a3efed9b5b65839db" kindref="member">desc</ref>[idx[1]].<ref refid="structvring__desc__t_1a0c1d8fa3e009abfbd010f4dde9470e07" kindref="member">flags</ref><sp/>=<sp/><ref refid="virtio_8h_1a74fe2dbfe07fd3d386e87e7e7a921691" kindref="member">VRING_DESC_F_WRITE</ref>;<sp/></highlight><highlight class="comment">//<sp/>device<sp/>writes<sp/>b-&gt;data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a7b2400d9c769854a3efed9b5b65839db" kindref="member">desc</ref>[idx[1]].<ref refid="structvring__desc__t_1a0c1d8fa3e009abfbd010f4dde9470e07" kindref="member">flags</ref><sp/>|=<sp/><ref refid="virtio_8h_1ac98030127cfdd5b7e53a4756a38d3e28" kindref="member">VRING_DESC_F_NEXT</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a7b2400d9c769854a3efed9b5b65839db" kindref="member">desc</ref>[idx[1]].<ref refid="structvring__desc__t_1acc506d763dd0c278697133eb6c81cf8c" kindref="member">next</ref><sp/>=<sp/>idx[2];</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a928468fbe367e8e7c62511a56d010f6f" kindref="member">info</ref>[idx[0]].<ref refid="structdisk_1a9af27b68ec4562decb4e7d22a8685681" kindref="member">status</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a7b2400d9c769854a3efed9b5b65839db" kindref="member">desc</ref>[idx[2]].<ref refid="structvring__desc__t_1af3b580bebd608778555c5c8ba43f1223" kindref="member">addr</ref><sp/>=<sp/>(<ref refid="types_8h_1a29940ae63ec06c9998bba873e25407ad" kindref="member">uint64</ref>)&amp;<ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a928468fbe367e8e7c62511a56d010f6f" kindref="member">info</ref>[idx[0]].<ref refid="structdisk_1a9af27b68ec4562decb4e7d22a8685681" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a7b2400d9c769854a3efed9b5b65839db" kindref="member">desc</ref>[idx[2]].<ref refid="structvring__desc__t_1a207df2c4115f2de24b151f792c922fd6" kindref="member">len</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a7b2400d9c769854a3efed9b5b65839db" kindref="member">desc</ref>[idx[2]].<ref refid="structvring__desc__t_1a0c1d8fa3e009abfbd010f4dde9470e07" kindref="member">flags</ref><sp/>=<sp/><ref refid="virtio_8h_1a74fe2dbfe07fd3d386e87e7e7a921691" kindref="member">VRING_DESC_F_WRITE</ref>;<sp/></highlight><highlight class="comment">//<sp/>device<sp/>writes<sp/>the<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a7b2400d9c769854a3efed9b5b65839db" kindref="member">desc</ref>[idx[2]].<ref refid="structvring__desc__t_1acc506d763dd0c278697133eb6c81cf8c" kindref="member">next</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>record<sp/>buf_t<sp/>for<sp/>d_virtio_disk_intr().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structbuf_1a598c840a233e368937d47cd1b7a5f3a2" kindref="member">disk</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a928468fbe367e8e7c62511a56d010f6f" kindref="member">info</ref>[idx[0]].<ref refid="structdisk_1a0f33659319699168b62924bbb8557927" kindref="member">b</ref><sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>avail[0]<sp/>is<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>avail[1]<sp/>tells<sp/>the<sp/>device<sp/>how<sp/>far<sp/>to<sp/>look<sp/>in<sp/>avail[2...].</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>avail[2...]<sp/>are<sp/>desc[]<sp/>indices<sp/>the<sp/>device<sp/>should<sp/>process.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>only<sp/>tell<sp/>device<sp/>the<sp/>first<sp/>index<sp/>in<sp/>our<sp/>chain<sp/>of<sp/>descriptors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a2fed856c690d0ea756d79f944d49298b" kindref="member">avail</ref>[2<sp/>+<sp/>(<ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a2fed856c690d0ea756d79f944d49298b" kindref="member">avail</ref>[1]<sp/>%<sp/><ref refid="virtio_8h_1a426aa6e3c35dfb88e15948652c6ebfc6" kindref="member">DESC_NUM</ref>)]<sp/>=<sp/>idx[0];</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>__sync_synchronize();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a2fed856c690d0ea756d79f944d49298b" kindref="member">avail</ref>[1]<sp/>=<sp/><ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a2fed856c690d0ea756d79f944d49298b" kindref="member">avail</ref>[1]<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lock_8h_1a25c026e475e11a6e312925223a3e9d34" kindref="member">k_spin_lock_release</ref>(&amp;<ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a68fda05cc6273072a123fddf6a69ae7a" kindref="member">vdisk_lock</ref>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="virtio_8h_1a80e6faf1cf09d43dab325b4fd98cddfd" kindref="member">R</ref>(<ref refid="virtio_8h_1af33b9135a8725e32c95e412b97ecdce5" kindref="member">VIRTIO_MMIO_QUEUE_NOTIFY</ref>)<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>value<sp/>is<sp/>queue<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>d_virtio_disk_intr()<sp/>to<sp/>say<sp/>request<sp/>has<sp/>finished.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(b-&gt;<ref refid="structbuf_1a598c840a233e368937d47cd1b7a5f3a2" kindref="member">disk</ref><sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_pcb_sleep(b,<sp/>&amp;disk.vdisk_lock);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__sync_synchronize();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lock_8h_1aa8b07da1c0d3b17f49429722404c9649" kindref="member">k_spin_lock_acquire</ref>(&amp;<ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a68fda05cc6273072a123fddf6a69ae7a" kindref="member">vdisk_lock</ref>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a928468fbe367e8e7c62511a56d010f6f" kindref="member">info</ref>[idx[0]].<ref refid="structdisk_1a0f33659319699168b62924bbb8557927" kindref="member">b</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>free_chain(idx[0]);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lock_8h_1a25c026e475e11a6e312925223a3e9d34" kindref="member">k_spin_lock_release</ref>(&amp;<ref refid="structdisk" kindref="compound">disk</ref>.<ref refid="structdisk_1a68fda05cc6273072a123fddf6a69ae7a" kindref="member">vdisk_lock</ref>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspin__lock" kindref="compound">spin_lock_t</ref><sp/><ref refid="virtio__blk_8c_1a63f4138a272db1e1892f31c0f2473301" kindref="member">lock</ref>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbuf" kindref="compound">buf_t</ref><sp/><ref refid="structbuf" kindref="compound">buf</ref>[<ref refid="virtio_8h_1ad51e2f8dffd163c263ec676a268d0f0a" kindref="member">NBUF</ref>];</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Linked<sp/>list<sp/>of<sp/>all<sp/>buffers,<sp/>through<sp/>prev/next.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sorted<sp/>by<sp/>how<sp/>recently<sp/>the<sp/>buffer<sp/>was<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>head.next<sp/>is<sp/>most<sp/>recent,<sp/>head.prev<sp/>is<sp/>least.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbuf" kindref="compound">buf_t</ref><sp/><ref refid="virtio__blk_8c_1a2f3fce4bb758d0ed4c15a3ea8faac3ae" kindref="member">head</ref>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}<sp/><ref refid="virtio__blk_8c_1a484cc4a6a6fe40f324eaab3f87b0c74e" kindref="member">bcache</ref>;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="virtio__blk_8c_1a8ddc08c99fd7de9077364679f3e88a1b" kindref="member">d_binit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbuf" kindref="compound">buf_t</ref><sp/>*b;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lock_8h_1a5ecc66db27d505944136e8cb400d30f9" kindref="member">k_spin_lock_init</ref>(&amp;<ref refid="virtio__blk_8c_1a484cc4a6a6fe40f324eaab3f87b0c74e" kindref="member">bcache</ref>.lock);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>linked<sp/>list<sp/>of<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="virtio__blk_8c_1a484cc4a6a6fe40f324eaab3f87b0c74e" kindref="member">bcache</ref>.head.prev<sp/>=<sp/>&amp;<ref refid="virtio__blk_8c_1a484cc4a6a6fe40f324eaab3f87b0c74e" kindref="member">bcache</ref>.head;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="virtio__blk_8c_1a484cc4a6a6fe40f324eaab3f87b0c74e" kindref="member">bcache</ref>.head.next<sp/>=<sp/>&amp;<ref refid="virtio__blk_8c_1a484cc4a6a6fe40f324eaab3f87b0c74e" kindref="member">bcache</ref>.head;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(b<sp/>=<sp/><ref refid="virtio__blk_8c_1a484cc4a6a6fe40f324eaab3f87b0c74e" kindref="member">bcache</ref>.buf;<sp/>b<sp/>&lt;<sp/><ref refid="virtio__blk_8c_1a484cc4a6a6fe40f324eaab3f87b0c74e" kindref="member">bcache</ref>.buf<sp/>+<sp/><ref refid="virtio_8h_1ad51e2f8dffd163c263ec676a268d0f0a" kindref="member">NBUF</ref>;<sp/>b++)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structbuf_1aaf5efe777371aaeb9944508fd52adda5" kindref="member">refcnt</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structbuf_1a6e69224f6242650993c1e3f12d39b85d" kindref="member">sectorno</ref><sp/>=<sp/>~0;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structbuf_1ac96082c2b5f22133ac7092ef81487227" kindref="member">dev</ref><sp/>=<sp/>~0;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structbuf_1ab18c18abb22f07617619e9a74c71f51a" kindref="member">next</ref><sp/>=<sp/><ref refid="virtio__blk_8c_1a484cc4a6a6fe40f324eaab3f87b0c74e" kindref="member">bcache</ref>.head.next;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structbuf_1a930cab1e1b3751795d31bfd0291dff4a" kindref="member">prev</ref><sp/>=<sp/>&amp;<ref refid="virtio__blk_8c_1a484cc4a6a6fe40f324eaab3f87b0c74e" kindref="member">bcache</ref>.head;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lock_8h_1ac74ae2a83c4ba9388a5f5a4ab5119b45" kindref="member">k_sleep_lock_init</ref>(&amp;b-&gt;<ref refid="structbuf_1a755114a8c3b1d1a7b68458e22a1175ef" kindref="member">lock</ref>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="virtio__blk_8c_1a484cc4a6a6fe40f324eaab3f87b0c74e" kindref="member">bcache</ref>.head.next-&gt;prev<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="virtio__blk_8c_1a484cc4a6a6fe40f324eaab3f87b0c74e" kindref="member">bcache</ref>.head.next<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Look<sp/>through<sp/>buffer<sp/>cache<sp/>for<sp/>block<sp/>on<sp/>device<sp/>dev.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>not<sp/>found,<sp/>allocate<sp/>a<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>either<sp/>case,<sp/>return<sp/>locked<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structbuf" kindref="compound">buf_t</ref><sp/>*bget(<ref refid="types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>dev,<sp/><ref refid="types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>sectorno)<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbuf" kindref="compound">buf_t</ref><sp/>*b<sp/>=<sp/><ref refid="types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lock_8h_1aa8b07da1c0d3b17f49429722404c9649" kindref="member">k_spin_lock_acquire</ref>(&amp;<ref refid="virtio__blk_8c_1a484cc4a6a6fe40f324eaab3f87b0c74e" kindref="member">bcache</ref>.lock);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>the<sp/>block<sp/>already<sp/>cached?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(b<sp/>=<sp/><ref refid="virtio__blk_8c_1a484cc4a6a6fe40f324eaab3f87b0c74e" kindref="member">bcache</ref>.head.next;<sp/>b<sp/>!=<sp/>&amp;<ref refid="virtio__blk_8c_1a484cc4a6a6fe40f324eaab3f87b0c74e" kindref="member">bcache</ref>.head;<sp/>b<sp/>=<sp/>b-&gt;<ref refid="structbuf_1ab18c18abb22f07617619e9a74c71f51a" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b-&gt;<ref refid="structbuf_1ac96082c2b5f22133ac7092ef81487227" kindref="member">dev</ref><sp/>==<sp/>dev<sp/>&amp;&amp;<sp/>b-&gt;<ref refid="structbuf_1a6e69224f6242650993c1e3f12d39b85d" kindref="member">sectorno</ref><sp/>==<sp/>sectorno)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structbuf_1aaf5efe777371aaeb9944508fd52adda5" kindref="member">refcnt</ref>++;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lock_8h_1a25c026e475e11a6e312925223a3e9d34" kindref="member">k_spin_lock_release</ref>(&amp;<ref refid="virtio__blk_8c_1a484cc4a6a6fe40f324eaab3f87b0c74e" kindref="member">bcache</ref>.lock);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_sleep_lock_acquire(&amp;b-&gt;lock);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>cached.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Recycle<sp/>the<sp/>least<sp/>recently<sp/>used<sp/>(LRU)<sp/>unused<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(b<sp/>=<sp/><ref refid="virtio__blk_8c_1a484cc4a6a6fe40f324eaab3f87b0c74e" kindref="member">bcache</ref>.head.prev;<sp/>b<sp/>!=<sp/>&amp;<ref refid="virtio__blk_8c_1a484cc4a6a6fe40f324eaab3f87b0c74e" kindref="member">bcache</ref>.head;<sp/>b<sp/>=<sp/>b-&gt;<ref refid="structbuf_1a930cab1e1b3751795d31bfd0291dff4a" kindref="member">prev</ref>)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b-&gt;<ref refid="structbuf_1aaf5efe777371aaeb9944508fd52adda5" kindref="member">refcnt</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structbuf_1ac96082c2b5f22133ac7092ef81487227" kindref="member">dev</ref><sp/>=<sp/>dev;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structbuf_1a6e69224f6242650993c1e3f12d39b85d" kindref="member">sectorno</ref><sp/>=<sp/>sectorno;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structbuf_1a8983733a2501c7d03a45c7de7057116a" kindref="member">valid</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structbuf_1aaf5efe777371aaeb9944508fd52adda5" kindref="member">refcnt</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lock_8h_1a25c026e475e11a6e312925223a3e9d34" kindref="member">k_spin_lock_release</ref>(&amp;<ref refid="virtio__blk_8c_1a484cc4a6a6fe40f324eaab3f87b0c74e" kindref="member">bcache</ref>.lock);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_sleep_lock_acquire(&amp;b-&gt;lock);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>panic(</highlight><highlight class="stringliteral">&quot;bget:<sp/>no<sp/>buffers&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b;</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>a<sp/>locked<sp/>buf<sp/>with<sp/>the<sp/>contents<sp/>of<sp/>the<sp/>indicated<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><ref refid="structbuf" kindref="compound">buf_t</ref><sp/>*<ref refid="virtio__blk_8c_1abbe29775b1e823f8656e762918301b19" kindref="member">d_bread</ref>(<ref refid="types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>dev,<sp/><ref refid="types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>sectorno)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbuf" kindref="compound">buf_t</ref><sp/>*b;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>=<sp/>bget(dev,<sp/>sectorno);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!b-&gt;<ref refid="structbuf_1a8983733a2501c7d03a45c7de7057116a" kindref="member">valid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="virtio__blk_8c_1a9cc8ace726fbd2f55efe7bac40d4ee31" kindref="member">d_virtio_disk_rw</ref>(b,<sp/>0);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structbuf_1a8983733a2501c7d03a45c7de7057116a" kindref="member">valid</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b;</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Write<sp/>b&apos;s<sp/>contents<sp/>to<sp/>disk.<sp/><sp/>Must<sp/>be<sp/>locked.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="virtio__blk_8c_1ab30ee70ddb637afdcdcc27c5c1186601" kindref="member">d_bwrite</ref>(<ref refid="structbuf" kindref="compound">buf_t</ref><sp/>*b)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(!k_sleep_lock_hold(&amp;b-&gt;lock))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>panic(&quot;d_bwrite&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="virtio__blk_8c_1a9cc8ace726fbd2f55efe7bac40d4ee31" kindref="member">d_virtio_disk_rw</ref>(b,<sp/>1);</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Release<sp/>a<sp/>locked<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Move<sp/>to<sp/>the<sp/>head<sp/>of<sp/>the<sp/>most-recently-used<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="virtio__blk_8c_1a4e86b21b9d263f9fc0237363e4538858" kindref="member">d_brelse</ref>(<ref refid="structbuf" kindref="compound">buf_t</ref><sp/>*b)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(!k_sleep_lock_hold(&amp;b-&gt;lock))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>panic(&quot;d_brelse&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_sleep_lock_release(&amp;b-&gt;lock);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lock_8h_1aa8b07da1c0d3b17f49429722404c9649" kindref="member">k_spin_lock_acquire</ref>(&amp;<ref refid="virtio__blk_8c_1a484cc4a6a6fe40f324eaab3f87b0c74e" kindref="member">bcache</ref>.lock);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structbuf_1aaf5efe777371aaeb9944508fd52adda5" kindref="member">refcnt</ref>--;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b-&gt;<ref refid="structbuf_1aaf5efe777371aaeb9944508fd52adda5" kindref="member">refcnt</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>one<sp/>is<sp/>waiting<sp/>for<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structbuf_1ab18c18abb22f07617619e9a74c71f51a" kindref="member">next</ref>-&gt;<ref refid="structbuf_1a930cab1e1b3751795d31bfd0291dff4a" kindref="member">prev</ref><sp/>=<sp/>b-&gt;<ref refid="structbuf_1a930cab1e1b3751795d31bfd0291dff4a" kindref="member">prev</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structbuf_1a930cab1e1b3751795d31bfd0291dff4a" kindref="member">prev</ref>-&gt;<ref refid="structbuf_1ab18c18abb22f07617619e9a74c71f51a" kindref="member">next</ref><sp/>=<sp/>b-&gt;<ref refid="structbuf_1ab18c18abb22f07617619e9a74c71f51a" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structbuf_1ab18c18abb22f07617619e9a74c71f51a" kindref="member">next</ref><sp/>=<sp/><ref refid="virtio__blk_8c_1a484cc4a6a6fe40f324eaab3f87b0c74e" kindref="member">bcache</ref>.head.next;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structbuf_1a930cab1e1b3751795d31bfd0291dff4a" kindref="member">prev</ref><sp/>=<sp/>&amp;<ref refid="virtio__blk_8c_1a484cc4a6a6fe40f324eaab3f87b0c74e" kindref="member">bcache</ref>.head;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="virtio__blk_8c_1a484cc4a6a6fe40f324eaab3f87b0c74e" kindref="member">bcache</ref>.head.next-&gt;prev<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="virtio__blk_8c_1a484cc4a6a6fe40f324eaab3f87b0c74e" kindref="member">bcache</ref>.head.next<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lock_8h_1a25c026e475e11a6e312925223a3e9d34" kindref="member">k_spin_lock_release</ref>(&amp;<ref refid="virtio__blk_8c_1a484cc4a6a6fe40f324eaab3f87b0c74e" kindref="member">bcache</ref>.lock);</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="virtio__blk_8c_1abbc4ceecde1af6b734b07cb37714f926" kindref="member">bpin</ref>(<ref refid="structbuf" kindref="compound">buf_t</ref><sp/>*b)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lock_8h_1aa8b07da1c0d3b17f49429722404c9649" kindref="member">k_spin_lock_acquire</ref>(&amp;<ref refid="virtio__blk_8c_1a484cc4a6a6fe40f324eaab3f87b0c74e" kindref="member">bcache</ref>.lock);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structbuf_1aaf5efe777371aaeb9944508fd52adda5" kindref="member">refcnt</ref>++;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lock_8h_1a25c026e475e11a6e312925223a3e9d34" kindref="member">k_spin_lock_release</ref>(&amp;<ref refid="virtio__blk_8c_1a484cc4a6a6fe40f324eaab3f87b0c74e" kindref="member">bcache</ref>.lock);</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="virtio__blk_8c_1a4511e8aa57fd419643e35fa073c0c299" kindref="member">bunpin</ref>(<ref refid="structbuf" kindref="compound">buf_t</ref><sp/>*b)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lock_8h_1aa8b07da1c0d3b17f49429722404c9649" kindref="member">k_spin_lock_acquire</ref>(&amp;<ref refid="virtio__blk_8c_1a484cc4a6a6fe40f324eaab3f87b0c74e" kindref="member">bcache</ref>.lock);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structbuf_1aaf5efe777371aaeb9944508fd52adda5" kindref="member">refcnt</ref>--;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lock_8h_1a25c026e475e11a6e312925223a3e9d34" kindref="member">k_spin_lock_release</ref>(&amp;<ref refid="virtio__blk_8c_1a484cc4a6a6fe40f324eaab3f87b0c74e" kindref="member">bcache</ref>.lock);</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="virtio__blk_8c_1ab7173e75b343137611ed74ed0278e3ea" kindref="member">d_sd_read</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffers,<sp/><ref refid="types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>*start_block_ids,<sp/><ref refid="types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>block_num)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbuf" kindref="compound">buf_t</ref><sp/>*<ref refid="virtio__blk_8c_1a2841fd18a733a1bc41ab17873c8aab74" kindref="member">buf</ref>;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>block_num;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbuf" kindref="compound">buf</ref><sp/>=<sp/><ref refid="virtio__blk_8c_1abbe29775b1e823f8656e762918301b19" kindref="member">d_bread</ref>(<ref refid="virtio_8h_1ae8b92eb9de2dd7366dc77a6470fe9924" kindref="member">DEV_VDA2</ref>,<sp/>start_block_ids[i]);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="string_8h_1a4985196d8a63d22e320cf33d904d2f92" kindref="member">k_memcpy</ref>((uint8_t<sp/>*)(buffers<sp/>+<sp/>i<sp/>*<sp/><ref refid="virtio_8h_1a403cf3149c084cea115b85c90721039a" kindref="member">BSIZE</ref>),<sp/>(uint8_t<sp/>*)<ref refid="structbuf" kindref="compound">buf</ref>-&gt;<ref refid="structbuf_1a6f4829eccb5ca803fb56d9998aa2b7e4" kindref="member">data</ref>,<sp/><ref refid="virtio_8h_1a403cf3149c084cea115b85c90721039a" kindref="member">BSIZE</ref>);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="virtio__blk_8c_1a4e86b21b9d263f9fc0237363e4538858" kindref="member">d_brelse</ref>(<ref refid="structbuf" kindref="compound">buf</ref>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="virtio__blk_8c_1a3ba8dbd5d9de7f8bb698576b733f17c2" kindref="member">d_sd_write</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffers,<sp/><ref refid="types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>*start_block_ids,<sp/><ref refid="types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>block_num)<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbuf" kindref="compound">buf_t</ref><sp/>*<ref refid="virtio__blk_8c_1a2841fd18a733a1bc41ab17873c8aab74" kindref="member">buf</ref>;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>block_num;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbuf" kindref="compound">buf</ref><sp/>=<sp/><ref refid="virtio__blk_8c_1abbe29775b1e823f8656e762918301b19" kindref="member">d_bread</ref>(<ref refid="virtio_8h_1ae8b92eb9de2dd7366dc77a6470fe9924" kindref="member">DEV_VDA2</ref>,<sp/>start_block_ids[i]);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="string_8h_1a4985196d8a63d22e320cf33d904d2f92" kindref="member">k_memcpy</ref>((uint8_t<sp/>*)<ref refid="structbuf" kindref="compound">buf</ref>-&gt;<ref refid="structbuf_1a6f4829eccb5ca803fb56d9998aa2b7e4" kindref="member">data</ref>,<sp/>(uint8_t<sp/>*)(buffers<sp/>+<sp/>i<sp/>*<sp/><ref refid="virtio_8h_1a403cf3149c084cea115b85c90721039a" kindref="member">BSIZE</ref>),<sp/><ref refid="virtio_8h_1a403cf3149c084cea115b85c90721039a" kindref="member">BSIZE</ref>);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="virtio__blk_8c_1ab30ee70ddb637afdcdcc27c5c1186601" kindref="member">d_bwrite</ref>(<ref refid="structbuf" kindref="compound">buf</ref>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="virtio__blk_8c_1a4e86b21b9d263f9fc0237363e4538858" kindref="member">d_brelse</ref>(<ref refid="structbuf" kindref="compound">buf</ref>);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/drivers/virtio/virtio_blk.c"/>
  </compounddef>
</doxygen>
