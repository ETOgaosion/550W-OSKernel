<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="zh">
  <compounddef id="lock_8h" kind="file" language="C++">
    <compoundname>lock.h</compoundname>
    <includes refid="list_8h" local="no">lib/list.h</includes>
    <includedby refid="virtio_8h" local="no">src/drivers/virtio/virtio.h</includedby>
    <includedby refid="file_8h" local="no">src/fs/file.h</includedby>
    <includedby refid="pcb_8h" local="no">src/include/os/pcb.h</includedby>
    <includedby refid="include_2os_2syscall_8h" local="no">src/include/os/syscall.h</includedby>
    <includedby refid="main_8c" local="no">src/init/main.c</includedby>
    <includedby refid="lock_8c" local="no">src/kernel/sync/lock.c</includedby>
    <includedby refid="sync_8c" local="no">src/kernel/sync/sync.c</includedby>
    <includedby refid="smp_8c" local="no">src/kernel/sys/smp.c</includedby>
    <includedby refid="printk_8c" local="no">src/lib/printk.c</includedby>
    <incdepgraph>
      <node id="4">
        <label>common/errno.h</label>
        <link refid="errno_8h"/>
      </node>
      <node id="3">
        <label>common/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/include/os/lock.h</label>
        <link refid="lock_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>lib/list.h</label>
        <link refid="list_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>src/fs/fs.c</label>
        <link refid="fs_8c"/>
      </node>
      <node id="23">
        <label>src/kernel/sync/lock.c</label>
        <link refid="lock_8c"/>
      </node>
      <node id="3">
        <label>src/drivers/plic/plic.c</label>
        <link refid="plic_8c"/>
      </node>
      <node id="17">
        <label>src/kernel/sys/smp.c</label>
        <link refid="smp_8c"/>
      </node>
      <node id="15">
        <label>src/drivers/screen/screen.c</label>
        <link refid="screen_8c"/>
      </node>
      <node id="18">
        <label>src/lib/printk.c</label>
        <link refid="printk_8c"/>
      </node>
      <node id="24">
        <label>src/kernel/sync/sync.c</label>
        <link refid="sync_8c"/>
      </node>
      <node id="14">
        <label>src/kernel/sys/pcb.c</label>
        <link refid="pcb_8c"/>
      </node>
      <node id="6">
        <label>src/include/os/syscall.h</label>
        <link refid="include_2os_2syscall_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/drivers/virtio/virtio.h</label>
        <link refid="virtio_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>src/kernel/sys/time.c</label>
        <link refid="time_8c"/>
      </node>
      <node id="8">
        <label>src/init/main.c</label>
        <link refid="main_8c"/>
      </node>
      <node id="7">
        <label>src/kernel/irq/irq.c</label>
        <link refid="irq_8c"/>
      </node>
      <node id="16">
        <label>src/include/os/irq.h</label>
        <link refid="irq_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>src/kernel/mm/mm.c</label>
        <link refid="mm_8c"/>
      </node>
      <node id="20">
        <label>src/arch/riscv/sbi/io.c</label>
        <link refid="io_8c"/>
      </node>
      <node id="19">
        <label>src/include/os/smp.h</label>
        <link refid="smp_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/drivers/virtio/virtio_blk.c</label>
        <link refid="virtio__blk_8c"/>
      </node>
      <node id="12">
        <label>src/arch/riscv/include/asm/stack.h</label>
        <link refid="stack_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>src/include/os/pcb.h</label>
        <link refid="pcb_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>src/fs/fd.c</label>
        <link refid="fd_8c"/>
      </node>
      <node id="9">
        <label>src/fs/file.h</label>
        <link refid="file_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>src/arch/riscv/kernel/init/stack.c</label>
        <link refid="stack_8c"/>
      </node>
      <node id="1">
        <label>src/include/os/lock.h</label>
        <link refid="lock_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structspin__lock" prot="public">spin_lock</innerclass>
    <innerclass refid="structdouble__spin__lock" prot="public">double_spin_lock</innerclass>
    <innerclass refid="structmutex__lock" prot="public">mutex_lock</innerclass>
    <innerclass refid="structsleep__lock" prot="public">sleep_lock</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="lock_8h_1a1556069cddf96399a75f0015c8fed5fd" prot="public" static="no">
        <name>LOCK_NUM</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/os/lock.h" line="5" column="9" bodyfile="src/include/os/lock.h" bodystart="5" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="lock_8h_1afa2ed542fe4226abf3cc19f5f16f439f" prot="public" static="no" strong="no">
        <type></type>
        <name>lock_status_t</name>
        <enumvalue id="lock_8h_1afa2ed542fe4226abf3cc19f5f16f439fa4ade5a087dd858a01c36ce7ad8f64e36" prot="public">
          <name>UNLOCKED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lock_8h_1afa2ed542fe4226abf3cc19f5f16f439fa6b4af979c9694e48f340397ac08dfd1c" prot="public">
          <name>LOCKED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/os/lock.h" line="7" column="1" bodyfile="src/include/os/lock.h" bodystart="7" bodyend="10"/>
      </memberdef>
      <memberdef kind="enum" id="lock_8h_1a8f729c9e224ddba4b65910a69f6258a8" prot="public" static="no" strong="no">
        <type></type>
        <name>guard_status_t</name>
        <enumvalue id="lock_8h_1a8f729c9e224ddba4b65910a69f6258a8afbeca55fd597bdd248c70d7fc576de73" prot="public">
          <name>UNGUARDED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lock_8h_1a8f729c9e224ddba4b65910a69f6258a8a2bd8a5d7d693356de33a89cef6c219fb" prot="public">
          <name>GUARDED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/os/lock.h" line="12" column="1" bodyfile="src/include/os/lock.h" bodystart="12" bodyend="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="lock_8h_1a78e3055bd891f045188756c613a5ad92" prot="public" static="no">
        <type>struct <ref refid="structspin__lock" kindref="compound">spin_lock</ref></type>
        <definition>typedef struct spin_lock spin_lock_t</definition>
        <argsstring></argsstring>
        <name>spin_lock_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/os/lock.h" line="19" column="13"/>
      </memberdef>
      <memberdef kind="typedef" id="lock_8h_1a15629cce5c1de7677e80adc70d348470" prot="public" static="no">
        <type>struct <ref refid="structdouble__spin__lock" kindref="compound">double_spin_lock</ref></type>
        <definition>typedef struct double_spin_lock double_spin_lock_t</definition>
        <argsstring></argsstring>
        <name>double_spin_lock_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/os/lock.h" line="24" column="20"/>
      </memberdef>
      <memberdef kind="typedef" id="lock_8h_1aa810e6c5e1dcfe8ac3d0c0067028fd44" prot="public" static="no">
        <type>struct <ref refid="structmutex__lock" kindref="compound">mutex_lock</ref></type>
        <definition>typedef struct mutex_lock mutex_lock_t</definition>
        <argsstring></argsstring>
        <name>mutex_lock_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/os/lock.h" line="31" column="14"/>
      </memberdef>
      <memberdef kind="typedef" id="lock_8h_1ae07e66f4e98429770c21d2514cb97f07" prot="public" static="no">
        <type>struct <ref refid="structsleep__lock" kindref="compound">sleep_lock</ref></type>
        <definition>typedef struct sleep_lock sleep_lock_t</definition>
        <argsstring></argsstring>
        <name>sleep_lock_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/os/lock.h" line="38" column="14"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="lock_8h_1a5ecc66db27d505944136e8cb400d30f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void k_spin_lock_init</definition>
        <argsstring>(spin_lock_t *lock)</argsstring>
        <name>k_spin_lock_init</name>
        <param>
          <type><ref refid="lock_8h_1a78e3055bd891f045188756c613a5ad92" kindref="member">spin_lock_t</ref> *</type>
          <declname>lock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/os/lock.h" line="42" column="6" bodyfile="src/kernel/sync/lock.c" bodystart="9" bodyend="11" declfile="src/include/os/lock.h" declline="42" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="lock_8h_1a5785c3b6b3e98d8e2217cce184f231a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_spin_lock_try_acquire</definition>
        <argsstring>(spin_lock_t *lock)</argsstring>
        <name>k_spin_lock_try_acquire</name>
        <param>
          <type><ref refid="lock_8h_1a78e3055bd891f045188756c613a5ad92" kindref="member">spin_lock_t</ref> *</type>
          <declname>lock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/os/lock.h" line="43" column="5" bodyfile="src/kernel/sync/lock.c" bodystart="13" bodyend="15" declfile="src/include/os/lock.h" declline="43" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="lock_8h_1aa8b07da1c0d3b17f49429722404c9649" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void k_spin_lock_acquire</definition>
        <argsstring>(spin_lock_t *lock)</argsstring>
        <name>k_spin_lock_acquire</name>
        <param>
          <type><ref refid="lock_8h_1a78e3055bd891f045188756c613a5ad92" kindref="member">spin_lock_t</ref> *</type>
          <declname>lock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/os/lock.h" line="44" column="6" bodyfile="src/kernel/sync/lock.c" bodystart="17" bodyend="20" declfile="src/include/os/lock.h" declline="44" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="lock_8h_1a25c026e475e11a6e312925223a3e9d34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void k_spin_lock_release</definition>
        <argsstring>(spin_lock_t *lock)</argsstring>
        <name>k_spin_lock_release</name>
        <param>
          <type><ref refid="lock_8h_1a78e3055bd891f045188756c613a5ad92" kindref="member">spin_lock_t</ref> *</type>
          <declname>lock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/os/lock.h" line="45" column="6" bodyfile="src/kernel/sync/lock.c" bodystart="22" bodyend="24" declfile="src/include/os/lock.h" declline="45" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="lock_8h_1a8ac41ee6971967dd13fc307498edadbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void k_schedule_with_spin_lock</definition>
        <argsstring>(spin_lock_t *lock)</argsstring>
        <name>k_schedule_with_spin_lock</name>
        <param>
          <type><ref refid="lock_8h_1a78e3055bd891f045188756c613a5ad92" kindref="member">spin_lock_t</ref> *</type>
          <declname>lock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/os/lock.h" line="46" column="6" bodyfile="src/kernel/sync/lock.c" bodystart="26" bodyend="33" declfile="src/include/os/lock.h" declline="46" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="lock_8h_1a453b961abd018467d0598671b33dd2be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long k_mutex_lock_op</definition>
        <argsstring>(int *key, int op)</argsstring>
        <name>k_mutex_lock_op</name>
        <param>
          <type>int *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/os/lock.h" line="48" column="6" bodyfile="src/kernel/sync/lock.c" bodystart="35" bodyend="48" declfile="src/include/os/lock.h" declline="48" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="lock_8h_1aef8246c98aa26948fda792724da4c335" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long k_mutex_lock_init</definition>
        <argsstring>(int *key)</argsstring>
        <name>k_mutex_lock_init</name>
        <param>
          <type>int *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/os/lock.h" line="49" column="6" bodyfile="src/kernel/sync/lock.c" bodystart="59" bodyend="84" declfile="src/include/os/lock.h" declline="49" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="lock_8h_1a0abc3e7317b4e613540eccbec0102c86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long k_mutex_lock_acquire</definition>
        <argsstring>(int key)</argsstring>
        <name>k_mutex_lock_acquire</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/os/lock.h" line="50" column="6" bodyfile="src/kernel/sync/lock.c" bodystart="86" bodyend="104" declfile="src/include/os/lock.h" declline="50" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="lock_8h_1abbcb492e3aa9c973e5a75759c294de73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long k_mutex_lock_release</definition>
        <argsstring>(int key)</argsstring>
        <name>k_mutex_lock_release</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/os/lock.h" line="51" column="6" bodyfile="src/kernel/sync/lock.c" bodystart="106" bodyend="123" declfile="src/include/os/lock.h" declline="51" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="lock_8h_1a3a9eb70dab785351a2d9534b58758716" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long k_mutex_lock_destroy</definition>
        <argsstring>(int *key)</argsstring>
        <name>k_mutex_lock_destroy</name>
        <param>
          <type>int *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/os/lock.h" line="52" column="6" bodyfile="src/kernel/sync/lock.c" bodystart="125" bodyend="135" declfile="src/include/os/lock.h" declline="52" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="lock_8h_1a4c088a426ea23ba9e7dd56d35acf7bec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long k_mutex_lock_trylock</definition>
        <argsstring>(int *key)</argsstring>
        <name>k_mutex_lock_trylock</name>
        <param>
          <type>int *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/os/lock.h" line="53" column="6" bodyfile="src/kernel/sync/lock.c" bodystart="137" bodyend="149" declfile="src/include/os/lock.h" declline="53" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="lock_8h_1ac74ae2a83c4ba9388a5f5a4ab5119b45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void k_sleep_lock_init</definition>
        <argsstring>(sleep_lock_t *lk)</argsstring>
        <name>k_sleep_lock_init</name>
        <param>
          <type><ref refid="lock_8h_1ae07e66f4e98429770c21d2514cb97f07" kindref="member">sleep_lock_t</ref> *</type>
          <declname>lk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/os/lock.h" line="55" column="6" bodyfile="src/kernel/sync/lock.c" bodystart="151" bodyend="155" declfile="src/include/os/lock.h" declline="55" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="lock_8h_1acd0f05a671d540e49184f27dfd6482b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void k_sleep_lock_acquire</definition>
        <argsstring>(sleep_lock_t *lk)</argsstring>
        <name>k_sleep_lock_acquire</name>
        <param>
          <type><ref refid="lock_8h_1ae07e66f4e98429770c21d2514cb97f07" kindref="member">sleep_lock_t</ref> *</type>
          <declname>lk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/os/lock.h" line="56" column="6" bodyfile="src/kernel/sync/lock.c" bodystart="157" bodyend="165" declfile="src/include/os/lock.h" declline="56" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="lock_8h_1a343da8d33a6ba9c028d365d5903bec0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void k_sleep_lock_release</definition>
        <argsstring>(sleep_lock_t *lk)</argsstring>
        <name>k_sleep_lock_release</name>
        <param>
          <type><ref refid="lock_8h_1ae07e66f4e98429770c21d2514cb97f07" kindref="member">sleep_lock_t</ref> *</type>
          <declname>lk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/os/lock.h" line="57" column="6" bodyfile="src/kernel/sync/lock.c" bodystart="167" bodyend="173" declfile="src/include/os/lock.h" declline="57" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="lock_8h_1a881faa3ab05a55fea4454e9c73e02bff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_sleep_lock_hold</definition>
        <argsstring>(sleep_lock_t *lk)</argsstring>
        <name>k_sleep_lock_hold</name>
        <param>
          <type><ref refid="lock_8h_1ae07e66f4e98429770c21d2514cb97f07" kindref="member">sleep_lock_t</ref> *</type>
          <declname>lk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/os/lock.h" line="58" column="5" bodyfile="src/kernel/sync/lock.c" bodystart="175" bodyend="181" declfile="src/include/os/lock.h" declline="58" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="list_8h" kindref="compound">lib/list.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="lock_8h_1a1556069cddf96399a75f0015c8fed5fd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOCK_NUM<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="lock_8h_1afa2ed542fe4226abf3cc19f5f16f439f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8" refid="lock_8h_1afa2ed542fe4226abf3cc19f5f16f439fa4ade5a087dd858a01c36ce7ad8f64e36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lock_8h_1afa2ed542fe4226abf3cc19f5f16f439fa4ade5a087dd858a01c36ce7ad8f64e36" kindref="member">UNLOCKED</ref>,</highlight></codeline>
<codeline lineno="9" refid="lock_8h_1afa2ed542fe4226abf3cc19f5f16f439fa6b4af979c9694e48f340397ac08dfd1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lock_8h_1afa2ed542fe4226abf3cc19f5f16f439fa6b4af979c9694e48f340397ac08dfd1c" kindref="member">LOCKED</ref>,</highlight></codeline>
<codeline lineno="10"><highlight class="normal">}<sp/><ref refid="lock_8h_1afa2ed542fe4226abf3cc19f5f16f439f" kindref="member">lock_status_t</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="lock_8h_1a8f729c9e224ddba4b65910a69f6258a8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13" refid="lock_8h_1a8f729c9e224ddba4b65910a69f6258a8afbeca55fd597bdd248c70d7fc576de73" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lock_8h_1a8f729c9e224ddba4b65910a69f6258a8afbeca55fd597bdd248c70d7fc576de73" kindref="member">UNGUARDED</ref>,</highlight></codeline>
<codeline lineno="14" refid="lock_8h_1a8f729c9e224ddba4b65910a69f6258a8a2bd8a5d7d693356de33a89cef6c219fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lock_8h_1a8f729c9e224ddba4b65910a69f6258a8a2bd8a5d7d693356de33a89cef6c219fb" kindref="member">GUARDED</ref>,</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}<sp/><ref refid="lock_8h_1a8f729c9e224ddba4b65910a69f6258a8" kindref="member">guard_status_t</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="structspin__lock" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structspin__lock" kindref="compound">spin_lock</ref><sp/>{</highlight></codeline>
<codeline lineno="18" refid="structspin__lock_1a6fbe412af11a7bf0be214792088dac19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="lock_8h_1afa2ed542fe4226abf3cc19f5f16f439f" kindref="member">lock_status_t</ref><sp/><ref refid="structspin__lock_1a6fbe412af11a7bf0be214792088dac19" kindref="member">flag</ref>;</highlight></codeline>
<codeline lineno="19" refid="lock_8h_1a78e3055bd891f045188756c613a5ad92" refkind="member"><highlight class="normal">}<sp/><ref refid="lock_8h_1a78e3055bd891f045188756c613a5ad92" kindref="member">spin_lock_t</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="structdouble__spin__lock" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdouble__spin__lock" kindref="compound">double_spin_lock</ref><sp/>{</highlight></codeline>
<codeline lineno="22" refid="structdouble__spin__lock_1a588192cd727e9b066252208046ade33a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="lock_8h_1afa2ed542fe4226abf3cc19f5f16f439f" kindref="member">lock_status_t</ref><sp/><ref refid="structdouble__spin__lock_1a588192cd727e9b066252208046ade33a" kindref="member">flag</ref>;</highlight></codeline>
<codeline lineno="23" refid="structdouble__spin__lock_1a11fe95a1c98a9d42903623234be7dce3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="lock_8h_1a8f729c9e224ddba4b65910a69f6258a8" kindref="member">guard_status_t</ref><sp/><ref refid="structdouble__spin__lock_1a11fe95a1c98a9d42903623234be7dce3" kindref="member">guard</ref>;</highlight></codeline>
<codeline lineno="24" refid="lock_8h_1a15629cce5c1de7677e80adc70d348470" refkind="member"><highlight class="normal">}<sp/><ref refid="lock_8h_1a15629cce5c1de7677e80adc70d348470" kindref="member">double_spin_lock_t</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="structmutex__lock" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmutex__lock" kindref="compound">mutex_lock</ref><sp/>{</highlight></codeline>
<codeline lineno="27" refid="structmutex__lock_1a7cba1ec3d1f04d62968fb70d712043df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmutex__lock_1a7cba1ec3d1f04d62968fb70d712043df" kindref="member">lock_id</ref>;</highlight></codeline>
<codeline lineno="28" refid="structmutex__lock_1a9836b6e4156ff998fa18cddfbb32b3a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmutex__lock_1a9836b6e4156ff998fa18cddfbb32b3a4" kindref="member">initialized</ref>;</highlight></codeline>
<codeline lineno="29" refid="structmutex__lock_1a7985e924097321e2b7acce4a74c6f6cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdouble__spin__lock" kindref="compound">double_spin_lock_t</ref><sp/><ref refid="structmutex__lock_1a7985e924097321e2b7acce4a74c6f6cb" kindref="member">lock</ref>;</highlight></codeline>
<codeline lineno="30" refid="structmutex__lock_1ab729634fbddf7b39d868fda5956e01a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlist__node" kindref="compound">list_head</ref><sp/><ref refid="structmutex__lock_1ab729634fbddf7b39d868fda5956e01a9" kindref="member">block_queue</ref>;</highlight></codeline>
<codeline lineno="31" refid="lock_8h_1aa810e6c5e1dcfe8ac3d0c0067028fd44" refkind="member"><highlight class="normal">}<sp/><ref refid="lock_8h_1aa810e6c5e1dcfe8ac3d0c0067028fd44" kindref="member">mutex_lock_t</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="structsleep__lock" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsleep__lock" kindref="compound">sleep_lock</ref><sp/>{</highlight></codeline>
<codeline lineno="34" refid="structsleep__lock_1a4455cfe7dfd31abb084803de5485954c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structsleep__lock_1a4455cfe7dfd31abb084803de5485954c" kindref="member">locked</ref>;</highlight></codeline>
<codeline lineno="35" refid="structsleep__lock_1a87badbd324a7379b500d9ff12596a3ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspin__lock" kindref="compound">spin_lock_t</ref><sp/><ref refid="structsleep__lock_1a87badbd324a7379b500d9ff12596a3ec" kindref="member">lk</ref>;</highlight></codeline>
<codeline lineno="36" refid="structsleep__lock_1a3d43c60bee038d79f6896b8c51f75de7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structsleep__lock_1a3d43c60bee038d79f6896b8c51f75de7" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="37" refid="structsleep__lock_1aeacf7ed93760b3aeea07a7ab9b508726" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structsleep__lock_1aeacf7ed93760b3aeea07a7ab9b508726" kindref="member">pid</ref>;</highlight></codeline>
<codeline lineno="38" refid="lock_8h_1ae07e66f4e98429770c21d2514cb97f07" refkind="member"><highlight class="normal">}<sp/><ref refid="lock_8h_1ae07e66f4e98429770c21d2514cb97f07" kindref="member">sleep_lock_t</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>init<sp/>lock<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lock_8h_1a5ecc66db27d505944136e8cb400d30f9" kindref="member">k_spin_lock_init</ref>(<ref refid="structspin__lock" kindref="compound">spin_lock_t</ref><sp/>*<ref refid="virtio__blk_8c_1a63f4138a272db1e1892f31c0f2473301" kindref="member">lock</ref>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lock_8h_1a5785c3b6b3e98d8e2217cce184f231a7" kindref="member">k_spin_lock_try_acquire</ref>(<ref refid="structspin__lock" kindref="compound">spin_lock_t</ref><sp/>*<ref refid="virtio__blk_8c_1a63f4138a272db1e1892f31c0f2473301" kindref="member">lock</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lock_8h_1aa8b07da1c0d3b17f49429722404c9649" kindref="member">k_spin_lock_acquire</ref>(<ref refid="structspin__lock" kindref="compound">spin_lock_t</ref><sp/>*<ref refid="virtio__blk_8c_1a63f4138a272db1e1892f31c0f2473301" kindref="member">lock</ref>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lock_8h_1a25c026e475e11a6e312925223a3e9d34" kindref="member">k_spin_lock_release</ref>(<ref refid="structspin__lock" kindref="compound">spin_lock_t</ref><sp/>*<ref refid="virtio__blk_8c_1a63f4138a272db1e1892f31c0f2473301" kindref="member">lock</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lock_8h_1a8ac41ee6971967dd13fc307498edadbf" kindref="member">k_schedule_with_spin_lock</ref>(<ref refid="structspin__lock" kindref="compound">spin_lock_t</ref><sp/>*<ref refid="virtio__blk_8c_1a63f4138a272db1e1892f31c0f2473301" kindref="member">lock</ref>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="lock_8h_1a453b961abd018467d0598671b33dd2be" kindref="member">k_mutex_lock_op</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>op);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="lock_8h_1aef8246c98aa26948fda792724da4c335" kindref="member">k_mutex_lock_init</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*key);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="lock_8h_1a0abc3e7317b4e613540eccbec0102c86" kindref="member">k_mutex_lock_acquire</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="lock_8h_1abbcb492e3aa9c973e5a75759c294de73" kindref="member">k_mutex_lock_release</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="lock_8h_1a3a9eb70dab785351a2d9534b58758716" kindref="member">k_mutex_lock_destroy</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*key);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="lock_8h_1a4c088a426ea23ba9e7dd56d35acf7bec" kindref="member">k_mutex_lock_trylock</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*key);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lock_8h_1ac74ae2a83c4ba9388a5f5a4ab5119b45" kindref="member">k_sleep_lock_init</ref>(<ref refid="structsleep__lock" kindref="compound">sleep_lock_t</ref><sp/>*lk);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lock_8h_1acd0f05a671d540e49184f27dfd6482b8" kindref="member">k_sleep_lock_acquire</ref>(<ref refid="structsleep__lock" kindref="compound">sleep_lock_t</ref><sp/>*lk);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lock_8h_1a343da8d33a6ba9c028d365d5903bec0c" kindref="member">k_sleep_lock_release</ref>(<ref refid="structsleep__lock" kindref="compound">sleep_lock_t</ref><sp/>*lk);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lock_8h_1a881faa3ab05a55fea4454e9c73e02bff" kindref="member">k_sleep_lock_hold</ref>(<ref refid="structsleep__lock" kindref="compound">sleep_lock_t</ref><sp/>*lk);</highlight></codeline>
    </programlisting>
    <location file="src/include/os/lock.h"/>
  </compounddef>
</doxygen>
