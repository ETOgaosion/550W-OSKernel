<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="zh">
  <compounddef id="sync_8c" kind="file" language="C++">
    <compoundname>sync.c</compoundname>
    <includes refid="math_8h" local="no">lib/math.h</includes>
    <includes refid="string_8h" local="no">lib/string.h</includes>
    <includes refid="lock_8h" local="no">os/lock.h</includes>
    <includes refid="pcb_8h" local="no">os/pcb.h</includes>
    <includes refid="sync_8h" local="no">os/sync.h</includes>
    <incdepgraph>
      <node id="11">
        <label>asm/pgtable.h</label>
        <link refid="pgtable_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>os/mm.h</label>
        <link refid="mm_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>common/elf.h</label>
        <link refid="elf_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/kernel/sync/sync.c</label>
        <link refid="sync_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>common/errno.h</label>
        <link refid="errno_8h"/>
      </node>
      <node id="14">
        <label>os/cpu.h</label>
        <link refid="cpu_8h"/>
      </node>
      <node id="17">
        <label>os/time.h</label>
        <link refid="time_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>asm/context.h</label>
        <link refid="context_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>lib/math.h</label>
        <link refid="math_8h"/>
      </node>
      <node id="13">
        <label>asm/sbidef.h</label>
        <link refid="sbidef_8h"/>
      </node>
      <node id="4">
        <label>common/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>lib/string.h</label>
        <link refid="string_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>asm/sbi.h</label>
        <link refid="sbi_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>os/pcb.h</label>
        <link refid="pcb_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>os/lock.h</label>
        <link refid="lock_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>os/sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>lib/list.h</label>
        <link refid="list_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="sync_8c_1a14e308b40e59d3eff23814e4e1174807" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int sem_first_time</definition>
        <argsstring></argsstring>
        <name>sem_first_time</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/sync/sync.c" line="7" column="5" bodyfile="src/kernel/sync/sync.c" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sync_8c_1ad07dc23f32885cdb29bd61e186bac854" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int cond_first_time</definition>
        <argsstring></argsstring>
        <name>cond_first_time</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/sync/sync.c" line="8" column="5" bodyfile="src/kernel/sync/sync.c" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sync_8c_1a2bb26c973626c745194abcab450e1320" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int barrier_first_time</definition>
        <argsstring></argsstring>
        <name>barrier_first_time</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/sync/sync.c" line="9" column="5" bodyfile="src/kernel/sync/sync.c" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sync_8c_1a17f852105398ae455fe3b021ccf61527" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int mbox_first_time</definition>
        <argsstring></argsstring>
        <name>mbox_first_time</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/sync/sync.c" line="10" column="5" bodyfile="src/kernel/sync/sync.c" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sync_8c_1ac32f003cfdbda84d6d3ddf4c5931401b" prot="public" static="no" mutable="no">
        <type><ref refid="sync_8h_1ac92780faa059424120392d0f3bf52b19" kindref="member">Semaphore_t</ref> *</type>
        <definition>Semaphore_t* sem_list[COMM_NUM]</definition>
        <argsstring>[COMM_NUM]</argsstring>
        <name>sem_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/sync/sync.c" line="12" column="13" bodyfile="src/kernel/sync/sync.c" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sync_8c_1af14cdeb4ac131416a4da729869465429" prot="public" static="no" mutable="no">
        <type><ref refid="sync_8h_1a065d9c7d3ffb571b9120503d269ed113" kindref="member">cond_t</ref> *</type>
        <definition>cond_t* cond_list[COMM_NUM]</definition>
        <argsstring>[COMM_NUM]</argsstring>
        <name>cond_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/sync/sync.c" line="13" column="8" bodyfile="src/kernel/sync/sync.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sync_8c_1a5fc1b4edd08805a2a27d85d10b1abe6c" prot="public" static="no" mutable="no">
        <type><ref refid="sync_8h_1a74d94f02486d264c8b29c8860a796d28" kindref="member">barrier_t</ref> *</type>
        <definition>barrier_t* barrier_list[COMM_NUM]</definition>
        <argsstring>[COMM_NUM]</argsstring>
        <name>barrier_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/sync/sync.c" line="14" column="11" bodyfile="src/kernel/sync/sync.c" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sync_8c_1a7c0fbcb4427ca1838c262c390503af4f" prot="public" static="no" mutable="no">
        <type><ref refid="sync_8h_1a4f902d2856a0b3661b438a1cd9bfb666" kindref="member">mbox_t</ref> *</type>
        <definition>mbox_t* mbox_list[COMM_NUM]</definition>
        <argsstring>[COMM_NUM]</argsstring>
        <name>mbox_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/sync/sync.c" line="15" column="8" bodyfile="src/kernel/sync/sync.c" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sync_8c_1ad9e2ca7d2b58883e618085a8389b5b91" prot="public" static="no" mutable="no">
        <type><ref refid="sync_8h_1a5ae9fd101e3be74a3e8fd17058edc515" kindref="member">pcb_mbox_t</ref></type>
        <definition>pcb_mbox_t pcb_mbox[NUM_MAX_PROCESS]</definition>
        <argsstring>[NUM_MAX_PROCESS]</argsstring>
        <name>pcb_mbox</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/sync/sync.c" line="16" column="12" bodyfile="src/kernel/sync/sync.c" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="sync_8c_1aa0bd226ef218a79a2e221ce077f605c6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int find_free</definition>
        <argsstring>(int type)</argsstring>
        <name>find_free</name>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/sync/sync.c" line="18" column="12" bodyfile="src/kernel/sync/sync.c" bodystart="18" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="sync_8c_1afe2045e58893e8db1e64e32aa0711611" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_commop</definition>
        <argsstring>(void *key_id, void *arg, int op)</argsstring>
        <name>k_commop</name>
        <param>
          <type>void *</type>
          <declname>key_id</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/sync/sync.c" line="63" column="5" bodyfile="src/kernel/sync/sync.c" bodystart="63" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="sync_8c_1ad9002f0a50448440ef46fcc2ea02ceb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_semaphore_init</definition>
        <argsstring>(int *key, int sem)</argsstring>
        <name>k_semaphore_init</name>
        <param>
          <type>int *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/sync/sync.c" line="106" column="5" bodyfile="src/kernel/sync/sync.c" bodystart="106" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="sync_8c_1a51d680b00574663a8c4557ecb4ac2b02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_semaphore_p</definition>
        <argsstring>(int key)</argsstring>
        <name>k_semaphore_p</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/sync/sync.c" line="132" column="5" bodyfile="src/kernel/sync/sync.c" bodystart="132" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="sync_8c_1ad3e7e7f87ebb9104b813ddcbf37a6a78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_semaphore_v</definition>
        <argsstring>(int key)</argsstring>
        <name>k_semaphore_v</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/sync/sync.c" line="144" column="5" bodyfile="src/kernel/sync/sync.c" bodystart="144" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="sync_8c_1a112bc96c616984d47cf03da6f04c94ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_semaphore_destroy</definition>
        <argsstring>(int *key)</argsstring>
        <name>k_semaphore_destroy</name>
        <param>
          <type>int *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/sync/sync.c" line="155" column="5" bodyfile="src/kernel/sync/sync.c" bodystart="155" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="sync_8c_1a5c18a15f3a2e6487bab6c43693c76312" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_cond_init</definition>
        <argsstring>(int *key)</argsstring>
        <name>k_cond_init</name>
        <param>
          <type>int *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/sync/sync.c" line="164" column="5" bodyfile="src/kernel/sync/sync.c" bodystart="164" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="sync_8c_1a6991c22329d6a04effd8070cacf633bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_cond_wait</definition>
        <argsstring>(int key)</argsstring>
        <name>k_cond_wait</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/sync/sync.c" line="190" column="5" bodyfile="src/kernel/sync/sync.c" bodystart="190" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="sync_8c_1ab6ee64d011805e837747cf4d0b5cf158" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_cond_signal</definition>
        <argsstring>(int key)</argsstring>
        <name>k_cond_signal</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/sync/sync.c" line="200" column="5" bodyfile="src/kernel/sync/sync.c" bodystart="200" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="sync_8c_1a3c696438609d648f6608d299ae507357" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_cond_broadcast</definition>
        <argsstring>(int key)</argsstring>
        <name>k_cond_broadcast</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/sync/sync.c" line="211" column="5" bodyfile="src/kernel/sync/sync.c" bodystart="211" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="sync_8c_1a75b6bff510a724ac07e5afbd0ae1ac89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_cond_destroy</definition>
        <argsstring>(int *key)</argsstring>
        <name>k_cond_destroy</name>
        <param>
          <type>int *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/sync/sync.c" line="222" column="5" bodyfile="src/kernel/sync/sync.c" bodystart="222" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="sync_8c_1afaa65248a8d678799ddc08dc10306188" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_barrier_init</definition>
        <argsstring>(int *key, int total)</argsstring>
        <name>k_barrier_init</name>
        <param>
          <type>int *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>total</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/sync/sync.c" line="231" column="5" bodyfile="src/kernel/sync/sync.c" bodystart="231" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="sync_8c_1a6d365dc31afc7095b56b702b3090c397" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_barrier_wait</definition>
        <argsstring>(int key)</argsstring>
        <name>k_barrier_wait</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/sync/sync.c" line="259" column="5" bodyfile="src/kernel/sync/sync.c" bodystart="259" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="sync_8c_1ae92e1ad788ccd406933160f2ffb47780" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_barrier_destroy</definition>
        <argsstring>(int *key)</argsstring>
        <name>k_barrier_destroy</name>
        <param>
          <type>int *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/sync/sync.c" line="272" column="5" bodyfile="src/kernel/sync/sync.c" bodystart="272" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="sync_8c_1a515d4acfe510559477bb110678bfffbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_mbox_open</definition>
        <argsstring>(int id_1, int id_2)</argsstring>
        <name>k_mbox_open</name>
        <param>
          <type>int</type>
          <declname>id_1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id_2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/sync/sync.c" line="282" column="5" bodyfile="src/kernel/sync/sync.c" bodystart="282" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="sync_8c_1a08bfc19179bb1e7656d993ea770b1956" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_mbox_close</definition>
        <argsstring>(int mbox_id)</argsstring>
        <name>k_mbox_close</name>
        <param>
          <type>int</type>
          <declname>mbox_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/sync/sync.c" line="316" column="5" bodyfile="src/kernel/sync/sync.c" bodystart="316" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="sync_8c_1a7bb8ff6db004056fd78710f8b40543d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_mbox_send</definition>
        <argsstring>(int key, mbox_t *target, mbox_arg_t *arg)</argsstring>
        <name>k_mbox_send</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="sync_8h_1a4f902d2856a0b3661b438a1cd9bfb666" kindref="member">mbox_t</ref> *</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="sync_8h_1a2ac2f3456050522038aa52e611af13c0" kindref="member">mbox_arg_t</ref> *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/sync/sync.c" line="325" column="5" bodyfile="src/kernel/sync/sync.c" bodystart="325" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="sync_8c_1a9d75e952b9e2ef4f0f9d9ad1a3374573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_mbox_recv</definition>
        <argsstring>(int key, mbox_t *target, mbox_arg_t *arg)</argsstring>
        <name>k_mbox_recv</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="sync_8h_1a4f902d2856a0b3661b438a1cd9bfb666" kindref="member">mbox_t</ref> *</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="sync_8h_1a2ac2f3456050522038aa52e611af13c0" kindref="member">mbox_arg_t</ref> *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/sync/sync.c" line="354" column="5" bodyfile="src/kernel/sync/sync.c" bodystart="354" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="sync_8c_1a46ccee42babda2525ee360fea3da522c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_mbox_try_send</definition>
        <argsstring>(int key, mbox_arg_t *arg)</argsstring>
        <name>k_mbox_try_send</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="sync_8h_1a2ac2f3456050522038aa52e611af13c0" kindref="member">mbox_arg_t</ref> *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/sync/sync.c" line="387" column="5" bodyfile="src/kernel/sync/sync.c" bodystart="387" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="sync_8c_1a90510833af804b78b51917d7df04c6b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_mbox_try_recv</definition>
        <argsstring>(int key, mbox_arg_t *arg)</argsstring>
        <name>k_mbox_try_recv</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="sync_8h_1a2ac2f3456050522038aa52e611af13c0" kindref="member">mbox_arg_t</ref> *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/sync/sync.c" line="397" column="5" bodyfile="src/kernel/sync/sync.c" bodystart="397" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="sync_8c_1a6c5f6aa9763193e42afb7ebd6130e0ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void k_pcb_mbox_init</definition>
        <argsstring>(pcb_mbox_t *target, int owner_id)</argsstring>
        <name>k_pcb_mbox_init</name>
        <param>
          <type><ref refid="sync_8h_1a5ae9fd101e3be74a3e8fd17058edc515" kindref="member">pcb_mbox_t</ref> *</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int</type>
          <declname>owner_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/sync/sync.c" line="407" column="6" bodyfile="src/kernel/sync/sync.c" bodystart="407" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="sync_8c_1ab303d9c3a5c4e2712c644968f4b012de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sys_mailread</definition>
        <argsstring>(void *buf, int len)</argsstring>
        <name>sys_mailread</name>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/sync/sync.c" line="412" column="5" bodyfile="src/kernel/sync/sync.c" bodystart="412" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="sync_8c_1ae16be0c336e7ed1f035243641179ba2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sys_mailwrite</definition>
        <argsstring>(int pid, void *buf, int len)</argsstring>
        <name>sys_mailwrite</name>
        <param>
          <type>int</type>
          <declname>pid</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/sync/sync.c" line="430" column="5" bodyfile="src/kernel/sync/sync.c" bodystart="430" bodyend="445"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="math_8h" kindref="compound">lib/math.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="string_8h" kindref="compound">lib/string.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="lock_8h" kindref="compound">os/lock.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="pcb_8h" kindref="compound">os/pcb.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="sync_8h" kindref="compound">os/sync.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1a14e308b40e59d3eff23814e4e1174807" kindref="member">sem_first_time</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1ad07dc23f32885cdb29bd61e186bac854" kindref="member">cond_first_time</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1a2bb26c973626c745194abcab450e1320" kindref="member">barrier_first_time</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1a17f852105398ae455fe3b021ccf61527" kindref="member">mbox_first_time</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><ref refid="structSemaphore" kindref="compound">Semaphore_t</ref><sp/>*<ref refid="sync_8c_1ac32f003cfdbda84d6d3ddf4c5931401b" kindref="member">sem_list</ref>[<ref refid="sync_8h_1a907bc51b623b28337a15bf6f15074b01" kindref="member">COMM_NUM</ref>];</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><ref refid="structcond" kindref="compound">cond_t</ref><sp/>*<ref refid="sync_8c_1af14cdeb4ac131416a4da729869465429" kindref="member">cond_list</ref>[<ref refid="sync_8h_1a907bc51b623b28337a15bf6f15074b01" kindref="member">COMM_NUM</ref>];</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><ref refid="structbarrier" kindref="compound">barrier_t</ref><sp/>*<ref refid="sync_8c_1a5fc1b4edd08805a2a27d85d10b1abe6c" kindref="member">barrier_list</ref>[<ref refid="sync_8h_1a907bc51b623b28337a15bf6f15074b01" kindref="member">COMM_NUM</ref>];</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><ref refid="structmbox" kindref="compound">mbox_t</ref><sp/>*<ref refid="sync_8c_1a7c0fbcb4427ca1838c262c390503af4f" kindref="member">mbox_list</ref>[<ref refid="sync_8h_1a907bc51b623b28337a15bf6f15074b01" kindref="member">COMM_NUM</ref>];</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><ref refid="structpcb__mbox" kindref="compound">pcb_mbox_t</ref><sp/><ref refid="structpcb__mbox" kindref="compound">pcb_mbox</ref>[<ref refid="pcb_8h_1a03193ee70511b814eb5ff595a92b6dd7" kindref="member">NUM_MAX_PROCESS</ref>];</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>find_free(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fat32_8h_1a1d127017fb298b889f4ba24752d08b8e" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>find<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="fat32_8h_1a1d127017fb298b889f4ba24752d08b8e" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="sync_8h_1a907bc51b623b28337a15bf6f15074b01" kindref="member">COMM_NUM</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="sync_8c_1ac32f003cfdbda84d6d3ddf4c5931401b" kindref="member">sem_list</ref>[i]-&gt;sem_info.initialized)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>find<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="sync_8h_1a907bc51b623b28337a15bf6f15074b01" kindref="member">COMM_NUM</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="sync_8c_1af14cdeb4ac131416a4da729869465429" kindref="member">cond_list</ref>[i]-&gt;cond_info.initialized)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>find<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="sync_8h_1a907bc51b623b28337a15bf6f15074b01" kindref="member">COMM_NUM</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="sync_8c_1a5fc1b4edd08805a2a27d85d10b1abe6c" kindref="member">barrier_list</ref>[i]-&gt;barrier_info.initialized)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>find<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="sync_8h_1a907bc51b623b28337a15bf6f15074b01" kindref="member">COMM_NUM</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="sync_8c_1a7c0fbcb4427ca1838c262c390503af4f" kindref="member">mbox_list</ref>[i]-&gt;mailbox_info.initialized)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>find<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!find)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1afe2045e58893e8db1e64e32aa0711611" kindref="member">k_commop</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*key_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>op)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*key<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)key_id;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(op)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1ad9002f0a50448440ef46fcc2ea02ceb9" kindref="member">k_semaphore_init</ref>(key,<sp/>*(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)arg);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1a51d680b00574663a8c4557ecb4ac2b02" kindref="member">k_semaphore_p</ref>(*key<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1ad3e7e7f87ebb9104b813ddcbf37a6a78" kindref="member">k_semaphore_v</ref>(*key<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1a112bc96c616984d47cf03da6f04c94ee" kindref="member">k_semaphore_destroy</ref>(key);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1afaa65248a8d678799ddc08dc10306188" kindref="member">k_barrier_init</ref>(key,<sp/>*(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)arg);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1a6d365dc31afc7095b56b702b3090c397" kindref="member">k_barrier_wait</ref>(*key<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1ae92e1ad788ccd406933160f2ffb47780" kindref="member">k_barrier_destroy</ref>(key);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1a515d4acfe510559477bb110678bfffbc" kindref="member">k_mbox_open</ref>(*(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)key_id,<sp/>*(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)arg);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1a08bfc19179bb1e7656d993ea770b1956" kindref="member">k_mbox_close</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)key_id);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1a7bb8ff6db004056fd78710f8b40543d5" kindref="member">k_mbox_send</ref>(*key<sp/>-<sp/>1,<sp/><ref refid="types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>(<ref refid="structmbox__arg" kindref="compound">mbox_arg_t</ref><sp/>*)arg);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>10:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1a9d75e952b9e2ef4f0f9d9ad1a3374573" kindref="member">k_mbox_recv</ref>(*key<sp/>-<sp/>1,<sp/><ref refid="types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>(<ref refid="structmbox__arg" kindref="compound">mbox_arg_t</ref><sp/>*)arg);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>11:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1a46ccee42babda2525ee360fea3da522c" kindref="member">k_mbox_try_send</ref>(*key<sp/>-<sp/>1,<sp/>(<ref refid="structmbox__arg" kindref="compound">mbox_arg_t</ref><sp/>*)arg);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>12:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1a90510833af804b78b51917d7df04c6b5" kindref="member">k_mbox_try_recv</ref>(*key<sp/>-<sp/>1,<sp/>(<ref refid="structmbox__arg" kindref="compound">mbox_arg_t</ref><sp/>*)arg);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1ad9002f0a50448440ef46fcc2ea02ceb9" kindref="member">k_semaphore_init</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sem)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="sync_8c_1a14e308b40e59d3eff23814e4e1174807" kindref="member">sem_first_time</ref>)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="sync_8h_1a907bc51b623b28337a15bf6f15074b01" kindref="member">COMM_NUM</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8c_1ac32f003cfdbda84d6d3ddf4c5931401b" kindref="member">sem_list</ref>[i]<sp/>=<sp/>(<ref refid="structSemaphore" kindref="compound">Semaphore_t</ref><sp/>*)<ref refid="mm_8h_1a00b0aa73fb7186a4c940dd83496dd199" kindref="member">k_mm_malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structSemaphore" kindref="compound">Semaphore_t</ref>));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8c_1ac32f003cfdbda84d6d3ddf4c5931401b" kindref="member">sem_list</ref>[i]-&gt;<ref refid="structSemaphore_1a9abb12eed75a68466973ceb4dd6f09fb" kindref="member">sem_info</ref>.<ref refid="structbasic__info_1a965c707f58ce92560224db3d996b7c50" kindref="member">initialized</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a14e308b40e59d3eff23814e4e1174807" kindref="member">sem_first_time</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*key<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-2;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*key<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-3;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sem_i<sp/>=<sp/>find_free(0);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sem_i<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8c_1ac32f003cfdbda84d6d3ddf4c5931401b" kindref="member">sem_list</ref>[sem_i]-&gt;<ref refid="structSemaphore_1a9abb12eed75a68466973ceb4dd6f09fb" kindref="member">sem_info</ref>.<ref refid="structbasic__info_1a9fc747019e8cd575d37b79c5f71f5319" kindref="member">id</ref><sp/>=<sp/>sem_i<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8c_1ac32f003cfdbda84d6d3ddf4c5931401b" kindref="member">sem_list</ref>[sem_i]-&gt;<ref refid="structSemaphore_1a9abb12eed75a68466973ceb4dd6f09fb" kindref="member">sem_info</ref>.<ref refid="structbasic__info_1a965c707f58ce92560224db3d996b7c50" kindref="member">initialized</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8c_1ac32f003cfdbda84d6d3ddf4c5931401b" kindref="member">sem_list</ref>[sem_i]-&gt;<ref refid="structSemaphore_1a72c1db3525816436a9ec101615cd3268" kindref="member">sem</ref><sp/>=<sp/>sem;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>init_list_head(&amp;<ref refid="sync_8c_1ac32f003cfdbda84d6d3ddf4c5931401b" kindref="member">sem_list</ref>[sem_i]-&gt;wait_queue);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>*key<sp/>=<sp/>sem_i<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1a51d680b00574663a8c4557ecb4ac2b02" kindref="member">k_semaphore_p</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="sync_8c_1ac32f003cfdbda84d6d3ddf4c5931401b" kindref="member">sem_list</ref>[key]-&gt;sem_info.initialized)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8c_1ac32f003cfdbda84d6d3ddf4c5931401b" kindref="member">sem_list</ref>[key]-&gt;<ref refid="structSemaphore_1a72c1db3525816436a9ec101615cd3268" kindref="member">sem</ref>--;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="sync_8c_1ac32f003cfdbda84d6d3ddf4c5931401b" kindref="member">sem_list</ref>[key]-&gt;sem<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcb_8h_1ae1882c01875e9da5f9fb2d3dd2b697ec" kindref="member">k_pcb_block</ref>(&amp;(*current_running)-&gt;list,<sp/>&amp;<ref refid="sync_8c_1ac32f003cfdbda84d6d3ddf4c5931401b" kindref="member">sem_list</ref>[key]-&gt;<ref refid="structSemaphore_1a165121d43de7345319d8c5bf4374d584" kindref="member">wait_queue</ref>,<sp/><ref refid="pcb_8h_1a63b43285903b7693f45e3699209d02eaa5c6945e962fca284e243730269169d5e" kindref="member">ENQUEUE_LIST</ref>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcb_8h_1ab235dcbe70f00d25d99f6d0bce4ec087" kindref="member">k_pcb_scheduler</ref>();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1ad3e7e7f87ebb9104b813ddcbf37a6a78" kindref="member">k_semaphore_v</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="sync_8c_1ac32f003cfdbda84d6d3ddf4c5931401b" kindref="member">sem_list</ref>[key]-&gt;sem_info.initialized)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8c_1ac32f003cfdbda84d6d3ddf4c5931401b" kindref="member">sem_list</ref>[key]-&gt;<ref refid="structSemaphore_1a72c1db3525816436a9ec101615cd3268" kindref="member">sem</ref>++;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="sync_8c_1ac32f003cfdbda84d6d3ddf4c5931401b" kindref="member">sem_list</ref>[key]-&gt;sem<sp/>&lt;=<sp/>0<sp/>&amp;&amp;<sp/>!list_is_empty(&amp;<ref refid="sync_8c_1ac32f003cfdbda84d6d3ddf4c5931401b" kindref="member">sem_list</ref>[key]-&gt;wait_queue))<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcb_8h_1a0fe9ee993da3488530422db97ff3728a" kindref="member">k_pcb_unblock</ref>(<ref refid="sync_8c_1ac32f003cfdbda84d6d3ddf4c5931401b" kindref="member">sem_list</ref>[key]-&gt;wait_queue.next,<sp/>&amp;<ref refid="pcb_8h_1a58658ee7ac1edae4ef80e87071be6b3d" kindref="member">ready_queue</ref>,<sp/><ref refid="pcb_8h_1a88409d37561d84ec48058b9f84bb3d5eae79cd7b408cb9c190ad524869ef00c14" kindref="member">UNBLOCK_TO_LIST_STRATEGY</ref>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1a112bc96c616984d47cf03da6f04c94ee" kindref="member">k_semaphore_destroy</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*key)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="sync_8c_1ac32f003cfdbda84d6d3ddf4c5931401b" kindref="member">sem_list</ref>[*key<sp/>-<sp/>1]-&gt;sem_info.initialized)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="string_8h_1aaf442a6d4665859606fb0376506a349c" kindref="member">k_memset</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<ref refid="sync_8c_1ac32f003cfdbda84d6d3ddf4c5931401b" kindref="member">sem_list</ref>[*key<sp/>-<sp/>1],<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structSemaphore" kindref="compound">Semaphore_t</ref><sp/>*));</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>*key<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1a5c18a15f3a2e6487bab6c43693c76312" kindref="member">k_cond_init</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*key)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="sync_8c_1ad07dc23f32885cdb29bd61e186bac854" kindref="member">cond_first_time</ref>)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="sync_8h_1a907bc51b623b28337a15bf6f15074b01" kindref="member">COMM_NUM</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8c_1af14cdeb4ac131416a4da729869465429" kindref="member">cond_list</ref>[i]<sp/>=<sp/>(<ref refid="structcond" kindref="compound">cond_t</ref><sp/>*)<ref refid="mm_8h_1a00b0aa73fb7186a4c940dd83496dd199" kindref="member">k_mm_malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structcond" kindref="compound">cond_t</ref>));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8c_1af14cdeb4ac131416a4da729869465429" kindref="member">cond_list</ref>[i]-&gt;<ref refid="structcond_1a1812237b8900a2f4289c3a7787e1780a" kindref="member">cond_info</ref>.<ref refid="structbasic__info_1a965c707f58ce92560224db3d996b7c50" kindref="member">initialized</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8c_1ad07dc23f32885cdb29bd61e186bac854" kindref="member">cond_first_time</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*key<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-2;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*key<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-3;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cond_i<sp/>=<sp/>find_free(1);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cond_i<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8c_1af14cdeb4ac131416a4da729869465429" kindref="member">cond_list</ref>[cond_i]-&gt;<ref refid="structcond_1a1812237b8900a2f4289c3a7787e1780a" kindref="member">cond_info</ref>.<ref refid="structbasic__info_1a9fc747019e8cd575d37b79c5f71f5319" kindref="member">id</ref><sp/>=<sp/>cond_i<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8c_1af14cdeb4ac131416a4da729869465429" kindref="member">cond_list</ref>[cond_i]-&gt;<ref refid="structcond_1a1812237b8900a2f4289c3a7787e1780a" kindref="member">cond_info</ref>.<ref refid="structbasic__info_1a965c707f58ce92560224db3d996b7c50" kindref="member">initialized</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8c_1af14cdeb4ac131416a4da729869465429" kindref="member">cond_list</ref>[cond_i]-&gt;<ref refid="structcond_1ae9a1a467405aa9c07544374f5034e231" kindref="member">num_wait</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>init_list_head(&amp;<ref refid="sync_8c_1af14cdeb4ac131416a4da729869465429" kindref="member">cond_list</ref>[cond_i]-&gt;wait_queue);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>*key<sp/>=<sp/>cond_i<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1a6991c22329d6a04effd8070cacf633bb" kindref="member">k_cond_wait</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="sync_8c_1af14cdeb4ac131416a4da729869465429" kindref="member">cond_list</ref>[key]-&gt;cond_info.initialized)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8c_1af14cdeb4ac131416a4da729869465429" kindref="member">cond_list</ref>[key]-&gt;<ref refid="structcond_1ae9a1a467405aa9c07544374f5034e231" kindref="member">num_wait</ref>++;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pcb_8h_1ae1882c01875e9da5f9fb2d3dd2b697ec" kindref="member">k_pcb_block</ref>(&amp;(*current_running)-&gt;list,<sp/>&amp;<ref refid="sync_8c_1af14cdeb4ac131416a4da729869465429" kindref="member">cond_list</ref>[key]-&gt;<ref refid="structcond_1a67fe90b2bfec283aea50c6032c08f29d" kindref="member">wait_queue</ref>,<sp/><ref refid="pcb_8h_1a63b43285903b7693f45e3699209d02eaa5c6945e962fca284e243730269169d5e" kindref="member">ENQUEUE_LIST</ref>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pcb_8h_1ab235dcbe70f00d25d99f6d0bce4ec087" kindref="member">k_pcb_scheduler</ref>();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1ab6ee64d011805e837747cf4d0b5cf158" kindref="member">k_cond_signal</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="sync_8c_1af14cdeb4ac131416a4da729869465429" kindref="member">cond_list</ref>[key]-&gt;cond_info.initialized)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="sync_8c_1af14cdeb4ac131416a4da729869465429" kindref="member">cond_list</ref>[key]-&gt;num_wait<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcb_8h_1a0fe9ee993da3488530422db97ff3728a" kindref="member">k_pcb_unblock</ref>(<ref refid="sync_8c_1af14cdeb4ac131416a4da729869465429" kindref="member">cond_list</ref>[key]-&gt;wait_queue.next,<sp/>&amp;<ref refid="pcb_8h_1a58658ee7ac1edae4ef80e87071be6b3d" kindref="member">ready_queue</ref>,<sp/><ref refid="pcb_8h_1a88409d37561d84ec48058b9f84bb3d5eae79cd7b408cb9c190ad524869ef00c14" kindref="member">UNBLOCK_TO_LIST_STRATEGY</ref>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8c_1af14cdeb4ac131416a4da729869465429" kindref="member">cond_list</ref>[key]-&gt;<ref refid="structcond_1ae9a1a467405aa9c07544374f5034e231" kindref="member">num_wait</ref>--;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1a3c696438609d648f6608d299ae507357" kindref="member">k_cond_broadcast</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="sync_8c_1af14cdeb4ac131416a4da729869465429" kindref="member">cond_list</ref>[key]-&gt;cond_info.initialized)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="sync_8c_1af14cdeb4ac131416a4da729869465429" kindref="member">cond_list</ref>[key]-&gt;num_wait<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcb_8h_1a0fe9ee993da3488530422db97ff3728a" kindref="member">k_pcb_unblock</ref>(<ref refid="sync_8c_1af14cdeb4ac131416a4da729869465429" kindref="member">cond_list</ref>[key]-&gt;wait_queue.next,<sp/>&amp;<ref refid="pcb_8h_1a58658ee7ac1edae4ef80e87071be6b3d" kindref="member">ready_queue</ref>,<sp/><ref refid="pcb_8h_1a88409d37561d84ec48058b9f84bb3d5eae79cd7b408cb9c190ad524869ef00c14" kindref="member">UNBLOCK_TO_LIST_STRATEGY</ref>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8c_1af14cdeb4ac131416a4da729869465429" kindref="member">cond_list</ref>[key]-&gt;<ref refid="structcond_1ae9a1a467405aa9c07544374f5034e231" kindref="member">num_wait</ref>--;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1a75b6bff510a724ac07e5afbd0ae1ac89" kindref="member">k_cond_destroy</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*key)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="sync_8c_1af14cdeb4ac131416a4da729869465429" kindref="member">cond_list</ref>[*key<sp/>-<sp/>1]-&gt;cond_info.initialized)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="string_8h_1aaf442a6d4665859606fb0376506a349c" kindref="member">k_memset</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<ref refid="sync_8c_1af14cdeb4ac131416a4da729869465429" kindref="member">cond_list</ref>[*key<sp/>-<sp/>1],<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structcond" kindref="compound">cond_t</ref><sp/>*));</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>*key<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1afaa65248a8d678799ddc08dc10306188" kindref="member">k_barrier_init</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="sync_8c_1a2bb26c973626c745194abcab450e1320" kindref="member">barrier_first_time</ref>)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="sync_8h_1a907bc51b623b28337a15bf6f15074b01" kindref="member">COMM_NUM</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a5fc1b4edd08805a2a27d85d10b1abe6c" kindref="member">barrier_list</ref>[i]<sp/>=<sp/>(<ref refid="structbarrier" kindref="compound">barrier_t</ref><sp/>*)<ref refid="mm_8h_1a00b0aa73fb7186a4c940dd83496dd199" kindref="member">k_mm_malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structbarrier" kindref="compound">barrier_t</ref>));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a5fc1b4edd08805a2a27d85d10b1abe6c" kindref="member">barrier_list</ref>[i]-&gt;<ref refid="structbarrier_1a3ac971f92dc65f4fe9d468a8dee026fa" kindref="member">barrier_info</ref>.<ref refid="structbasic__info_1a965c707f58ce92560224db3d996b7c50" kindref="member">initialized</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a2bb26c973626c745194abcab450e1320" kindref="member">barrier_first_time</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*key<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-2;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*key<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-3;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>barrier_i<sp/>=<sp/>find_free(2);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(barrier_i<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a5fc1b4edd08805a2a27d85d10b1abe6c" kindref="member">barrier_list</ref>[barrier_i]-&gt;<ref refid="structbarrier_1a3ac971f92dc65f4fe9d468a8dee026fa" kindref="member">barrier_info</ref>.<ref refid="structbasic__info_1a9fc747019e8cd575d37b79c5f71f5319" kindref="member">id</ref><sp/>=<sp/>barrier_i<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a5fc1b4edd08805a2a27d85d10b1abe6c" kindref="member">barrier_list</ref>[barrier_i]-&gt;<ref refid="structbarrier_1a3ac971f92dc65f4fe9d468a8dee026fa" kindref="member">barrier_info</ref>.<ref refid="structbasic__info_1a965c707f58ce92560224db3d996b7c50" kindref="member">initialized</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a5fc1b4edd08805a2a27d85d10b1abe6c" kindref="member">barrier_list</ref>[barrier_i]-&gt;<ref refid="structbarrier_1a94e6627a244819a7aa2f111a93167f99" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a5fc1b4edd08805a2a27d85d10b1abe6c" kindref="member">barrier_list</ref>[barrier_i]-&gt;<ref refid="structbarrier_1af62bd297c2aa0803cb0081c90d97fa10" kindref="member">total</ref><sp/>=<sp/>total;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a5fc1b4edd08805a2a27d85d10b1abe6c" kindref="member">barrier_list</ref>[barrier_i]-&gt;<ref refid="structbarrier_1a369d0aa1244db2f06bdf6b6197ef21ed" kindref="member">cond_id</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a5c18a15f3a2e6487bab6c43693c76312" kindref="member">k_cond_init</ref>(&amp;<ref refid="sync_8c_1a5fc1b4edd08805a2a27d85d10b1abe6c" kindref="member">barrier_list</ref>[barrier_i]-&gt;cond_id);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>*key<sp/>=<sp/>barrier_i<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1a6d365dc31afc7095b56b702b3090c397" kindref="member">k_barrier_wait</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="sync_8c_1a5fc1b4edd08805a2a27d85d10b1abe6c" kindref="member">barrier_list</ref>[key]-&gt;barrier_info.initialized)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((++<ref refid="sync_8c_1a5fc1b4edd08805a2a27d85d10b1abe6c" kindref="member">barrier_list</ref>[key]-&gt;count)<sp/>==<sp/><ref refid="sync_8c_1a5fc1b4edd08805a2a27d85d10b1abe6c" kindref="member">barrier_list</ref>[key]-&gt;total)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a5fc1b4edd08805a2a27d85d10b1abe6c" kindref="member">barrier_list</ref>[key]-&gt;<ref refid="structbarrier_1a94e6627a244819a7aa2f111a93167f99" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a3c696438609d648f6608d299ae507357" kindref="member">k_cond_broadcast</ref>(<ref refid="sync_8c_1a5fc1b4edd08805a2a27d85d10b1abe6c" kindref="member">barrier_list</ref>[key]-&gt;cond_id<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a6991c22329d6a04effd8070cacf633bb" kindref="member">k_cond_wait</ref>(<ref refid="sync_8c_1a5fc1b4edd08805a2a27d85d10b1abe6c" kindref="member">barrier_list</ref>[key]-&gt;cond_id<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1ae92e1ad788ccd406933160f2ffb47780" kindref="member">k_barrier_destroy</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*key)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="sync_8c_1a5fc1b4edd08805a2a27d85d10b1abe6c" kindref="member">barrier_list</ref>[*key<sp/>-<sp/>1]-&gt;barrier_info.initialized)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a75b6bff510a724ac07e5afbd0ae1ac89" kindref="member">k_cond_destroy</ref>(&amp;<ref refid="sync_8c_1a5fc1b4edd08805a2a27d85d10b1abe6c" kindref="member">barrier_list</ref>[*key<sp/>-<sp/>1]-&gt;cond_id);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="string_8h_1aaf442a6d4665859606fb0376506a349c" kindref="member">k_memset</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<ref refid="sync_8c_1a5fc1b4edd08805a2a27d85d10b1abe6c" kindref="member">barrier_list</ref>[*key<sp/>-<sp/>1],<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structbarrier" kindref="compound">barrier_t</ref><sp/>*));</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>*key<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1a515d4acfe510559477bb110678bfffbc" kindref="member">k_mbox_open</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>id_1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>id_2)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="sync_8c_1a17f852105398ae455fe3b021ccf61527" kindref="member">mbox_first_time</ref>)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="sync_8h_1a907bc51b623b28337a15bf6f15074b01" kindref="member">COMM_NUM</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a7c0fbcb4427ca1838c262c390503af4f" kindref="member">mbox_list</ref>[i]<sp/>=<sp/>(<ref refid="structmbox" kindref="compound">mbox_t</ref><sp/>*)<ref refid="mm_8h_1a00b0aa73fb7186a4c940dd83496dd199" kindref="member">k_mm_malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structmbox" kindref="compound">mbox_t</ref>));</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a7c0fbcb4427ca1838c262c390503af4f" kindref="member">mbox_list</ref>[i]-&gt;<ref refid="structmbox_1afc85c6dec5627f1f1836591b125c2f58" kindref="member">mailbox_info</ref>.<ref refid="structbasic__info_1a965c707f58ce92560224db3d996b7c50" kindref="member">initialized</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a17f852105398ae455fe3b021ccf61527" kindref="member">mbox_first_time</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="sync_8h_1a907bc51b623b28337a15bf6f15074b01" kindref="member">COMM_NUM</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="sync_8c_1a7c0fbcb4427ca1838c262c390503af4f" kindref="member">mbox_list</ref>[i]-&gt;mailbox_info.initialized<sp/>&amp;&amp;<sp/>(<ref refid="sync_8c_1a7c0fbcb4427ca1838c262c390503af4f" kindref="member">mbox_list</ref>[i]-&gt;<ref refid="structmbox_1aeba60a760c7d5b4aca44fee744e0c4a9" kindref="member">id</ref>[0]<sp/>==<sp/>id_1<sp/>||<sp/><ref refid="sync_8c_1a7c0fbcb4427ca1838c262c390503af4f" kindref="member">mbox_list</ref>[i]-&gt;<ref refid="structmbox_1aeba60a760c7d5b4aca44fee744e0c4a9" kindref="member">id</ref>[2]<sp/>==<sp/>id_2))<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mbox_i<sp/>=<sp/>find_free(3);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mbox_i<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a7c0fbcb4427ca1838c262c390503af4f" kindref="member">mbox_list</ref>[mbox_i]-&gt;<ref refid="structmbox_1afc85c6dec5627f1f1836591b125c2f58" kindref="member">mailbox_info</ref>.<ref refid="structbasic__info_1a9fc747019e8cd575d37b79c5f71f5319" kindref="member">id</ref><sp/>=<sp/>mbox_i<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a7c0fbcb4427ca1838c262c390503af4f" kindref="member">mbox_list</ref>[mbox_i]-&gt;<ref refid="structmbox_1afc85c6dec5627f1f1836591b125c2f58" kindref="member">mailbox_info</ref>.<ref refid="structbasic__info_1a965c707f58ce92560224db3d996b7c50" kindref="member">initialized</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a7c0fbcb4427ca1838c262c390503af4f" kindref="member">mbox_list</ref>[mbox_i]-&gt;<ref refid="structmbox_1aeba60a760c7d5b4aca44fee744e0c4a9" kindref="member">id</ref>[0]<sp/>=<sp/>id_1;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a7c0fbcb4427ca1838c262c390503af4f" kindref="member">mbox_list</ref>[mbox_i]-&gt;<ref refid="structmbox_1aeba60a760c7d5b4aca44fee744e0c4a9" kindref="member">id</ref>[1]<sp/>=<sp/>id_2;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="string_8h_1aaf442a6d4665859606fb0376506a349c" kindref="member">k_memset</ref>(<ref refid="sync_8c_1a7c0fbcb4427ca1838c262c390503af4f" kindref="member">mbox_list</ref>[mbox_i]-&gt;buff,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="sync_8c_1a7c0fbcb4427ca1838c262c390503af4f" kindref="member">mbox_list</ref>[mbox_i]-&gt;buff));</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a7c0fbcb4427ca1838c262c390503af4f" kindref="member">mbox_list</ref>[mbox_i]-&gt;<ref refid="structmbox_1a5f66d0bd82ad9778daeb3b7694e0b009" kindref="member">read_head</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a7c0fbcb4427ca1838c262c390503af4f" kindref="member">mbox_list</ref>[mbox_i]-&gt;<ref refid="structmbox_1a8568de79041c22de7225c7edf0258fd5" kindref="member">write_tail</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a7c0fbcb4427ca1838c262c390503af4f" kindref="member">mbox_list</ref>[mbox_i]-&gt;<ref refid="structmbox_1a21325cc2f2a8320c2b34a48f84cc50aa" kindref="member">used_units</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a7c0fbcb4427ca1838c262c390503af4f" kindref="member">mbox_list</ref>[mbox_i]-&gt;<ref refid="structmbox_1aae5b90a884ecbb796d19c91f6928e5de" kindref="member">full_cond_id</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a7c0fbcb4427ca1838c262c390503af4f" kindref="member">mbox_list</ref>[mbox_i]-&gt;<ref refid="structmbox_1ae910da2904704ba65ffc2f2dac861b0d" kindref="member">empty_cond_id</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a5c18a15f3a2e6487bab6c43693c76312" kindref="member">k_cond_init</ref>(&amp;<ref refid="sync_8c_1a7c0fbcb4427ca1838c262c390503af4f" kindref="member">mbox_list</ref>[mbox_i]-&gt;full_cond_id);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a5c18a15f3a2e6487bab6c43693c76312" kindref="member">k_cond_init</ref>(&amp;<ref refid="sync_8c_1a7c0fbcb4427ca1838c262c390503af4f" kindref="member">mbox_list</ref>[mbox_i]-&gt;empty_cond_id);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_memset(mbox_list[mbox_i]-&gt;cited_pid,<sp/>0,<sp/>sizeof(mbox_list[mbox_i]-&gt;cited_pid));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mbox_list[mbox_i]-&gt;cited_num<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mbox_i;</highlight></codeline>
<codeline lineno="314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1a08bfc19179bb1e7656d993ea770b1956" kindref="member">k_mbox_close</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mbox_id)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmbox" kindref="compound">mbox_t</ref><sp/>*target<sp/>=<sp/><ref refid="sync_8c_1a7c0fbcb4427ca1838c262c390503af4f" kindref="member">mbox_list</ref>[mbox_id];</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>target-&gt;<ref refid="structmbox_1aeba60a760c7d5b4aca44fee744e0c4a9" kindref="member">id</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>target-&gt;<ref refid="structmbox_1aeba60a760c7d5b4aca44fee744e0c4a9" kindref="member">id</ref>[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a75b6bff510a724ac07e5afbd0ae1ac89" kindref="member">k_cond_destroy</ref>(&amp;target-&gt;<ref refid="structmbox_1aae5b90a884ecbb796d19c91f6928e5de" kindref="member">full_cond_id</ref>);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a75b6bff510a724ac07e5afbd0ae1ac89" kindref="member">k_cond_destroy</ref>(&amp;target-&gt;<ref refid="structmbox_1ae910da2904704ba65ffc2f2dac861b0d" kindref="member">empty_cond_id</ref>);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1a7bb8ff6db004056fd78710f8b40543d5" kindref="member">k_mbox_send</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key,<sp/><ref refid="structmbox" kindref="compound">mbox_t</ref><sp/>*target,<sp/><ref refid="structmbox__arg" kindref="compound">mbox_arg_t</ref><sp/>*arg)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!target)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target<sp/>=<sp/><ref refid="sync_8c_1a7c0fbcb4427ca1838c262c390503af4f" kindref="member">mbox_list</ref>[key];</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!target-&gt;<ref refid="structmbox_1afc85c6dec5627f1f1836591b125c2f58" kindref="member">mailbox_info</ref>.<ref refid="structbasic__info_1a965c707f58ce92560224db3d996b7c50" kindref="member">initialized</ref>)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg-&gt;<ref refid="structmbox__arg_1a1573a71c8f4109aaad13fc21e59f9398" kindref="member">sleep_operation</ref><sp/>==<sp/>1<sp/>&amp;&amp;<sp/><ref refid="sync_8c_1a46ccee42babda2525ee360fea3da522c" kindref="member">k_mbox_try_send</ref>(key,<sp/>arg)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-2;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blocked_time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(arg-&gt;<ref refid="structmbox__arg_1aa8428b0b78a77ef3e00b2454cd8954e7" kindref="member">msg_length</ref><sp/>&gt;<sp/><ref refid="sync_8h_1ad00f49c62943bc384ea35f471a0aa19c" kindref="member">MBOX_MSG_MAX_LEN</ref><sp/>-<sp/>target-&gt;<ref refid="structmbox_1a21325cc2f2a8320c2b34a48f84cc50aa" kindref="member">used_units</ref>)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blocked_time++;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a6991c22329d6a04effd8070cacf633bb" kindref="member">k_cond_wait</ref>(target-&gt;<ref refid="structmbox_1aae5b90a884ecbb796d19c91f6928e5de" kindref="member">full_cond_id</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left_space<sp/>=<sp/><ref refid="sync_8h_1ad00f49c62943bc384ea35f471a0aa19c" kindref="member">MBOX_MSG_MAX_LEN</ref><sp/>-<sp/>(target-&gt;<ref refid="structmbox_1a8568de79041c22de7225c7edf0258fd5" kindref="member">write_tail</ref><sp/>+<sp/>arg-&gt;<ref refid="structmbox__arg_1aa8428b0b78a77ef3e00b2454cd8954e7" kindref="member">msg_length</ref>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left_space<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="string_8h_1a4985196d8a63d22e320cf33d904d2f92" kindref="member">k_memcpy</ref>((uint8_t<sp/>*)target-&gt;<ref refid="structmbox_1a13bcf1720e9456929d17c7966d81a9e0" kindref="member">buff</ref><sp/>+<sp/>target-&gt;<ref refid="structmbox_1a8568de79041c22de7225c7edf0258fd5" kindref="member">write_tail</ref>,<sp/>arg-&gt;<ref refid="structmbox__arg_1a867ce7c71bddb19af981d3a370b4b41d" kindref="member">msg</ref>,<sp/><ref refid="sync_8h_1ad00f49c62943bc384ea35f471a0aa19c" kindref="member">MBOX_MSG_MAX_LEN</ref><sp/>-<sp/>target-&gt;<ref refid="structmbox_1a8568de79041c22de7225c7edf0258fd5" kindref="member">write_tail</ref>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="string_8h_1a4985196d8a63d22e320cf33d904d2f92" kindref="member">k_memcpy</ref>((uint8_t<sp/>*)target-&gt;<ref refid="structmbox_1a13bcf1720e9456929d17c7966d81a9e0" kindref="member">buff</ref>,<sp/>arg-&gt;<ref refid="structmbox__arg_1a867ce7c71bddb19af981d3a370b4b41d" kindref="member">msg</ref><sp/>+<sp/><ref refid="sync_8h_1ad00f49c62943bc384ea35f471a0aa19c" kindref="member">MBOX_MSG_MAX_LEN</ref><sp/>-<sp/>target-&gt;<ref refid="structmbox_1a8568de79041c22de7225c7edf0258fd5" kindref="member">write_tail</ref>,<sp/>-left_space);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="structmbox_1a8568de79041c22de7225c7edf0258fd5" kindref="member">write_tail</ref><sp/>=<sp/>-left_space;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="string_8h_1a4985196d8a63d22e320cf33d904d2f92" kindref="member">k_memcpy</ref>((uint8_t<sp/>*)target-&gt;<ref refid="structmbox_1a13bcf1720e9456929d17c7966d81a9e0" kindref="member">buff</ref><sp/>+<sp/>target-&gt;<ref refid="structmbox_1a8568de79041c22de7225c7edf0258fd5" kindref="member">write_tail</ref>,<sp/>arg-&gt;<ref refid="structmbox__arg_1a867ce7c71bddb19af981d3a370b4b41d" kindref="member">msg</ref>,<sp/>arg-&gt;<ref refid="structmbox__arg_1aa8428b0b78a77ef3e00b2454cd8954e7" kindref="member">msg_length</ref>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="structmbox_1a8568de79041c22de7225c7edf0258fd5" kindref="member">write_tail</ref><sp/>+=<sp/>arg-&gt;<ref refid="structmbox__arg_1aa8428b0b78a77ef3e00b2454cd8954e7" kindref="member">msg_length</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>target-&gt;<ref refid="structmbox_1a21325cc2f2a8320c2b34a48f84cc50aa" kindref="member">used_units</ref><sp/>+=<sp/>arg-&gt;<ref refid="structmbox__arg_1aa8428b0b78a77ef3e00b2454cd8954e7" kindref="member">msg_length</ref>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a3c696438609d648f6608d299ae507357" kindref="member">k_cond_broadcast</ref>(target-&gt;<ref refid="structmbox_1ae910da2904704ba65ffc2f2dac861b0d" kindref="member">empty_cond_id</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arg-&gt;<ref refid="structmbox__arg_1aa8428b0b78a77ef3e00b2454cd8954e7" kindref="member">msg_length</ref>;</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1a9d75e952b9e2ef4f0f9d9ad1a3374573" kindref="member">k_mbox_recv</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key,<sp/><ref refid="structmbox" kindref="compound">mbox_t</ref><sp/>*target,<sp/><ref refid="structmbox__arg" kindref="compound">mbox_arg_t</ref><sp/>*arg)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!target)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target<sp/>=<sp/><ref refid="sync_8c_1a7c0fbcb4427ca1838c262c390503af4f" kindref="member">mbox_list</ref>[key];</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!target-&gt;<ref refid="structmbox_1afc85c6dec5627f1f1836591b125c2f58" kindref="member">mailbox_info</ref>.<ref refid="structbasic__info_1a965c707f58ce92560224db3d996b7c50" kindref="member">initialized</ref>)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg-&gt;<ref refid="structmbox__arg_1a1573a71c8f4109aaad13fc21e59f9398" kindref="member">sleep_operation</ref><sp/>==<sp/>1<sp/>&amp;&amp;<sp/><ref refid="sync_8c_1a90510833af804b78b51917d7df04c6b5" kindref="member">k_mbox_try_recv</ref>(key,<sp/>arg)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-2;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blocked_time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(arg-&gt;<ref refid="structmbox__arg_1aa8428b0b78a77ef3e00b2454cd8954e7" kindref="member">msg_length</ref><sp/>&gt;<sp/>target-&gt;<ref refid="structmbox_1a21325cc2f2a8320c2b34a48f84cc50aa" kindref="member">used_units</ref>)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blocked_time++;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a6991c22329d6a04effd8070cacf633bb" kindref="member">k_cond_wait</ref>(target-&gt;<ref refid="structmbox_1ae910da2904704ba65ffc2f2dac861b0d" kindref="member">empty_cond_id</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left_space<sp/>=<sp/><ref refid="sync_8h_1ad00f49c62943bc384ea35f471a0aa19c" kindref="member">MBOX_MSG_MAX_LEN</ref><sp/>-<sp/>(target-&gt;<ref refid="structmbox_1a5f66d0bd82ad9778daeb3b7694e0b009" kindref="member">read_head</ref><sp/>+<sp/>arg-&gt;<ref refid="structmbox__arg_1aa8428b0b78a77ef3e00b2454cd8954e7" kindref="member">msg_length</ref>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left_space<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="string_8h_1a4985196d8a63d22e320cf33d904d2f92" kindref="member">k_memcpy</ref>((uint8_t<sp/>*)arg-&gt;<ref refid="structmbox__arg_1a867ce7c71bddb19af981d3a370b4b41d" kindref="member">msg</ref>,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*)target-&gt;<ref refid="structmbox_1a13bcf1720e9456929d17c7966d81a9e0" kindref="member">buff</ref><sp/>+<sp/>target-&gt;<ref refid="structmbox_1a5f66d0bd82ad9778daeb3b7694e0b009" kindref="member">read_head</ref>,<sp/><ref refid="sync_8h_1ad00f49c62943bc384ea35f471a0aa19c" kindref="member">MBOX_MSG_MAX_LEN</ref><sp/>-<sp/>target-&gt;<ref refid="structmbox_1a5f66d0bd82ad9778daeb3b7694e0b009" kindref="member">read_head</ref>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="string_8h_1a4985196d8a63d22e320cf33d904d2f92" kindref="member">k_memcpy</ref>((uint8_t<sp/>*)arg-&gt;<ref refid="structmbox__arg_1a867ce7c71bddb19af981d3a370b4b41d" kindref="member">msg</ref><sp/>+<sp/><ref refid="sync_8h_1ad00f49c62943bc384ea35f471a0aa19c" kindref="member">MBOX_MSG_MAX_LEN</ref><sp/>-<sp/>target-&gt;<ref refid="structmbox_1a5f66d0bd82ad9778daeb3b7694e0b009" kindref="member">read_head</ref>,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*)target-&gt;<ref refid="structmbox_1a13bcf1720e9456929d17c7966d81a9e0" kindref="member">buff</ref>,<sp/>-left_space);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="structmbox_1a5f66d0bd82ad9778daeb3b7694e0b009" kindref="member">read_head</ref><sp/>=<sp/>-left_space;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="string_8h_1a4985196d8a63d22e320cf33d904d2f92" kindref="member">k_memcpy</ref>((uint8_t<sp/>*)arg-&gt;<ref refid="structmbox__arg_1a867ce7c71bddb19af981d3a370b4b41d" kindref="member">msg</ref>,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*)target-&gt;<ref refid="structmbox_1a13bcf1720e9456929d17c7966d81a9e0" kindref="member">buff</ref><sp/>+<sp/>target-&gt;<ref refid="structmbox_1a5f66d0bd82ad9778daeb3b7694e0b009" kindref="member">read_head</ref>,<sp/>arg-&gt;<ref refid="structmbox__arg_1aa8428b0b78a77ef3e00b2454cd8954e7" kindref="member">msg_length</ref>);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="structmbox_1a5f66d0bd82ad9778daeb3b7694e0b009" kindref="member">read_head</ref><sp/>+=<sp/>arg-&gt;<ref refid="structmbox__arg_1aa8428b0b78a77ef3e00b2454cd8954e7" kindref="member">msg_length</ref>;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>target-&gt;<ref refid="structmbox_1a21325cc2f2a8320c2b34a48f84cc50aa" kindref="member">used_units</ref><sp/>-=<sp/>arg-&gt;<ref refid="structmbox__arg_1aa8428b0b78a77ef3e00b2454cd8954e7" kindref="member">msg_length</ref>;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8c_1a3c696438609d648f6608d299ae507357" kindref="member">k_cond_broadcast</ref>(target-&gt;<ref refid="structmbox_1aae5b90a884ecbb796d19c91f6928e5de" kindref="member">full_cond_id</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(target-&gt;<ref refid="structmbox_1a5f66d0bd82ad9778daeb3b7694e0b009" kindref="member">read_head</ref><sp/>==<sp/>target-&gt;<ref refid="structmbox_1a8568de79041c22de7225c7edf0258fd5" kindref="member">write_tail</ref>)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arg-&gt;<ref refid="structmbox__arg_1aa8428b0b78a77ef3e00b2454cd8954e7" kindref="member">msg_length</ref>;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1a46ccee42babda2525ee360fea3da522c" kindref="member">k_mbox_try_send</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key,<sp/><ref refid="structmbox__arg" kindref="compound">mbox_arg_t</ref><sp/>*arg)<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="sync_8c_1a7c0fbcb4427ca1838c262c390503af4f" kindref="member">mbox_list</ref>[key]-&gt;mailbox_info.initialized)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg-&gt;<ref refid="structmbox__arg_1aa8428b0b78a77ef3e00b2454cd8954e7" kindref="member">msg_length</ref><sp/>&gt;<sp/><ref refid="sync_8h_1ad00f49c62943bc384ea35f471a0aa19c" kindref="member">MBOX_MSG_MAX_LEN</ref><sp/>-<sp/><ref refid="sync_8c_1a7c0fbcb4427ca1838c262c390503af4f" kindref="member">mbox_list</ref>[key]-&gt;<ref refid="structmbox_1a21325cc2f2a8320c2b34a48f84cc50aa" kindref="member">used_units</ref>)<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-2;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1a90510833af804b78b51917d7df04c6b5" kindref="member">k_mbox_try_recv</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key,<sp/><ref refid="structmbox__arg" kindref="compound">mbox_arg_t</ref><sp/>*arg)<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="sync_8c_1a7c0fbcb4427ca1838c262c390503af4f" kindref="member">mbox_list</ref>[key]-&gt;mailbox_info.initialized)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg-&gt;<ref refid="structmbox__arg_1aa8428b0b78a77ef3e00b2454cd8954e7" kindref="member">msg_length</ref><sp/>&gt;<sp/><ref refid="sync_8c_1a7c0fbcb4427ca1838c262c390503af4f" kindref="member">mbox_list</ref>[key]-&gt;<ref refid="structmbox_1a21325cc2f2a8320c2b34a48f84cc50aa" kindref="member">used_units</ref>)<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-2;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1a6c5f6aa9763193e42afb7ebd6130e0ed" kindref="member">k_pcb_mbox_init</ref>(<ref refid="structpcb__mbox" kindref="compound">pcb_mbox_t</ref><sp/>*target,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>owner_id)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="string_8h_1aaf442a6d4665859606fb0376506a349c" kindref="member">k_memset</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)target,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structpcb__mbox" kindref="compound">pcb_mbox_t</ref>));</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>target-&gt;pcb_i<sp/>=<sp/>owner_id;</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1ab303d9c3a5c4e2712c644968f4b012de" kindref="member">sys_mailread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structbuf" kindref="compound">buf</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpcb__mbox" kindref="compound">pcb_mbox_t</ref><sp/>*target<sp/>=<sp/>(*current_running)-&gt;mbox;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(target-&gt;<ref refid="structpcb__mbox_1a8850e9d3e80ca72aab6f57303c1a8b1a" kindref="member">used_units</ref>)<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/><ref refid="sync_8h_1aa71288aa3193a457dc75fb14746dbf00" kindref="member">PCB_MBOX_MSG_MAX_LEN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/><ref refid="sync_8h_1aa71288aa3193a457dc75fb14746dbf00" kindref="member">PCB_MBOX_MSG_MAX_LEN</ref>;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>str_len<sp/>=<sp/><ref refid="string_8h_1ae096c40164c6e072e600751bd7151fb9" kindref="member">k_strlen</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)target-&gt;<ref refid="structpcb__mbox_1a3669c197b5397b29bff5f9911e002c24" kindref="member">buff</ref>[target-&gt;<ref refid="structpcb__mbox_1aac48a5f17c5675a784d82c657d3f2df9" kindref="member">read_head</ref>]);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="string_8h_1a4985196d8a63d22e320cf33d904d2f92" kindref="member">k_memcpy</ref>((uint8_t<sp/>*)<ref refid="structbuf" kindref="compound">buf</ref>,<sp/>(uint8_t<sp/>*)target-&gt;<ref refid="structpcb__mbox_1a3669c197b5397b29bff5f9911e002c24" kindref="member">buff</ref>[target-&gt;<ref refid="structpcb__mbox_1aac48a5f17c5675a784d82c657d3f2df9" kindref="member">read_head</ref>],<sp/><ref refid="math_8h_1a546f06262919d41fdb238bb26548cdd5" kindref="member">k_min</ref>(len,<sp/>str_len));</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>target-&gt;<ref refid="structpcb__mbox_1aac48a5f17c5675a784d82c657d3f2df9" kindref="member">read_head</ref><sp/>=<sp/>(target-&gt;<ref refid="structpcb__mbox_1aac48a5f17c5675a784d82c657d3f2df9" kindref="member">read_head</ref><sp/>+<sp/>1)<sp/>%<sp/><ref refid="sync_8h_1a7ec2ad5d75dada13055475c42d110f17" kindref="member">PCB_MBOX_MAX_MSG_NUM</ref>;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>target-&gt;<ref refid="structpcb__mbox_1a8850e9d3e80ca72aab6f57303c1a8b1a" kindref="member">used_units</ref>--;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sync_8c_1ae16be0c336e7ed1f035243641179ba2a" kindref="member">sys_mailwrite</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pid,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structbuf" kindref="compound">buf</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpcb__mbox" kindref="compound">pcb_mbox_t</ref><sp/>*target<sp/>=<sp/>(*current_running)-&gt;mbox;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(target-&gt;<ref refid="structpcb__mbox_1a8850e9d3e80ca72aab6f57303c1a8b1a" kindref="member">used_units</ref><sp/>==<sp/><ref refid="sync_8h_1a7ec2ad5d75dada13055475c42d110f17" kindref="member">PCB_MBOX_MAX_MSG_NUM</ref>)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/><ref refid="sync_8h_1aa71288aa3193a457dc75fb14746dbf00" kindref="member">PCB_MBOX_MSG_MAX_LEN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/><ref refid="sync_8h_1aa71288aa3193a457dc75fb14746dbf00" kindref="member">PCB_MBOX_MSG_MAX_LEN</ref>;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="string_8h_1a4985196d8a63d22e320cf33d904d2f92" kindref="member">k_memcpy</ref>((uint8_t<sp/>*)target-&gt;<ref refid="structpcb__mbox_1a3669c197b5397b29bff5f9911e002c24" kindref="member">buff</ref>[target-&gt;<ref refid="structpcb__mbox_1a72a2bab8ebceb566d66d342839baefad" kindref="member">write_head</ref>],<sp/>(uint8_t<sp/>*)<ref refid="structbuf" kindref="compound">buf</ref>,<sp/>len);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>target-&gt;<ref refid="structpcb__mbox_1a72a2bab8ebceb566d66d342839baefad" kindref="member">write_head</ref><sp/>=<sp/>(target-&gt;<ref refid="structpcb__mbox_1a72a2bab8ebceb566d66d342839baefad" kindref="member">write_head</ref><sp/>+<sp/>1)<sp/>%<sp/><ref refid="sync_8h_1a7ec2ad5d75dada13055475c42d110f17" kindref="member">PCB_MBOX_MAX_MSG_NUM</ref>;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>target-&gt;<ref refid="structpcb__mbox_1a8850e9d3e80ca72aab6f57303c1a8b1a" kindref="member">used_units</ref>++;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/kernel/sync/sync.c"/>
  </compounddef>
</doxygen>
