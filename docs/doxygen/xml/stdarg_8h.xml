<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="zh">
  <compounddef id="stdarg_8h" kind="file" language="C++">
    <compoundname>stdarg.h</compoundname>
    <includedby refid="stdio_8h" local="no">src/include/lib/stdio.h</includedby>
    <includedby refid="printk_8c" local="no">src/lib/printk.c</includedby>
    <invincdepgraph>
      <node id="5">
        <label>src/fs/fs.c</label>
        <link refid="fs_8c"/>
      </node>
      <node id="4">
        <label>src/drivers/screen/screen.c</label>
        <link refid="screen_8c"/>
      </node>
      <node id="2">
        <label>src/include/lib/stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>src/lib/printk.c</label>
        <link refid="printk_8c"/>
      </node>
      <node id="11">
        <label>src/kernel/sys/pcb.c</label>
        <link refid="pcb_8c"/>
      </node>
      <node id="10">
        <label>src/init/main.c</label>
        <link refid="main_8c"/>
      </node>
      <node id="8">
        <label>src/kernel/irq/irq.c</label>
        <link refid="irq_8c"/>
      </node>
      <node id="9">
        <label>src/kernel/mm/mm.c</label>
        <link refid="mm_8c"/>
      </node>
      <node id="7">
        <label>src/drivers/virtio/virtio_blk.c</label>
        <link refid="virtio__blk_8c"/>
      </node>
      <node id="3">
        <label>src/arch/riscv/kernel/init/stack.c</label>
        <link refid="stack_8c"/>
      </node>
      <node id="1">
        <label>src/include/lib/stdarg.h</label>
        <link refid="stdarg_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>src/include/lib/assert.h</label>
        <link refid="assert_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="stdarg_8h_1a8988b1f4b3f4ffef267962f5811f6031" prot="public" static="no">
        <name>_VA_LIST</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/lib/stdarg.h" line="5" column="9" bodyfile="src/include/lib/stdarg.h" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdarg_8h_1acb8ed71baba567b5548b6a0a64d6ea85" prot="public" static="no">
        <name>va_start</name>
        <param><defname>ap</defname></param>
        <param><defname>param</defname></param>
        <initializer>__builtin_va_start(ap, param)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/lib/stdarg.h" line="7" column="10" bodyfile="src/include/lib/stdarg.h" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdarg_8h_1acd9b3b9085ec072324c5fdac2b40304e" prot="public" static="no">
        <name>va_end</name>
        <param><defname>ap</defname></param>
        <initializer>__builtin_va_end(ap)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/lib/stdarg.h" line="8" column="9" bodyfile="src/include/lib/stdarg.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdarg_8h_1a81ebe6ea6253b0c6618e29de70fe10eb" prot="public" static="no">
        <name>va_arg</name>
        <param><defname>ap</defname></param>
        <param><defname>type</defname></param>
        <initializer>__builtin_va_arg(ap, <ref refid="fat32_8h_1a1d127017fb298b889f4ba24752d08b8e" kindref="member">type</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/lib/stdarg.h" line="9" column="9" bodyfile="src/include/lib/stdarg.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdarg_8h_1a976ad7c714ea97222be72c9c710915a0" prot="public" static="no">
        <name>__va_copy</name>
        <param><defname>d</defname></param>
        <param><defname>s</defname></param>
        <initializer>__builtin_va_copy(d, s)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/lib/stdarg.h" line="14" column="9" bodyfile="src/include/lib/stdarg.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdarg_8h_1a19fd5658c088617859d4a89c657ec5cc" prot="public" static="no">
        <name>va_copy</name>
        <param><defname>dest</defname></param>
        <param><defname>src</defname></param>
        <initializer>__builtin_va_copy(dest, src)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/lib/stdarg.h" line="17" column="9" bodyfile="src/include/lib/stdarg.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdarg_8h_1a738c42093fee248588075769434481f1" prot="public" static="no">
        <name>__GNUC_VA_LIST</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/lib/stdarg.h" line="22" column="9" bodyfile="src/include/lib/stdarg.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="stdarg_8h_1af53f622e3b6c080daeb167c1955d7ec1" prot="public" static="no">
        <type>__builtin_va_list</type>
        <definition>typedef __builtin_va_list va_list</definition>
        <argsstring></argsstring>
        <name>va_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/lib/stdarg.h" line="4" column="27" bodyfile="src/include/lib/stdarg.h" bodystart="4" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdarg_8h_1ab2a2078340888ab219073daba0853b5a" prot="public" static="no">
        <type>__builtin_va_list</type>
        <definition>typedef __builtin_va_list __gnuc_va_list</definition>
        <argsstring></argsstring>
        <name>__gnuc_va_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/lib/stdarg.h" line="24" column="27" bodyfile="src/include/lib/stdarg.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_VA_LIST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="stdarg_8h_1af53f622e3b6c080daeb167c1955d7ec1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>__builtin_va_list<sp/><ref refid="stdarg_8h_1af53f622e3b6c080daeb167c1955d7ec1" kindref="member">va_list</ref>;</highlight></codeline>
<codeline lineno="5" refid="stdarg_8h_1a8988b1f4b3f4ffef267962f5811f6031" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_VA_LIST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="stdarg_8h_1acb8ed71baba567b5548b6a0a64d6ea85" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>va_start(ap,<sp/>param)<sp/>__builtin_va_start(ap,<sp/>param)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="stdarg_8h_1acd9b3b9085ec072324c5fdac2b40304e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>va_end(ap)<sp/>__builtin_va_end(ap)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="stdarg_8h_1a81ebe6ea6253b0c6618e29de70fe10eb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>va_arg(ap,<sp/>type)<sp/>__builtin_va_arg(ap,<sp/>type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>GCC<sp/>always<sp/>defines<sp/>__va_copy,<sp/>but<sp/>does<sp/>not<sp/>define<sp/>va_copy<sp/>unless<sp/>in<sp/>c99<sp/>mode</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>or<sp/>-ansi<sp/>is<sp/>not<sp/>specified,<sp/>since<sp/>it<sp/>was<sp/>not<sp/>part<sp/>of<sp/>C90.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="stdarg_8h_1a976ad7c714ea97222be72c9c710915a0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__va_copy(d,<sp/>s)<sp/>__builtin_va_copy(d,<sp/>s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__STDC_VERSION__<sp/>&gt;=<sp/>199901L<sp/>||<sp/>__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>!defined(__STRICT_ANSI__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="stdarg_8h_1a19fd5658c088617859d4a89c657ec5cc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>va_copy(dest,<sp/>src)<sp/>__builtin_va_copy(dest,<sp/>src)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Hack<sp/>required<sp/>to<sp/>make<sp/>standard<sp/>headers<sp/>work,<sp/>at<sp/>least<sp/>on<sp/>Ubuntu<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__GNUC_VA_LIST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="stdarg_8h_1a738c42093fee248588075769434481f1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__GNUC_VA_LIST<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="stdarg_8h_1ab2a2078340888ab219073daba0853b5a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>__builtin_va_list<sp/><ref refid="stdarg_8h_1ab2a2078340888ab219073daba0853b5a" kindref="member">__gnuc_va_list</ref>;</highlight></codeline>
    </programlisting>
    <location file="src/include/lib/stdarg.h"/>
  </compounddef>
</doxygen>
