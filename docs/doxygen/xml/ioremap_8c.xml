<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="zh">
  <compounddef id="ioremap_8c" kind="file" language="C++">
    <compoundname>ioremap.c</compoundname>
    <includes refid="pgtable_8h" local="no">asm/pgtable.h</includes>
    <includes refid="types_8h" local="no">common/types.h</includes>
    <includes refid="ioremap_8h" local="no">os/ioremap.h</includes>
    <includes refid="mm_8h" local="no">os/mm.h</includes>
    <incdepgraph>
      <node id="2">
        <label>asm/pgtable.h</label>
        <link refid="pgtable_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>os/mm.h</label>
        <link refid="mm_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>common/errno.h</label>
        <link refid="errno_8h"/>
      </node>
      <node id="1">
        <label>src/kernel/mm/ioremap.c</label>
        <link refid="ioremap_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>asm/sbidef.h</label>
        <link refid="sbidef_8h"/>
      </node>
      <node id="5">
        <label>common/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>asm/sbi.h</label>
        <link refid="sbi_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>os/ioremap.h</label>
        <link refid="ioremap_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ioremap_8c_1a2f397ce1974c16f7e339fa1171182c1c" prot="public" static="yes" mutable="no">
        <type><ref refid="types_8h_1ad6cb5da84246290b3d730166b020f2a8" kindref="member">uintptr_t</ref></type>
        <definition>uintptr_t io_base</definition>
        <argsstring></argsstring>
        <name>io_base</name>
        <initializer>= <ref refid="ioremap_8h_1a083711245e22fdb2b86a27a1304b9bd3" kindref="member">IO_ADDR_START</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/mm/ioremap.c" line="7" column="18" bodyfile="src/kernel/mm/ioremap.c" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ioremap_8c_1a06061ac5dd5f56bf6f067893a2d6d621" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int io_count</definition>
        <argsstring></argsstring>
        <name>io_count</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/mm/ioremap.c" line="8" column="5" bodyfile="src/kernel/mm/ioremap.c" bodystart="8" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ioremap_8c_1a9ca808bb834ec9c82192df44ae9d8d2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* k_ioremap</definition>
        <argsstring>(unsigned long phys_addr, unsigned long size)</argsstring>
        <name>k_ioremap</name>
        <param>
          <type>unsigned long</type>
          <declname>phys_addr</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/mm/ioremap.c" line="10" column="6" bodyfile="src/kernel/mm/ioremap.c" bodystart="10" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="ioremap_8c_1ae9d1b87e29c658002d6a2352888cffc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void k_iounmap</definition>
        <argsstring>(void *io_addr)</argsstring>
        <name>k_iounmap</name>
        <param>
          <type>void *</type>
          <declname>io_addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kernel/mm/ioremap.c" line="26" column="6" bodyfile="src/kernel/mm/ioremap.c" bodystart="26" bodyend="29"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="pgtable_8h" kindref="compound">asm/pgtable.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="types_8h" kindref="compound">common/types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ioremap_8h" kindref="compound">os/ioremap.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="mm_8h" kindref="compound">os/mm.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>maybe<sp/>you<sp/>can<sp/>map<sp/>it<sp/>to<sp/>IO_ADDR_START<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="types_8h_1ad6cb5da84246290b3d730166b020f2a8" kindref="member">uintptr_t</ref><sp/>io_base<sp/>=<sp/><ref refid="ioremap_8h_1a083711245e22fdb2b86a27a1304b9bd3" kindref="member">IO_ADDR_START</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ioremap_8c_1a06061ac5dd5f56bf6f067893a2d6d621" kindref="member">io_count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="ioremap_8c_1a9ca808bb834ec9c82192df44ae9d8d2b" kindref="member">k_ioremap</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>phys_addr,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>map<sp/>phys_addr<sp/>to<sp/>a<sp/>virtual<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>return<sp/>the<sp/>virtual<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isize<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>va<sp/>=<sp/>io_base<sp/>+<sp/>0x1000<sp/>*<sp/><ref refid="ioremap_8c_1a06061ac5dd5f56bf6f067893a2d6d621" kindref="member">io_count</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(isize)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mm_8h_1a6c8f487e853159370c9535438212a9ca" kindref="member">k_mm_map_kp</ref>(io_base<sp/>+<sp/>0x1000<sp/>*<sp/><ref refid="ioremap_8c_1a06061ac5dd5f56bf6f067893a2d6d621" kindref="member">io_count</ref>,<sp/>phys_addr,<sp/>pa2kva(<ref refid="pgtable_8h_1aedc2ac196557ee36b7a3f9051e008a63" kindref="member">PGDIR_PA</ref>));</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ioremap_8c_1a06061ac5dd5f56bf6f067893a2d6d621" kindref="member">io_count</ref>++;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isize<sp/>-=<sp/>0x1000;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phys_addr<sp/>+=<sp/>0x1000;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set_satp(SATP_MODE_SV39,<sp/>0,<sp/>PGDIR_PA<sp/>&gt;&gt;<sp/>NORMAL_PAGE_SHIFT);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>local_flush_tlb_all();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)va;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ioremap_8c_1ae9d1b87e29c658002d6a2352888cffc3" kindref="member">k_iounmap</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*io_addr)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>maybe<sp/>no<sp/>one<sp/>would<sp/>call<sp/>this<sp/>function?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*pte<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/kernel/mm/ioremap.c"/>
  </compounddef>
</doxygen>
